// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AISData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AISData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBAISDynamic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBAISDynamic_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBAISStatic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBAISStatic_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBAISVoyage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBAISVoyage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Device_Class_Type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Commum_State_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Pos_Accuracy_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Fixing_Device_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AISData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_AISData_2eproto() {
  protobuf_AddDesc_AISData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AISData.proto");
  GOOGLE_CHECK(file != NULL);
  PBAISDynamic_descriptor_ = file->message_type(0);
  static const int PBAISDynamic_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, utctimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, intlongitudex60w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, intlatitudex60w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, cogdegreex10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, headingdegree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, sogknotsx10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, rot_sensor_degreeperminute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, enum_posaccuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, enum_communstate_),
  };
  PBAISDynamic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBAISDynamic_descriptor_,
      PBAISDynamic::internal_default_instance(),
      PBAISDynamic_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBAISDynamic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISDynamic, _internal_metadata_));
  PBAISStatic_descriptor_ = file->message_type(1);
  static const int PBAISStatic_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, utctimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, shiptype_ais_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, imo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, shipname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, callsign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, breadthmeters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, lenghmeters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, fixingdevice_),
  };
  PBAISStatic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBAISStatic_descriptor_,
      PBAISStatic::internal_default_instance(),
      PBAISStatic_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBAISStatic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISStatic, _internal_metadata_));
  PBAISVoyage_descriptor_ = file->message_type(2);
  static const int PBAISVoyage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, mmsi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, utctimestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, draftmetersx10_),
  };
  PBAISVoyage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBAISVoyage_descriptor_,
      PBAISVoyage::internal_default_instance(),
      PBAISVoyage_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBAISVoyage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAISVoyage, _internal_metadata_));
  PB_Enum_AIS_Device_Class_Type_descriptor_ = file->enum_type(0);
  PB_Enum_AIS_Commum_State_descriptor_ = file->enum_type(1);
  PB_Enum_AIS_Pos_Accuracy_descriptor_ = file->enum_type(2);
  PB_Enum_AIS_Fixing_Device_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AISData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBAISDynamic_descriptor_, PBAISDynamic::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBAISStatic_descriptor_, PBAISStatic::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBAISVoyage_descriptor_, PBAISVoyage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AISData_2eproto() {
  PBAISDynamic_default_instance_.Shutdown();
  delete PBAISDynamic_reflection_;
  PBAISStatic_default_instance_.Shutdown();
  delete PBAISStatic_reflection_;
  PBAISVoyage_default_instance_.Shutdown();
  delete PBAISVoyage_reflection_;
}

void protobuf_InitDefaults_AISData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  PBAISDynamic_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PBAISStatic_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PBAISVoyage_default_instance_.DefaultConstruct();
  PBAISDynamic_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBAISStatic_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBAISVoyage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_AISData_2eproto_once_);
void protobuf_InitDefaults_AISData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_AISData_2eproto_once_,
                 &protobuf_InitDefaults_AISData_2eproto_impl);
}
void protobuf_AddDesc_AISData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_AISData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rAISData.proto\"\305\002\n\014PBAISDynamic\022\024\n\014utcT"
    "imeStamp\030\001 \001(\r\022\014\n\004MMSI\030\002 \001(\005\022\030\n\020intLongi"
    "tudeX60W\030\003 \001(\005\022\027\n\017intLatitudeX60W\030\004 \001(\005\022"
    "\024\n\014COGDegreeX10\030\005 \001(\r\022\025\n\rheadingDegree\030\006"
    " \001(\r\022\023\n\013SOGKnotsX10\030\007 \001(\r\022\016\n\006Status\030\010 \001("
    "\r\022\"\n\032ROT_Sensor_DegreePerMinute\030\t \001(\005\0223\n"
    "\020enum_PosAccuracy\030\n \001(\0162\031.PB_Enum_AIS_Po"
    "s_Accuracy\0223\n\020enum_CommunState\030\013 \001(\0162\031.P"
    "B_Enum_AIS_Commum_State\"\326\001\n\013PBAISStatic\022"
    "\014\n\004MMSI\030\001 \001(\005\022\024\n\014utcTimeStamp\030\002 \001(\r\022\024\n\014s"
    "hipType_AIS\030\003 \001(\005\022\013\n\003IMO\030\004 \001(\r\022\020\n\010shipNa"
    "me\030\005 \001(\t\022\020\n\010callSign\030\006 \001(\t\022\025\n\rbreadthMet"
    "ers\030\007 \001(\r\022\023\n\013lenghMeters\030\010 \001(\r\0220\n\014fixing"
    "Device\030\t \001(\0162\032.PB_Enum_AIS_Fixing_Device"
    "\"k\n\013PBAISVoyage\022\014\n\004MMSI\030\001 \001(\005\022\024\n\014utcTime"
    "Stamp\030\002 \001(\r\022\023\n\013destination\030\003 \001(\t\022\013\n\003ETA\030"
    "\004 \001(\t\022\026\n\016draftMetersX10\030\005 \001(\r*c\n\035PB_Enum"
    "_AIS_Device_Class_Type\022 \n\034EV_AISDeviceCl"
    "assType_ClassA\020\000\022 \n\034EV_AISDeviceClassTyp"
    "e_ClassB\020\001*o\n\030PB_Enum_AIS_Commum_State\022\030"
    "\n\024EV_AISCommumState_NA\020\000\022\034\n\030EV_AISCommum"
    "State_SOTDMA\020\001\022\033\n\027EV_AISCommumState_ITDM"
    "A\020\002*k\n\030PB_Enum_AIS_Pos_Accuracy\022\030\n\024EV_AI"
    "SPosAccuracy_NA\020\000\022\031\n\025EV_AISPosAccuracy_L"
    "ow\020\001\022\032\n\026EV_AISPosAccuracy_High\020\002*\256\003\n\031PB_"
    "Enum_AIS_Fixing_Device\022\031\n\025EV_AISFixingDe"
    "vice_NA\020\000\022\032\n\026EV_AISFixingDevice_GPS\020\001\022\036\n"
    "\032EV_AISFixingDevice_GLONASS\020\002\022)\n%EV_AISF"
    "ixingDevice_CombinedGPSGLONASS\020\003\022\036\n\032EV_A"
    "ISFixingDevice_Loran_C\020\004\022\035\n\031EV_AISFixing"
    "Device_Chayka\020\005\022\'\n#EV_AISFixingDevice_In"
    "tegratedNavSys\020\006\022\037\n\033EV_AISFixingDevice_S"
    "urveyed\020\007\022\036\n\032EV_AISFixingDevice_Galileo\020"
    "\010\022\035\n\031EV_AISFixingDevice_Beidou\020\t\022\"\n\036EV_A"
    "ISFixingDevice_Observation\020\n\022#\n\037EV_AISFi"
    "xingDevice_InternalGNSS\020\017B\024\n\022team.iOcean"
    "Plus.PBb\006proto3", 1455);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AISData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AISData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_AISData_2eproto_once_);
void protobuf_AddDesc_AISData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_AISData_2eproto_once_,
                 &protobuf_AddDesc_AISData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AISData_2eproto {
  StaticDescriptorInitializer_AISData_2eproto() {
    protobuf_AddDesc_AISData_2eproto();
  }
} static_descriptor_initializer_AISData_2eproto_;
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Device_Class_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Enum_AIS_Device_Class_Type_descriptor_;
}
bool PB_Enum_AIS_Device_Class_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Commum_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Enum_AIS_Commum_State_descriptor_;
}
bool PB_Enum_AIS_Commum_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Pos_Accuracy_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Enum_AIS_Pos_Accuracy_descriptor_;
}
bool PB_Enum_AIS_Pos_Accuracy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Fixing_Device_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_Enum_AIS_Fixing_Device_descriptor_;
}
bool PB_Enum_AIS_Fixing_Device_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 15:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISDynamic::kUtcTimeStampFieldNumber;
const int PBAISDynamic::kMMSIFieldNumber;
const int PBAISDynamic::kIntLongitudeX60WFieldNumber;
const int PBAISDynamic::kIntLatitudeX60WFieldNumber;
const int PBAISDynamic::kCOGDegreeX10FieldNumber;
const int PBAISDynamic::kHeadingDegreeFieldNumber;
const int PBAISDynamic::kSOGKnotsX10FieldNumber;
const int PBAISDynamic::kStatusFieldNumber;
const int PBAISDynamic::kROTSensorDegreePerMinuteFieldNumber;
const int PBAISDynamic::kEnumPosAccuracyFieldNumber;
const int PBAISDynamic::kEnumCommunStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISDynamic::PBAISDynamic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AISData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISDynamic)
}

void PBAISDynamic::InitAsDefaultInstance() {
}

PBAISDynamic::PBAISDynamic(const PBAISDynamic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBAISDynamic)
}

void PBAISDynamic::SharedCtor() {
  ::memset(&utctimestamp_, 0, reinterpret_cast<char*>(&enum_communstate_) -
    reinterpret_cast<char*>(&utctimestamp_) + sizeof(enum_communstate_));
  _cached_size_ = 0;
}

PBAISDynamic::~PBAISDynamic() {
  // @@protoc_insertion_point(destructor:PBAISDynamic)
  SharedDtor();
}

void PBAISDynamic::SharedDtor() {
}

void PBAISDynamic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAISDynamic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBAISDynamic_descriptor_;
}

const PBAISDynamic& PBAISDynamic::default_instance() {
  protobuf_InitDefaults_AISData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBAISDynamic> PBAISDynamic_default_instance_;

PBAISDynamic* PBAISDynamic::New(::google::protobuf::Arena* arena) const {
  PBAISDynamic* n = new PBAISDynamic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAISDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISDynamic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBAISDynamic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBAISDynamic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(utctimestamp_, status_);
  ZR_(rot_sensor_degreeperminute_, enum_communstate_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBAISDynamic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISDynamic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 utcTimeStamp = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MMSI;
        break;
      }

      // optional int32 MMSI = 2;
      case 2: {
        if (tag == 16) {
         parse_MMSI:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_intLongitudeX60W;
        break;
      }

      // optional int32 intLongitudeX60W = 3;
      case 3: {
        if (tag == 24) {
         parse_intLongitudeX60W:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intlongitudex60w_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_intLatitudeX60W;
        break;
      }

      // optional int32 intLatitudeX60W = 4;
      case 4: {
        if (tag == 32) {
         parse_intLatitudeX60W:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intlatitudex60w_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_COGDegreeX10;
        break;
      }

      // optional uint32 COGDegreeX10 = 5;
      case 5: {
        if (tag == 40) {
         parse_COGDegreeX10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cogdegreex10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_headingDegree;
        break;
      }

      // optional uint32 headingDegree = 6;
      case 6: {
        if (tag == 48) {
         parse_headingDegree:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &headingdegree_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SOGKnotsX10;
        break;
      }

      // optional uint32 SOGKnotsX10 = 7;
      case 7: {
        if (tag == 56) {
         parse_SOGKnotsX10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sogknotsx10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Status;
        break;
      }

      // optional uint32 Status = 8;
      case 8: {
        if (tag == 64) {
         parse_Status:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_ROT_Sensor_DegreePerMinute;
        break;
      }

      // optional int32 ROT_Sensor_DegreePerMinute = 9;
      case 9: {
        if (tag == 72) {
         parse_ROT_Sensor_DegreePerMinute:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rot_sensor_degreeperminute_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_enum_PosAccuracy;
        break;
      }

      // optional .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
      case 10: {
        if (tag == 80) {
         parse_enum_PosAccuracy:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_posaccuracy(static_cast< ::PB_Enum_AIS_Pos_Accuracy >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_enum_CommunState;
        break;
      }

      // optional .PB_Enum_AIS_Commum_State enum_CommunState = 11;
      case 11: {
        if (tag == 88) {
         parse_enum_CommunState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_communstate(static_cast< ::PB_Enum_AIS_Commum_State >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISDynamic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISDynamic)
  return false;
#undef DO_
}

void PBAISDynamic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISDynamic)
  // optional uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->utctimestamp(), output);
  }

  // optional int32 MMSI = 2;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mmsi(), output);
  }

  // optional int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intlongitudex60w(), output);
  }

  // optional int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->intlatitudex60w(), output);
  }

  // optional uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cogdegreex10(), output);
  }

  // optional uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->headingdegree(), output);
  }

  // optional uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sogknotsx10(), output);
  }

  // optional uint32 Status = 8;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->status(), output);
  }

  // optional int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->rot_sensor_degreeperminute(), output);
  }

  // optional .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->enum_posaccuracy(), output);
  }

  // optional .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->enum_communstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBAISDynamic)
}

::google::protobuf::uint8* PBAISDynamic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISDynamic)
  // optional uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->utctimestamp(), target);
  }

  // optional int32 MMSI = 2;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mmsi(), target);
  }

  // optional int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intlongitudex60w(), target);
  }

  // optional int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->intlatitudex60w(), target);
  }

  // optional uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cogdegreex10(), target);
  }

  // optional uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->headingdegree(), target);
  }

  // optional uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sogknotsx10(), target);
  }

  // optional uint32 Status = 8;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->status(), target);
  }

  // optional int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->rot_sensor_degreeperminute(), target);
  }

  // optional .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->enum_posaccuracy(), target);
  }

  // optional .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->enum_communstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBAISDynamic)
  return target;
}

size_t PBAISDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISDynamic)
  size_t total_size = 0;

  // optional uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // optional int32 MMSI = 2;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // optional int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intlongitudex60w());
  }

  // optional int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intlatitudex60w());
  }

  // optional uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cogdegreex10());
  }

  // optional uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->headingdegree());
  }

  // optional uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sogknotsx10());
  }

  // optional uint32 Status = 8;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rot_sensor_degreeperminute());
  }

  // optional .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_posaccuracy());
  }

  // optional .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_communstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAISDynamic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISDynamic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBAISDynamic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISDynamic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISDynamic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISDynamic)
    UnsafeMergeFrom(*source);
  }
}

void PBAISDynamic::MergeFrom(const PBAISDynamic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISDynamic)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBAISDynamic::UnsafeMergeFrom(const PBAISDynamic& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.intlongitudex60w() != 0) {
    set_intlongitudex60w(from.intlongitudex60w());
  }
  if (from.intlatitudex60w() != 0) {
    set_intlatitudex60w(from.intlatitudex60w());
  }
  if (from.cogdegreex10() != 0) {
    set_cogdegreex10(from.cogdegreex10());
  }
  if (from.headingdegree() != 0) {
    set_headingdegree(from.headingdegree());
  }
  if (from.sogknotsx10() != 0) {
    set_sogknotsx10(from.sogknotsx10());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.rot_sensor_degreeperminute() != 0) {
    set_rot_sensor_degreeperminute(from.rot_sensor_degreeperminute());
  }
  if (from.enum_posaccuracy() != 0) {
    set_enum_posaccuracy(from.enum_posaccuracy());
  }
  if (from.enum_communstate() != 0) {
    set_enum_communstate(from.enum_communstate());
  }
}

void PBAISDynamic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISDynamic::CopyFrom(const PBAISDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISDynamic)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBAISDynamic::IsInitialized() const {

  return true;
}

void PBAISDynamic::Swap(PBAISDynamic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISDynamic::InternalSwap(PBAISDynamic* other) {
  std::swap(utctimestamp_, other->utctimestamp_);
  std::swap(mmsi_, other->mmsi_);
  std::swap(intlongitudex60w_, other->intlongitudex60w_);
  std::swap(intlatitudex60w_, other->intlatitudex60w_);
  std::swap(cogdegreex10_, other->cogdegreex10_);
  std::swap(headingdegree_, other->headingdegree_);
  std::swap(sogknotsx10_, other->sogknotsx10_);
  std::swap(status_, other->status_);
  std::swap(rot_sensor_degreeperminute_, other->rot_sensor_degreeperminute_);
  std::swap(enum_posaccuracy_, other->enum_posaccuracy_);
  std::swap(enum_communstate_, other->enum_communstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAISDynamic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBAISDynamic_descriptor_;
  metadata.reflection = PBAISDynamic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAISDynamic

// optional uint32 utcTimeStamp = 1;
void PBAISDynamic::clear_utctimestamp() {
  utctimestamp_ = 0u;
}
::google::protobuf::uint32 PBAISDynamic::utctimestamp() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.utcTimeStamp)
  return utctimestamp_;
}
void PBAISDynamic::set_utctimestamp(::google::protobuf::uint32 value) {
  
  utctimestamp_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.utcTimeStamp)
}

// optional int32 MMSI = 2;
void PBAISDynamic::clear_mmsi() {
  mmsi_ = 0;
}
::google::protobuf::int32 PBAISDynamic::mmsi() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.MMSI)
  return mmsi_;
}
void PBAISDynamic::set_mmsi(::google::protobuf::int32 value) {
  
  mmsi_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.MMSI)
}

// optional int32 intLongitudeX60W = 3;
void PBAISDynamic::clear_intlongitudex60w() {
  intlongitudex60w_ = 0;
}
::google::protobuf::int32 PBAISDynamic::intlongitudex60w() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.intLongitudeX60W)
  return intlongitudex60w_;
}
void PBAISDynamic::set_intlongitudex60w(::google::protobuf::int32 value) {
  
  intlongitudex60w_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.intLongitudeX60W)
}

// optional int32 intLatitudeX60W = 4;
void PBAISDynamic::clear_intlatitudex60w() {
  intlatitudex60w_ = 0;
}
::google::protobuf::int32 PBAISDynamic::intlatitudex60w() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.intLatitudeX60W)
  return intlatitudex60w_;
}
void PBAISDynamic::set_intlatitudex60w(::google::protobuf::int32 value) {
  
  intlatitudex60w_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.intLatitudeX60W)
}

// optional uint32 COGDegreeX10 = 5;
void PBAISDynamic::clear_cogdegreex10() {
  cogdegreex10_ = 0u;
}
::google::protobuf::uint32 PBAISDynamic::cogdegreex10() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.COGDegreeX10)
  return cogdegreex10_;
}
void PBAISDynamic::set_cogdegreex10(::google::protobuf::uint32 value) {
  
  cogdegreex10_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.COGDegreeX10)
}

// optional uint32 headingDegree = 6;
void PBAISDynamic::clear_headingdegree() {
  headingdegree_ = 0u;
}
::google::protobuf::uint32 PBAISDynamic::headingdegree() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.headingDegree)
  return headingdegree_;
}
void PBAISDynamic::set_headingdegree(::google::protobuf::uint32 value) {
  
  headingdegree_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.headingDegree)
}

// optional uint32 SOGKnotsX10 = 7;
void PBAISDynamic::clear_sogknotsx10() {
  sogknotsx10_ = 0u;
}
::google::protobuf::uint32 PBAISDynamic::sogknotsx10() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.SOGKnotsX10)
  return sogknotsx10_;
}
void PBAISDynamic::set_sogknotsx10(::google::protobuf::uint32 value) {
  
  sogknotsx10_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.SOGKnotsX10)
}

// optional uint32 Status = 8;
void PBAISDynamic::clear_status() {
  status_ = 0u;
}
::google::protobuf::uint32 PBAISDynamic::status() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.Status)
  return status_;
}
void PBAISDynamic::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.Status)
}

// optional int32 ROT_Sensor_DegreePerMinute = 9;
void PBAISDynamic::clear_rot_sensor_degreeperminute() {
  rot_sensor_degreeperminute_ = 0;
}
::google::protobuf::int32 PBAISDynamic::rot_sensor_degreeperminute() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.ROT_Sensor_DegreePerMinute)
  return rot_sensor_degreeperminute_;
}
void PBAISDynamic::set_rot_sensor_degreeperminute(::google::protobuf::int32 value) {
  
  rot_sensor_degreeperminute_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.ROT_Sensor_DegreePerMinute)
}

// optional .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
void PBAISDynamic::clear_enum_posaccuracy() {
  enum_posaccuracy_ = 0;
}
::PB_Enum_AIS_Pos_Accuracy PBAISDynamic::enum_posaccuracy() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.enum_PosAccuracy)
  return static_cast< ::PB_Enum_AIS_Pos_Accuracy >(enum_posaccuracy_);
}
void PBAISDynamic::set_enum_posaccuracy(::PB_Enum_AIS_Pos_Accuracy value) {
  
  enum_posaccuracy_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.enum_PosAccuracy)
}

// optional .PB_Enum_AIS_Commum_State enum_CommunState = 11;
void PBAISDynamic::clear_enum_communstate() {
  enum_communstate_ = 0;
}
::PB_Enum_AIS_Commum_State PBAISDynamic::enum_communstate() const {
  // @@protoc_insertion_point(field_get:PBAISDynamic.enum_CommunState)
  return static_cast< ::PB_Enum_AIS_Commum_State >(enum_communstate_);
}
void PBAISDynamic::set_enum_communstate(::PB_Enum_AIS_Commum_State value) {
  
  enum_communstate_ = value;
  // @@protoc_insertion_point(field_set:PBAISDynamic.enum_CommunState)
}

inline const PBAISDynamic* PBAISDynamic::internal_default_instance() {
  return &PBAISDynamic_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISStatic::kMMSIFieldNumber;
const int PBAISStatic::kUtcTimeStampFieldNumber;
const int PBAISStatic::kShipTypeAISFieldNumber;
const int PBAISStatic::kIMOFieldNumber;
const int PBAISStatic::kShipNameFieldNumber;
const int PBAISStatic::kCallSignFieldNumber;
const int PBAISStatic::kBreadthMetersFieldNumber;
const int PBAISStatic::kLenghMetersFieldNumber;
const int PBAISStatic::kFixingDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISStatic::PBAISStatic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AISData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISStatic)
}

void PBAISStatic::InitAsDefaultInstance() {
}

PBAISStatic::PBAISStatic(const PBAISStatic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBAISStatic)
}

void PBAISStatic::SharedCtor() {
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, reinterpret_cast<char*>(&fixingdevice_) -
    reinterpret_cast<char*>(&mmsi_) + sizeof(fixingdevice_));
  _cached_size_ = 0;
}

PBAISStatic::~PBAISStatic() {
  // @@protoc_insertion_point(destructor:PBAISStatic)
  SharedDtor();
}

void PBAISStatic::SharedDtor() {
  shipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBAISStatic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAISStatic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBAISStatic_descriptor_;
}

const PBAISStatic& PBAISStatic::default_instance() {
  protobuf_InitDefaults_AISData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBAISStatic> PBAISStatic_default_instance_;

PBAISStatic* PBAISStatic::New(::google::protobuf::Arena* arena) const {
  PBAISStatic* n = new PBAISStatic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAISStatic::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISStatic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBAISStatic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBAISStatic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mmsi_, lenghmeters_);
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixingdevice_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool PBAISStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISStatic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MMSI = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_utcTimeStamp;
        break;
      }

      // optional uint32 utcTimeStamp = 2;
      case 2: {
        if (tag == 16) {
         parse_utcTimeStamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_shipType_AIS;
        break;
      }

      // optional int32 shipType_AIS = 3;
      case 3: {
        if (tag == 24) {
         parse_shipType_AIS:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shiptype_ais_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_IMO;
        break;
      }

      // optional uint32 IMO = 4;
      case 4: {
        if (tag == 32) {
         parse_IMO:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_shipName;
        break;
      }

      // optional string shipName = 5;
      case 5: {
        if (tag == 42) {
         parse_shipName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shipname().data(), this->shipname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISStatic.shipName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_callSign;
        break;
      }

      // optional string callSign = 6;
      case 6: {
        if (tag == 50) {
         parse_callSign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callsign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callsign().data(), this->callsign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISStatic.callSign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_breadthMeters;
        break;
      }

      // optional uint32 breadthMeters = 7;
      case 7: {
        if (tag == 56) {
         parse_breadthMeters:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breadthmeters_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_lenghMeters;
        break;
      }

      // optional uint32 lenghMeters = 8;
      case 8: {
        if (tag == 64) {
         parse_lenghMeters:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lenghmeters_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_fixingDevice;
        break;
      }

      // optional .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
      case 9: {
        if (tag == 72) {
         parse_fixingDevice:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fixingdevice(static_cast< ::PB_Enum_AIS_Fixing_Device >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISStatic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISStatic)
  return false;
#undef DO_
}

void PBAISStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISStatic)
  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mmsi(), output);
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->utctimestamp(), output);
  }

  // optional int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shiptype_ais(), output);
  }

  // optional uint32 IMO = 4;
  if (this->imo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->imo(), output);
  }

  // optional string shipName = 5;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.shipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->shipname(), output);
  }

  // optional string callSign = 6;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.callSign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->callsign(), output);
  }

  // optional uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->breadthmeters(), output);
  }

  // optional uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lenghmeters(), output);
  }

  // optional .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->fixingdevice(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBAISStatic)
}

::google::protobuf::uint8* PBAISStatic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISStatic)
  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mmsi(), target);
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->utctimestamp(), target);
  }

  // optional int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shiptype_ais(), target);
  }

  // optional uint32 IMO = 4;
  if (this->imo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->imo(), target);
  }

  // optional string shipName = 5;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), this->shipname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.shipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->shipname(), target);
  }

  // optional string callSign = 6;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), this->callsign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.callSign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->callsign(), target);
  }

  // optional uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->breadthmeters(), target);
  }

  // optional uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lenghmeters(), target);
  }

  // optional .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->fixingdevice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBAISStatic)
  return target;
}

size_t PBAISStatic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISStatic)
  size_t total_size = 0;

  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // optional int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shiptype_ais());
  }

  // optional uint32 IMO = 4;
  if (this->imo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imo());
  }

  // optional string shipName = 5;
  if (this->shipname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shipname());
  }

  // optional string callSign = 6;
  if (this->callsign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callsign());
  }

  // optional uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breadthmeters());
  }

  // optional uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lenghmeters());
  }

  // optional .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fixingdevice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAISStatic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISStatic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBAISStatic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISStatic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISStatic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISStatic)
    UnsafeMergeFrom(*source);
  }
}

void PBAISStatic::MergeFrom(const PBAISStatic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISStatic)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBAISStatic::UnsafeMergeFrom(const PBAISStatic& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.shiptype_ais() != 0) {
    set_shiptype_ais(from.shiptype_ais());
  }
  if (from.imo() != 0) {
    set_imo(from.imo());
  }
  if (from.shipname().size() > 0) {

    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  if (from.callsign().size() > 0) {

    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  if (from.breadthmeters() != 0) {
    set_breadthmeters(from.breadthmeters());
  }
  if (from.lenghmeters() != 0) {
    set_lenghmeters(from.lenghmeters());
  }
  if (from.fixingdevice() != 0) {
    set_fixingdevice(from.fixingdevice());
  }
}

void PBAISStatic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISStatic::CopyFrom(const PBAISStatic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISStatic)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBAISStatic::IsInitialized() const {

  return true;
}

void PBAISStatic::Swap(PBAISStatic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISStatic::InternalSwap(PBAISStatic* other) {
  std::swap(mmsi_, other->mmsi_);
  std::swap(utctimestamp_, other->utctimestamp_);
  std::swap(shiptype_ais_, other->shiptype_ais_);
  std::swap(imo_, other->imo_);
  shipname_.Swap(&other->shipname_);
  callsign_.Swap(&other->callsign_);
  std::swap(breadthmeters_, other->breadthmeters_);
  std::swap(lenghmeters_, other->lenghmeters_);
  std::swap(fixingdevice_, other->fixingdevice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAISStatic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBAISStatic_descriptor_;
  metadata.reflection = PBAISStatic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAISStatic

// optional int32 MMSI = 1;
void PBAISStatic::clear_mmsi() {
  mmsi_ = 0;
}
::google::protobuf::int32 PBAISStatic::mmsi() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.MMSI)
  return mmsi_;
}
void PBAISStatic::set_mmsi(::google::protobuf::int32 value) {
  
  mmsi_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.MMSI)
}

// optional uint32 utcTimeStamp = 2;
void PBAISStatic::clear_utctimestamp() {
  utctimestamp_ = 0u;
}
::google::protobuf::uint32 PBAISStatic::utctimestamp() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.utcTimeStamp)
  return utctimestamp_;
}
void PBAISStatic::set_utctimestamp(::google::protobuf::uint32 value) {
  
  utctimestamp_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.utcTimeStamp)
}

// optional int32 shipType_AIS = 3;
void PBAISStatic::clear_shiptype_ais() {
  shiptype_ais_ = 0;
}
::google::protobuf::int32 PBAISStatic::shiptype_ais() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.shipType_AIS)
  return shiptype_ais_;
}
void PBAISStatic::set_shiptype_ais(::google::protobuf::int32 value) {
  
  shiptype_ais_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.shipType_AIS)
}

// optional uint32 IMO = 4;
void PBAISStatic::clear_imo() {
  imo_ = 0u;
}
::google::protobuf::uint32 PBAISStatic::imo() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.IMO)
  return imo_;
}
void PBAISStatic::set_imo(::google::protobuf::uint32 value) {
  
  imo_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.IMO)
}

// optional string shipName = 5;
void PBAISStatic::clear_shipname() {
  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBAISStatic::shipname() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.shipName)
  return shipname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISStatic::set_shipname(const ::std::string& value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAISStatic.shipName)
}
void PBAISStatic::set_shipname(const char* value) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAISStatic.shipName)
}
void PBAISStatic::set_shipname(const char* value, size_t size) {
  
  shipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAISStatic.shipName)
}
::std::string* PBAISStatic::mutable_shipname() {
  
  // @@protoc_insertion_point(field_mutable:PBAISStatic.shipName)
  return shipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBAISStatic::release_shipname() {
  // @@protoc_insertion_point(field_release:PBAISStatic.shipName)
  
  return shipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISStatic::set_allocated_shipname(::std::string* shipname) {
  if (shipname != NULL) {
    
  } else {
    
  }
  shipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipname);
  // @@protoc_insertion_point(field_set_allocated:PBAISStatic.shipName)
}

// optional string callSign = 6;
void PBAISStatic::clear_callsign() {
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBAISStatic::callsign() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.callSign)
  return callsign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISStatic::set_callsign(const ::std::string& value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAISStatic.callSign)
}
void PBAISStatic::set_callsign(const char* value) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAISStatic.callSign)
}
void PBAISStatic::set_callsign(const char* value, size_t size) {
  
  callsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAISStatic.callSign)
}
::std::string* PBAISStatic::mutable_callsign() {
  
  // @@protoc_insertion_point(field_mutable:PBAISStatic.callSign)
  return callsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBAISStatic::release_callsign() {
  // @@protoc_insertion_point(field_release:PBAISStatic.callSign)
  
  return callsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISStatic::set_allocated_callsign(::std::string* callsign) {
  if (callsign != NULL) {
    
  } else {
    
  }
  callsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callsign);
  // @@protoc_insertion_point(field_set_allocated:PBAISStatic.callSign)
}

// optional uint32 breadthMeters = 7;
void PBAISStatic::clear_breadthmeters() {
  breadthmeters_ = 0u;
}
::google::protobuf::uint32 PBAISStatic::breadthmeters() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.breadthMeters)
  return breadthmeters_;
}
void PBAISStatic::set_breadthmeters(::google::protobuf::uint32 value) {
  
  breadthmeters_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.breadthMeters)
}

// optional uint32 lenghMeters = 8;
void PBAISStatic::clear_lenghmeters() {
  lenghmeters_ = 0u;
}
::google::protobuf::uint32 PBAISStatic::lenghmeters() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.lenghMeters)
  return lenghmeters_;
}
void PBAISStatic::set_lenghmeters(::google::protobuf::uint32 value) {
  
  lenghmeters_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.lenghMeters)
}

// optional .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
void PBAISStatic::clear_fixingdevice() {
  fixingdevice_ = 0;
}
::PB_Enum_AIS_Fixing_Device PBAISStatic::fixingdevice() const {
  // @@protoc_insertion_point(field_get:PBAISStatic.fixingDevice)
  return static_cast< ::PB_Enum_AIS_Fixing_Device >(fixingdevice_);
}
void PBAISStatic::set_fixingdevice(::PB_Enum_AIS_Fixing_Device value) {
  
  fixingdevice_ = value;
  // @@protoc_insertion_point(field_set:PBAISStatic.fixingDevice)
}

inline const PBAISStatic* PBAISStatic::internal_default_instance() {
  return &PBAISStatic_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISVoyage::kMMSIFieldNumber;
const int PBAISVoyage::kUtcTimeStampFieldNumber;
const int PBAISVoyage::kDestinationFieldNumber;
const int PBAISVoyage::kETAFieldNumber;
const int PBAISVoyage::kDraftMetersX10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISVoyage::PBAISVoyage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_AISData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISVoyage)
}

void PBAISVoyage::InitAsDefaultInstance() {
}

PBAISVoyage::PBAISVoyage(const PBAISVoyage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBAISVoyage)
}

void PBAISVoyage::SharedCtor() {
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, reinterpret_cast<char*>(&draftmetersx10_) -
    reinterpret_cast<char*>(&mmsi_) + sizeof(draftmetersx10_));
  _cached_size_ = 0;
}

PBAISVoyage::~PBAISVoyage() {
  // @@protoc_insertion_point(destructor:PBAISVoyage)
  SharedDtor();
}

void PBAISVoyage::SharedDtor() {
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBAISVoyage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAISVoyage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBAISVoyage_descriptor_;
}

const PBAISVoyage& PBAISVoyage::default_instance() {
  protobuf_InitDefaults_AISData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBAISVoyage> PBAISVoyage_default_instance_;

PBAISVoyage* PBAISVoyage::New(::google::protobuf::Arena* arena) const {
  PBAISVoyage* n = new PBAISVoyage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAISVoyage::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISVoyage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBAISVoyage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBAISVoyage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mmsi_, draftmetersx10_);
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PBAISVoyage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISVoyage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MMSI = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_utcTimeStamp;
        break;
      }

      // optional uint32 utcTimeStamp = 2;
      case 2: {
        if (tag == 16) {
         parse_utcTimeStamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_destination;
        break;
      }

      // optional string destination = 3;
      case 3: {
        if (tag == 26) {
         parse_destination:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), this->destination().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISVoyage.destination"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ETA;
        break;
      }

      // optional string ETA = 4;
      case 4: {
        if (tag == 34) {
         parse_ETA:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eta()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eta().data(), this->eta().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISVoyage.ETA"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_draftMetersX10;
        break;
      }

      // optional uint32 draftMetersX10 = 5;
      case 5: {
        if (tag == 40) {
         parse_draftMetersX10:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &draftmetersx10_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISVoyage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISVoyage)
  return false;
#undef DO_
}

void PBAISVoyage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISVoyage)
  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mmsi(), output);
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->utctimestamp(), output);
  }

  // optional string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination(), output);
  }

  // optional string ETA = 4;
  if (this->eta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eta().data(), this->eta().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.ETA");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->eta(), output);
  }

  // optional uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->draftmetersx10(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBAISVoyage)
}

::google::protobuf::uint8* PBAISVoyage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISVoyage)
  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mmsi(), target);
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->utctimestamp(), target);
  }

  // optional string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), this->destination().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination(), target);
  }

  // optional string ETA = 4;
  if (this->eta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eta().data(), this->eta().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.ETA");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->eta(), target);
  }

  // optional uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->draftmetersx10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBAISVoyage)
  return target;
}

size_t PBAISVoyage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISVoyage)
  size_t total_size = 0;

  // optional int32 MMSI = 1;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // optional uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // optional string destination = 3;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // optional string ETA = 4;
  if (this->eta().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eta());
  }

  // optional uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->draftmetersx10());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAISVoyage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISVoyage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBAISVoyage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISVoyage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISVoyage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISVoyage)
    UnsafeMergeFrom(*source);
  }
}

void PBAISVoyage::MergeFrom(const PBAISVoyage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISVoyage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBAISVoyage::UnsafeMergeFrom(const PBAISVoyage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.destination().size() > 0) {

    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  if (from.eta().size() > 0) {

    eta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eta_);
  }
  if (from.draftmetersx10() != 0) {
    set_draftmetersx10(from.draftmetersx10());
  }
}

void PBAISVoyage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISVoyage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISVoyage::CopyFrom(const PBAISVoyage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISVoyage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBAISVoyage::IsInitialized() const {

  return true;
}

void PBAISVoyage::Swap(PBAISVoyage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISVoyage::InternalSwap(PBAISVoyage* other) {
  std::swap(mmsi_, other->mmsi_);
  std::swap(utctimestamp_, other->utctimestamp_);
  destination_.Swap(&other->destination_);
  eta_.Swap(&other->eta_);
  std::swap(draftmetersx10_, other->draftmetersx10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAISVoyage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBAISVoyage_descriptor_;
  metadata.reflection = PBAISVoyage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAISVoyage

// optional int32 MMSI = 1;
void PBAISVoyage::clear_mmsi() {
  mmsi_ = 0;
}
::google::protobuf::int32 PBAISVoyage::mmsi() const {
  // @@protoc_insertion_point(field_get:PBAISVoyage.MMSI)
  return mmsi_;
}
void PBAISVoyage::set_mmsi(::google::protobuf::int32 value) {
  
  mmsi_ = value;
  // @@protoc_insertion_point(field_set:PBAISVoyage.MMSI)
}

// optional uint32 utcTimeStamp = 2;
void PBAISVoyage::clear_utctimestamp() {
  utctimestamp_ = 0u;
}
::google::protobuf::uint32 PBAISVoyage::utctimestamp() const {
  // @@protoc_insertion_point(field_get:PBAISVoyage.utcTimeStamp)
  return utctimestamp_;
}
void PBAISVoyage::set_utctimestamp(::google::protobuf::uint32 value) {
  
  utctimestamp_ = value;
  // @@protoc_insertion_point(field_set:PBAISVoyage.utcTimeStamp)
}

// optional string destination = 3;
void PBAISVoyage::clear_destination() {
  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBAISVoyage::destination() const {
  // @@protoc_insertion_point(field_get:PBAISVoyage.destination)
  return destination_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISVoyage::set_destination(const ::std::string& value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAISVoyage.destination)
}
void PBAISVoyage::set_destination(const char* value) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAISVoyage.destination)
}
void PBAISVoyage::set_destination(const char* value, size_t size) {
  
  destination_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAISVoyage.destination)
}
::std::string* PBAISVoyage::mutable_destination() {
  
  // @@protoc_insertion_point(field_mutable:PBAISVoyage.destination)
  return destination_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBAISVoyage::release_destination() {
  // @@protoc_insertion_point(field_release:PBAISVoyage.destination)
  
  return destination_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISVoyage::set_allocated_destination(::std::string* destination) {
  if (destination != NULL) {
    
  } else {
    
  }
  destination_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination);
  // @@protoc_insertion_point(field_set_allocated:PBAISVoyage.destination)
}

// optional string ETA = 4;
void PBAISVoyage::clear_eta() {
  eta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBAISVoyage::eta() const {
  // @@protoc_insertion_point(field_get:PBAISVoyage.ETA)
  return eta_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISVoyage::set_eta(const ::std::string& value) {
  
  eta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBAISVoyage.ETA)
}
void PBAISVoyage::set_eta(const char* value) {
  
  eta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBAISVoyage.ETA)
}
void PBAISVoyage::set_eta(const char* value, size_t size) {
  
  eta_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBAISVoyage.ETA)
}
::std::string* PBAISVoyage::mutable_eta() {
  
  // @@protoc_insertion_point(field_mutable:PBAISVoyage.ETA)
  return eta_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBAISVoyage::release_eta() {
  // @@protoc_insertion_point(field_release:PBAISVoyage.ETA)
  
  return eta_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBAISVoyage::set_allocated_eta(::std::string* eta) {
  if (eta != NULL) {
    
  } else {
    
  }
  eta_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eta);
  // @@protoc_insertion_point(field_set_allocated:PBAISVoyage.ETA)
}

// optional uint32 draftMetersX10 = 5;
void PBAISVoyage::clear_draftmetersx10() {
  draftmetersx10_ = 0u;
}
::google::protobuf::uint32 PBAISVoyage::draftmetersx10() const {
  // @@protoc_insertion_point(field_get:PBAISVoyage.draftMetersX10)
  return draftmetersx10_;
}
void PBAISVoyage::set_draftmetersx10(::google::protobuf::uint32 value) {
  
  draftmetersx10_ = value;
  // @@protoc_insertion_point(field_set:PBAISVoyage.draftMetersX10)
}

inline const PBAISVoyage* PBAISVoyage::internal_default_instance() {
  return &PBAISVoyage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
