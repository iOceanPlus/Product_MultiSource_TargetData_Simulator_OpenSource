// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonEnum.proto

#ifndef PROTOBUF_CommonEnum_2eproto__INCLUDED
#define PROTOBUF_CommonEnum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_CommonEnum_2eproto();
void protobuf_InitDefaults_CommonEnum_2eproto();
void protobuf_AssignDesc_CommonEnum_2eproto();
void protobuf_ShutdownFile_CommonEnum_2eproto();


enum PB_Enum_Aggregated_AIS_Ship_Type {
  EV_AggregatedAISShipType_NA = 0,
  EV_AggregatedAISShipType_CargoShip = 1,
  EV_AggregatedAISShipType_SARShip = 2,
  EV_AggregatedAISShipType_Tanker = 3,
  EV_AggregatedAISShipType_Tug = 4,
  EV_AggregatedAISShipType_FishingShip = 5,
  EV_AggregatedAISShipType_TowingShip = 6,
  EV_AggregatedAISShipType_PassengerShip = 7,
  EV_AggregatedAISShipType_MilitaryShip = 8,
  EV_AggregatedAISShipType_LawEnforcementShip = 9,
  EV_AggregatedAISShipType_WIGShip = 10,
  EV_AggregatedAISShipType_HSCShip = 11,
  EV_AggregatedAISShipType_Pilot = 12,
  EV_AggregatedAISShipType_PortTender = 13,
  EV_AggregatedAISShipType_Sailing = 14,
  EV_AggregatedAISShipType_PleasureCraft = 15,
  EV_AggregatedAISShipType_UnderwaterOperation = 16,
  EV_AggregatedAISShipType_Diving = 17,
  EV_AggregatedAISShipType_Others = 100,
  EV_AggregatedAISShipType_Any = 101,
  PB_Enum_Aggregated_AIS_Ship_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_Aggregated_AIS_Ship_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_Aggregated_AIS_Ship_Type_IsValid(int value);
const PB_Enum_Aggregated_AIS_Ship_Type PB_Enum_Aggregated_AIS_Ship_Type_MIN = EV_AggregatedAISShipType_NA;
const PB_Enum_Aggregated_AIS_Ship_Type PB_Enum_Aggregated_AIS_Ship_Type_MAX = EV_AggregatedAISShipType_Any;
const int PB_Enum_Aggregated_AIS_Ship_Type_ARRAYSIZE = PB_Enum_Aggregated_AIS_Ship_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_Aggregated_AIS_Ship_Type_descriptor();
inline const ::std::string& PB_Enum_Aggregated_AIS_Ship_Type_Name(PB_Enum_Aggregated_AIS_Ship_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_Aggregated_AIS_Ship_Type_descriptor(), value);
}
inline bool PB_Enum_Aggregated_AIS_Ship_Type_Parse(
    const ::std::string& name, PB_Enum_Aggregated_AIS_Ship_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_Aggregated_AIS_Ship_Type>(
    PB_Enum_Aggregated_AIS_Ship_Type_descriptor(), name, value);
}
enum PB_Enum_ShipAnomalyType {
  EV_ShipAnomalyType_NORMAL = 0,
  EV_ShipAnomalyType_SUSPICIOUS_TRACK = 1,
  EV_ShipAnomalyType_HIGH_SPEED = 2,
  EV_ShipAnomalyType_HIGH_ROT_Sensor = 3,
  EV_ShipAnomalyType_NOT_UNDER_COMMAND = 4,
  EV_ShipAnomalyType_AGROUND = 5,
  EV_ShipAnomalyType_RESTRICTED_Manoeuvrability = 6,
  EV_ShipAnomalyType_MilitaryShip = 7,
  EV_ShipAnomalyType_LawEnforcementShip = 8,
  EV_ShipAnomalyType_AISOffLine = 9,
  EV_ShipAnomalyType_ZoneEntry = 10,
  EV_ShipAnomalyType_NA = 99,
  PB_Enum_ShipAnomalyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_ShipAnomalyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_ShipAnomalyType_IsValid(int value);
const PB_Enum_ShipAnomalyType PB_Enum_ShipAnomalyType_MIN = EV_ShipAnomalyType_NORMAL;
const PB_Enum_ShipAnomalyType PB_Enum_ShipAnomalyType_MAX = EV_ShipAnomalyType_NA;
const int PB_Enum_ShipAnomalyType_ARRAYSIZE = PB_Enum_ShipAnomalyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_ShipAnomalyType_descriptor();
inline const ::std::string& PB_Enum_ShipAnomalyType_Name(PB_Enum_ShipAnomalyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_ShipAnomalyType_descriptor(), value);
}
inline bool PB_Enum_ShipAnomalyType_Parse(
    const ::std::string& name, PB_Enum_ShipAnomalyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_ShipAnomalyType>(
    PB_Enum_ShipAnomalyType_descriptor(), name, value);
}
enum PB_Enum_TargetInfo_Type {
  EV_TargetInfoType_NA = 0,
  EV_TargetInfoType_ArgosAndMaritimeSatellite = 1,
  EV_TargetInfoType_Beidou = 2,
  EV_TargetInfoType_AISStatic = 3,
  EV_TargetInfoType_AISDynamic = 4,
  EV_TargetInfoType_LRIT = 5,
  EV_TargetInfoType_Haijian = 7,
  EV_TargetInfoType_Fusion = 15,
  EV_TargetInfoType_Any = 16,
  EV_TargetInfoType_Others = 17,
  PB_Enum_TargetInfo_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_TargetInfo_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_TargetInfo_Type_IsValid(int value);
const PB_Enum_TargetInfo_Type PB_Enum_TargetInfo_Type_MIN = EV_TargetInfoType_NA;
const PB_Enum_TargetInfo_Type PB_Enum_TargetInfo_Type_MAX = EV_TargetInfoType_Others;
const int PB_Enum_TargetInfo_Type_ARRAYSIZE = PB_Enum_TargetInfo_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_TargetInfo_Type_descriptor();
inline const ::std::string& PB_Enum_TargetInfo_Type_Name(PB_Enum_TargetInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_TargetInfo_Type_descriptor(), value);
}
inline bool PB_Enum_TargetInfo_Type_Parse(
    const ::std::string& name, PB_Enum_TargetInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_TargetInfo_Type>(
    PB_Enum_TargetInfo_Type_descriptor(), name, value);
}
enum PB_Enum_TargetInfo_Source {
  EV_TargetInfoSource_NA = 0,
  EV_TargetInfoSource_AgricultureMinistry = 1,
  EV_TargetInfoSource_MaritimeBureau = 2,
  EV_TargetInfoSource_Haijian = 3,
  EV_TargetInfoSource_SatAIS = 4,
  EV_TargetInfoSource_SearchAndRescue = 5,
  EV_TargetInfoSource_CivilMarineSituationSystem = 6,
  EV_TargetInfoSource_ShipSecurity = 7,
  EV_TargetInfoSource_Fusion = 15,
  EV_TargetInfoSource_Any = 16,
  EV_TargetInfoSource_Others = 17,
  PB_Enum_TargetInfo_Source_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_TargetInfo_Source_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_TargetInfo_Source_IsValid(int value);
const PB_Enum_TargetInfo_Source PB_Enum_TargetInfo_Source_MIN = EV_TargetInfoSource_NA;
const PB_Enum_TargetInfo_Source PB_Enum_TargetInfo_Source_MAX = EV_TargetInfoSource_Others;
const int PB_Enum_TargetInfo_Source_ARRAYSIZE = PB_Enum_TargetInfo_Source_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_TargetInfo_Source_descriptor();
inline const ::std::string& PB_Enum_TargetInfo_Source_Name(PB_Enum_TargetInfo_Source value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_TargetInfo_Source_descriptor(), value);
}
inline bool PB_Enum_TargetInfo_Source_Parse(
    const ::std::string& name, PB_Enum_TargetInfo_Source* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_TargetInfo_Source>(
    PB_Enum_TargetInfo_Source_descriptor(), name, value);
}
enum PB_Enum_TargetID_Type {
  EV_TargetIDType_NA = 0,
  EV_TargetIDType_MMSI = 1,
  EV_TargetIDType_IMO = 2,
  EV_TargetIDType_BeidouID = 3,
  EV_TargetIDType_HaijianID = 4,
  EV_TargetIDType_ArgosAndMarineSatID = 5,
  EV_TargetIDType_Fusion = 15,
  EV_TargetIDType_Others = 16,
  EV_TargetIDType_Any = 17,
  PB_Enum_TargetID_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_TargetID_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_TargetID_Type_IsValid(int value);
const PB_Enum_TargetID_Type PB_Enum_TargetID_Type_MIN = EV_TargetIDType_NA;
const PB_Enum_TargetID_Type PB_Enum_TargetID_Type_MAX = EV_TargetIDType_Any;
const int PB_Enum_TargetID_Type_ARRAYSIZE = PB_Enum_TargetID_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_TargetID_Type_descriptor();
inline const ::std::string& PB_Enum_TargetID_Type_Name(PB_Enum_TargetID_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_TargetID_Type_descriptor(), value);
}
inline bool PB_Enum_TargetID_Type_Parse(
    const ::std::string& name, PB_Enum_TargetID_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_TargetID_Type>(
    PB_Enum_TargetID_Type_descriptor(), name, value);
}
enum PB_Enum_TargetInfo_ProcessLevel {
  EV_TargetInfoProcessLevel_NA = 0,
  EV_TargetInfoProcessLevel_Raw = 1,
  EV_TargetInfoProcessLevel_Preprocessed = 2,
  EV_TargetInfoProcessLevel_Fused = 3,
  EV_TargetInfoProcessLevel_Any = 15,
  EV_TargetInfoProcessLevel_Others = 16,
  PB_Enum_TargetInfo_ProcessLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_TargetInfo_ProcessLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_TargetInfo_ProcessLevel_IsValid(int value);
const PB_Enum_TargetInfo_ProcessLevel PB_Enum_TargetInfo_ProcessLevel_MIN = EV_TargetInfoProcessLevel_NA;
const PB_Enum_TargetInfo_ProcessLevel PB_Enum_TargetInfo_ProcessLevel_MAX = EV_TargetInfoProcessLevel_Others;
const int PB_Enum_TargetInfo_ProcessLevel_ARRAYSIZE = PB_Enum_TargetInfo_ProcessLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_TargetInfo_ProcessLevel_descriptor();
inline const ::std::string& PB_Enum_TargetInfo_ProcessLevel_Name(PB_Enum_TargetInfo_ProcessLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_TargetInfo_ProcessLevel_descriptor(), value);
}
inline bool PB_Enum_TargetInfo_ProcessLevel_Parse(
    const ::std::string& name, PB_Enum_TargetInfo_ProcessLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_TargetInfo_ProcessLevel>(
    PB_Enum_TargetInfo_ProcessLevel_descriptor(), name, value);
}
enum PB_Enum_Software {
  EV_Software_NA = 0,
  EV_Software_OnLinePreprocess = 1,
  EV_Software_TargetDistribution = 2,
  EV_Software_OnLineFusion = 3,
  EV_Software_StorageManagement = 4,
  EV_Software_SoftwareMonitor = 5,
  EV_Software_XGSWeb = 6,
  EV_Software_XGSDestop_2D = 7,
  EV_Software_XGSDesktop_3D = 8,
  EV_Software_DataAssoc = 9,
  EV_Software_MaritimeSA = 10,
  EV_Software_XGSDesktop_Others = 15,
  PB_Enum_Software_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_Software_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_Software_IsValid(int value);
const PB_Enum_Software PB_Enum_Software_MIN = EV_Software_NA;
const PB_Enum_Software PB_Enum_Software_MAX = EV_Software_XGSDesktop_Others;
const int PB_Enum_Software_ARRAYSIZE = PB_Enum_Software_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_Software_descriptor();
inline const ::std::string& PB_Enum_Software_Name(PB_Enum_Software value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_Software_descriptor(), value);
}
inline bool PB_Enum_Software_Parse(
    const ::std::string& name, PB_Enum_Software* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_Software>(
    PB_Enum_Software_descriptor(), name, value);
}
enum PB_Enum_Target_ThreatLevel {
  EV_TargetThreatLevel_NA = 0,
  EV_TargetThreatLevel_Level1 = 1,
  EV_TargetThreatLevel_Level2 = 2,
  EV_TargetThreatLevel_Level3 = 3,
  EV_TargetThreatLevel_Level4 = 4,
  EV_TargetThreatLevel_Level5 = 5,
  EV_TargetThreatLevel_Level6 = 6,
  EV_TargetThreatLevel_Level7 = 7,
  EV_TargetThreatLevel_Level8 = 8,
  EV_TargetThreatLevel_Level9 = 9,
  EV_TargetThreatLevel_Level10 = 10,
  EV_TargetThreatLevel_Non = 15,
  PB_Enum_Target_ThreatLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_Target_ThreatLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_Target_ThreatLevel_IsValid(int value);
const PB_Enum_Target_ThreatLevel PB_Enum_Target_ThreatLevel_MIN = EV_TargetThreatLevel_NA;
const PB_Enum_Target_ThreatLevel PB_Enum_Target_ThreatLevel_MAX = EV_TargetThreatLevel_Non;
const int PB_Enum_Target_ThreatLevel_ARRAYSIZE = PB_Enum_Target_ThreatLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_Target_ThreatLevel_descriptor();
inline const ::std::string& PB_Enum_Target_ThreatLevel_Name(PB_Enum_Target_ThreatLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_Target_ThreatLevel_descriptor(), value);
}
inline bool PB_Enum_Target_ThreatLevel_Parse(
    const ::std::string& name, PB_Enum_Target_ThreatLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_Target_ThreatLevel>(
    PB_Enum_Target_ThreatLevel_descriptor(), name, value);
}
enum PB_Enum_Target_XGSCustomizedThreatLevel {
  EV_XGSCustomizedTargetThreatLevel_NA = 0,
  EV_XGSCustomizedTargetThreatLevel_Level1 = 1,
  EV_XGSCustomizedTargetThreatLevel_Level2 = 2,
  EV_XGSCustomizedTargetThreatLevel_Level3 = 3,
  EV_XGSCustomizedTargetThreatLevel_Level4 = 4,
  EV_XGSCustomizedTargetThreatLevel_Non = 15,
  PB_Enum_Target_XGSCustomizedThreatLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_Target_XGSCustomizedThreatLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_Target_XGSCustomizedThreatLevel_IsValid(int value);
const PB_Enum_Target_XGSCustomizedThreatLevel PB_Enum_Target_XGSCustomizedThreatLevel_MIN = EV_XGSCustomizedTargetThreatLevel_NA;
const PB_Enum_Target_XGSCustomizedThreatLevel PB_Enum_Target_XGSCustomizedThreatLevel_MAX = EV_XGSCustomizedTargetThreatLevel_Non;
const int PB_Enum_Target_XGSCustomizedThreatLevel_ARRAYSIZE = PB_Enum_Target_XGSCustomizedThreatLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_Target_XGSCustomizedThreatLevel_descriptor();
inline const ::std::string& PB_Enum_Target_XGSCustomizedThreatLevel_Name(PB_Enum_Target_XGSCustomizedThreatLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_Target_XGSCustomizedThreatLevel_descriptor(), value);
}
inline bool PB_Enum_Target_XGSCustomizedThreatLevel_Parse(
    const ::std::string& name, PB_Enum_Target_XGSCustomizedThreatLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_Target_XGSCustomizedThreatLevel>(
    PB_Enum_Target_XGSCustomizedThreatLevel_descriptor(), name, value);
}
enum PB_Enum_Region_Shape {
  EV_RegionType_NA = 0,
  EV_RegionType_Circle = 1,
  EV_RegionType_Rectangle = 2,
  EV_RegionType_Polygon = 3,
  EV_RegionType_GeoPoint = 4,
  EV_RegionType_GeoCircularSector = 5,
  EV_RegionType_GeoAnnularSector = 6,
  EV_RegionType_Others = 15,
  PB_Enum_Region_Shape_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_Region_Shape_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_Region_Shape_IsValid(int value);
const PB_Enum_Region_Shape PB_Enum_Region_Shape_MIN = EV_RegionType_NA;
const PB_Enum_Region_Shape PB_Enum_Region_Shape_MAX = EV_RegionType_Others;
const int PB_Enum_Region_Shape_ARRAYSIZE = PB_Enum_Region_Shape_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_Region_Shape_descriptor();
inline const ::std::string& PB_Enum_Region_Shape_Name(PB_Enum_Region_Shape value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_Region_Shape_descriptor(), value);
}
inline bool PB_Enum_Region_Shape_Parse(
    const ::std::string& name, PB_Enum_Region_Shape* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_Region_Shape>(
    PB_Enum_Region_Shape_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PB_Enum_Aggregated_AIS_Ship_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_Aggregated_AIS_Ship_Type>() {
  return ::PB_Enum_Aggregated_AIS_Ship_Type_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_ShipAnomalyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_ShipAnomalyType>() {
  return ::PB_Enum_ShipAnomalyType_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_TargetInfo_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_TargetInfo_Type>() {
  return ::PB_Enum_TargetInfo_Type_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_TargetInfo_Source> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_TargetInfo_Source>() {
  return ::PB_Enum_TargetInfo_Source_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_TargetID_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_TargetID_Type>() {
  return ::PB_Enum_TargetID_Type_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_TargetInfo_ProcessLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_TargetInfo_ProcessLevel>() {
  return ::PB_Enum_TargetInfo_ProcessLevel_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_Software> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_Software>() {
  return ::PB_Enum_Software_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_Target_ThreatLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_Target_ThreatLevel>() {
  return ::PB_Enum_Target_ThreatLevel_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_Target_XGSCustomizedThreatLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_Target_XGSCustomizedThreatLevel>() {
  return ::PB_Enum_Target_XGSCustomizedThreatLevel_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_Region_Shape> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_Region_Shape>() {
  return ::PB_Enum_Region_Shape_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CommonEnum_2eproto__INCLUDED
