// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Target.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Target.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBTarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTarget_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTargetPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTargetPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTargetAssociation_DS_Mass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTargetAssociation_DS_Mass_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Target_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Target_2eproto() {
  protobuf_AddDesc_Target_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Target.proto");
  GOOGLE_CHECK(file != NULL);
  PBTarget_descriptor_ = file->message_type(0);
  static const int PBTarget_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTarget, sequencenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTarget, enum_sender_software_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTarget, listtargetpos_),
  };
  PBTarget_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTarget_descriptor_,
      PBTarget::internal_default_instance(),
      PBTarget_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTarget),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTarget, _internal_metadata_));
  PBTargetPosition_descriptor_ = file->message_type(1);
  static const int PBTargetPosition_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, aisdynamic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, aisstatic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, aisvoyage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, enum_targetinfotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, enum_targetinfosource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, enum_targetidorig_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, targetidorig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, countryname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, aggregatedaisshiptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, cargotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, enum_targetthreadlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, listtargetassociation_ds_mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, isdangership_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, lastassocusingdscombinationutctime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, beidouid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, haijianid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, argosandmarinesatid_),
  };
  PBTargetPosition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTargetPosition_descriptor_,
      PBTargetPosition::internal_default_instance(),
      PBTargetPosition_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTargetPosition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetPosition, _internal_metadata_));
  PBTargetAssociation_DS_Mass_descriptor_ = file->message_type(2);
  static const int PBTargetAssociation_DS_Mass_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetAssociation_DS_Mass, targetidcand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetAssociation_DS_Mass, associationmass_),
  };
  PBTargetAssociation_DS_Mass_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTargetAssociation_DS_Mass_descriptor_,
      PBTargetAssociation_DS_Mass::internal_default_instance(),
      PBTargetAssociation_DS_Mass_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTargetAssociation_DS_Mass),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTargetAssociation_DS_Mass, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Target_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTarget_descriptor_, PBTarget::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTargetPosition_descriptor_, PBTargetPosition::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTargetAssociation_DS_Mass_descriptor_, PBTargetAssociation_DS_Mass::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Target_2eproto() {
  PBTarget_default_instance_.Shutdown();
  delete PBTarget_reflection_;
  PBTargetPosition_default_instance_.Shutdown();
  delete PBTargetPosition_reflection_;
  PBTargetAssociation_DS_Mass_default_instance_.Shutdown();
  delete PBTargetAssociation_DS_Mass_reflection_;
}

void protobuf_InitDefaults_Target_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_AISData_2eproto();
  ::protobuf_InitDefaults_CommonEnum_2eproto();
  PBTarget_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PBTargetPosition_default_instance_.DefaultConstruct();
  PBTargetAssociation_DS_Mass_default_instance_.DefaultConstruct();
  PBTarget_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBTargetPosition_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBTargetAssociation_DS_Mass_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Target_2eproto_once_);
void protobuf_InitDefaults_Target_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Target_2eproto_once_,
                 &protobuf_InitDefaults_Target_2eproto_impl);
}
void protobuf_AddDesc_Target_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Target_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Target.proto\032\rAISData.proto\032\020CommonEnu"
    "m.proto\"z\n\010PBTarget\022\023\n\013sequenceNum\030\001 \001(\r"
    "\022/\n\024enum_Sender_Software\030\002 \001(\0162\021.PB_Enum"
    "_Software\022(\n\rlistTargetPos\030\003 \003(\0132\021.PBTar"
    "getPosition\"\271\005\n\020PBTargetPosition\022\020\n\010targ"
    "etID\030\001 \001(\005\022!\n\naisDynamic\030\002 \001(\0132\r.PBAISDy"
    "namic\022\037\n\taisStatic\030\003 \001(\0132\014.PBAISStatic\022\037"
    "\n\taisVoyage\030\004 \001(\0132\014.PBAISVoyage\0225\n\023enum_"
    "targetInfoType\030\005 \001(\0162\030.PB_Enum_TargetInf"
    "o_Type\0229\n\025enum_targetInfoSource\030\006 \001(\0162\032."
    "PB_Enum_TargetInfo_Source\0226\n\026enum_Target"
    "IDOrig_Type\030\007 \001(\0162\026.PB_Enum_TargetID_Typ"
    "e\022\024\n\014targetIDOrig\030\010 \001(\005\022\023\n\013countryName\030\t"
    " \001(\t\022@\n\025aggregatedAISShipType\030\n \001(\0162!.PB"
    "_Enum_Aggregated_AIS_Ship_Type\022\021\n\tcargoT"
    "ype\030\013 \001(\005\022;\n\026enum_TargetThreadLevel\030\014 \001("
    "\0162\033.PB_Enum_Target_ThreatLevel\022C\n\035listTa"
    "rgetAssociation_DS_Mass\030\r \003(\0132\034.PBTarget"
    "Association_DS_Mass\022\024\n\014isDangerShip\030\016 \001("
    "\010\022*\n\"lastAssocUsingDSCombinationUTCTime\030"
    "\017 \001(\r\022\020\n\010beidouID\030\020 \001(\005\022\021\n\thaijianID\030\021 \001"
    "(\005\022\033\n\023argosAndMarineSatID\030\022 \001(\005\"L\n\033PBTar"
    "getAssociation_DS_Mass\022\024\n\014targetIDCand\030\001"
    " \001(\005\022\027\n\017associationMass\030\002 \001(\001B\024\n\022team.iO"
    "ceanPlus.PBb\006proto3", 979);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Target.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_AISData_2eproto();
  ::protobuf_AddDesc_CommonEnum_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Target_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Target_2eproto_once_);
void protobuf_AddDesc_Target_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Target_2eproto_once_,
                 &protobuf_AddDesc_Target_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Target_2eproto {
  StaticDescriptorInitializer_Target_2eproto() {
    protobuf_AddDesc_Target_2eproto();
  }
} static_descriptor_initializer_Target_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTarget::kSequenceNumFieldNumber;
const int PBTarget::kEnumSenderSoftwareFieldNumber;
const int PBTarget::kListTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTarget::PBTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Target_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTarget)
}

void PBTarget::InitAsDefaultInstance() {
}

PBTarget::PBTarget(const PBTarget& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBTarget)
}

void PBTarget::SharedCtor() {
  ::memset(&sequencenum_, 0, reinterpret_cast<char*>(&enum_sender_software_) -
    reinterpret_cast<char*>(&sequencenum_) + sizeof(enum_sender_software_));
  _cached_size_ = 0;
}

PBTarget::~PBTarget() {
  // @@protoc_insertion_point(destructor:PBTarget)
  SharedDtor();
}

void PBTarget::SharedDtor() {
}

void PBTarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTarget_descriptor_;
}

const PBTarget& PBTarget::default_instance() {
  protobuf_InitDefaults_Target_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBTarget> PBTarget_default_instance_;

PBTarget* PBTarget::New(::google::protobuf::Arena* arena) const {
  PBTarget* n = new PBTarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTarget)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBTarget, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBTarget*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sequencenum_, enum_sender_software_);

#undef ZR_HELPER_
#undef ZR_

  listtargetpos_.Clear();
}

bool PBTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sequenceNum = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_enum_Sender_Software;
        break;
      }

      // optional .PB_Enum_Software enum_Sender_Software = 2;
      case 2: {
        if (tag == 16) {
         parse_enum_Sender_Software:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_sender_software(static_cast< ::PB_Enum_Software >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_listTargetPos;
        break;
      }

      // repeated .PBTargetPosition listTargetPos = 3;
      case 3: {
        if (tag == 26) {
         parse_listTargetPos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_listTargetPos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_listtargetpos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_listTargetPos;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTarget)
  return false;
#undef DO_
}

void PBTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTarget)
  // optional uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sequencenum(), output);
  }

  // optional .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enum_sender_software(), output);
  }

  // repeated .PBTargetPosition listTargetPos = 3;
  for (unsigned int i = 0, n = this->listtargetpos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->listtargetpos(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBTarget)
}

::google::protobuf::uint8* PBTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTarget)
  // optional uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sequencenum(), target);
  }

  // optional .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->enum_sender_software(), target);
  }

  // repeated .PBTargetPosition listTargetPos = 3;
  for (unsigned int i = 0, n = this->listtargetpos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->listtargetpos(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBTarget)
  return target;
}

size_t PBTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTarget)
  size_t total_size = 0;

  // optional uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenum());
  }

  // optional .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_sender_software());
  }

  // repeated .PBTargetPosition listTargetPos = 3;
  {
    unsigned int count = this->listtargetpos_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->listtargetpos(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTarget)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTarget)
    UnsafeMergeFrom(*source);
  }
}

void PBTarget::MergeFrom(const PBTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTarget)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBTarget::UnsafeMergeFrom(const PBTarget& from) {
  GOOGLE_DCHECK(&from != this);
  listtargetpos_.MergeFrom(from.listtargetpos_);
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
  if (from.enum_sender_software() != 0) {
    set_enum_sender_software(from.enum_sender_software());
  }
}

void PBTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTarget::CopyFrom(const PBTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTarget)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBTarget::IsInitialized() const {

  return true;
}

void PBTarget::Swap(PBTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTarget::InternalSwap(PBTarget* other) {
  std::swap(sequencenum_, other->sequencenum_);
  std::swap(enum_sender_software_, other->enum_sender_software_);
  listtargetpos_.UnsafeArenaSwap(&other->listtargetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTarget_descriptor_;
  metadata.reflection = PBTarget_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTarget

// optional uint32 sequenceNum = 1;
void PBTarget::clear_sequencenum() {
  sequencenum_ = 0u;
}
::google::protobuf::uint32 PBTarget::sequencenum() const {
  // @@protoc_insertion_point(field_get:PBTarget.sequenceNum)
  return sequencenum_;
}
void PBTarget::set_sequencenum(::google::protobuf::uint32 value) {
  
  sequencenum_ = value;
  // @@protoc_insertion_point(field_set:PBTarget.sequenceNum)
}

// optional .PB_Enum_Software enum_Sender_Software = 2;
void PBTarget::clear_enum_sender_software() {
  enum_sender_software_ = 0;
}
::PB_Enum_Software PBTarget::enum_sender_software() const {
  // @@protoc_insertion_point(field_get:PBTarget.enum_Sender_Software)
  return static_cast< ::PB_Enum_Software >(enum_sender_software_);
}
void PBTarget::set_enum_sender_software(::PB_Enum_Software value) {
  
  enum_sender_software_ = value;
  // @@protoc_insertion_point(field_set:PBTarget.enum_Sender_Software)
}

// repeated .PBTargetPosition listTargetPos = 3;
int PBTarget::listtargetpos_size() const {
  return listtargetpos_.size();
}
void PBTarget::clear_listtargetpos() {
  listtargetpos_.Clear();
}
const ::PBTargetPosition& PBTarget::listtargetpos(int index) const {
  // @@protoc_insertion_point(field_get:PBTarget.listTargetPos)
  return listtargetpos_.Get(index);
}
::PBTargetPosition* PBTarget::mutable_listtargetpos(int index) {
  // @@protoc_insertion_point(field_mutable:PBTarget.listTargetPos)
  return listtargetpos_.Mutable(index);
}
::PBTargetPosition* PBTarget::add_listtargetpos() {
  // @@protoc_insertion_point(field_add:PBTarget.listTargetPos)
  return listtargetpos_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBTargetPosition >*
PBTarget::mutable_listtargetpos() {
  // @@protoc_insertion_point(field_mutable_list:PBTarget.listTargetPos)
  return &listtargetpos_;
}
const ::google::protobuf::RepeatedPtrField< ::PBTargetPosition >&
PBTarget::listtargetpos() const {
  // @@protoc_insertion_point(field_list:PBTarget.listTargetPos)
  return listtargetpos_;
}

inline const PBTarget* PBTarget::internal_default_instance() {
  return &PBTarget_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTargetPosition::kTargetIDFieldNumber;
const int PBTargetPosition::kAisDynamicFieldNumber;
const int PBTargetPosition::kAisStaticFieldNumber;
const int PBTargetPosition::kAisVoyageFieldNumber;
const int PBTargetPosition::kEnumTargetInfoTypeFieldNumber;
const int PBTargetPosition::kEnumTargetInfoSourceFieldNumber;
const int PBTargetPosition::kEnumTargetIDOrigTypeFieldNumber;
const int PBTargetPosition::kTargetIDOrigFieldNumber;
const int PBTargetPosition::kCountryNameFieldNumber;
const int PBTargetPosition::kAggregatedAISShipTypeFieldNumber;
const int PBTargetPosition::kCargoTypeFieldNumber;
const int PBTargetPosition::kEnumTargetThreadLevelFieldNumber;
const int PBTargetPosition::kListTargetAssociationDSMassFieldNumber;
const int PBTargetPosition::kIsDangerShipFieldNumber;
const int PBTargetPosition::kLastAssocUsingDSCombinationUTCTimeFieldNumber;
const int PBTargetPosition::kBeidouIDFieldNumber;
const int PBTargetPosition::kHaijianIDFieldNumber;
const int PBTargetPosition::kArgosAndMarineSatIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTargetPosition::PBTargetPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Target_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTargetPosition)
}

void PBTargetPosition::InitAsDefaultInstance() {
  aisdynamic_ = const_cast< ::PBAISDynamic*>(
      ::PBAISDynamic::internal_default_instance());
  aisstatic_ = const_cast< ::PBAISStatic*>(
      ::PBAISStatic::internal_default_instance());
  aisvoyage_ = const_cast< ::PBAISVoyage*>(
      ::PBAISVoyage::internal_default_instance());
}

PBTargetPosition::PBTargetPosition(const PBTargetPosition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBTargetPosition)
}

void PBTargetPosition::SharedCtor() {
  countryname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aisdynamic_ = NULL;
  aisstatic_ = NULL;
  aisvoyage_ = NULL;
  ::memset(&targetid_, 0, reinterpret_cast<char*>(&argosandmarinesatid_) -
    reinterpret_cast<char*>(&targetid_) + sizeof(argosandmarinesatid_));
  _cached_size_ = 0;
}

PBTargetPosition::~PBTargetPosition() {
  // @@protoc_insertion_point(destructor:PBTargetPosition)
  SharedDtor();
}

void PBTargetPosition::SharedDtor() {
  countryname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &PBTargetPosition_default_instance_.get()) {
    delete aisdynamic_;
    delete aisstatic_;
    delete aisvoyage_;
  }
}

void PBTargetPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTargetPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTargetPosition_descriptor_;
}

const PBTargetPosition& PBTargetPosition::default_instance() {
  protobuf_InitDefaults_Target_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBTargetPosition> PBTargetPosition_default_instance_;

PBTargetPosition* PBTargetPosition::New(::google::protobuf::Arena* arena) const {
  PBTargetPosition* n = new PBTargetPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTargetPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTargetPosition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBTargetPosition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBTargetPosition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(targetid_, targetidorig_);
  if (GetArenaNoVirtual() == NULL && aisdynamic_ != NULL) delete aisdynamic_;
  aisdynamic_ = NULL;
  if (GetArenaNoVirtual() == NULL && aisstatic_ != NULL) delete aisstatic_;
  aisstatic_ = NULL;
  if (GetArenaNoVirtual() == NULL && aisvoyage_ != NULL) delete aisvoyage_;
  aisvoyage_ = NULL;
  ZR_(aggregatedaisshiptype_, beidouid_);
  countryname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(haijianid_, argosandmarinesatid_);

#undef ZR_HELPER_
#undef ZR_

  listtargetassociation_ds_mass_.Clear();
}

bool PBTargetPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTargetPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 targetID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_aisDynamic;
        break;
      }

      // optional .PBAISDynamic aisDynamic = 2;
      case 2: {
        if (tag == 18) {
         parse_aisDynamic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aisdynamic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_aisStatic;
        break;
      }

      // optional .PBAISStatic aisStatic = 3;
      case 3: {
        if (tag == 26) {
         parse_aisStatic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aisstatic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_aisVoyage;
        break;
      }

      // optional .PBAISVoyage aisVoyage = 4;
      case 4: {
        if (tag == 34) {
         parse_aisVoyage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aisvoyage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_enum_targetInfoType;
        break;
      }

      // optional .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
      case 5: {
        if (tag == 40) {
         parse_enum_targetInfoType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetinfotype(static_cast< ::PB_Enum_TargetInfo_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_enum_targetInfoSource;
        break;
      }

      // optional .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
      case 6: {
        if (tag == 48) {
         parse_enum_targetInfoSource:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetinfosource(static_cast< ::PB_Enum_TargetInfo_Source >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_enum_TargetIDOrig_Type;
        break;
      }

      // optional .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
      case 7: {
        if (tag == 56) {
         parse_enum_TargetIDOrig_Type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetidorig_type(static_cast< ::PB_Enum_TargetID_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_targetIDOrig;
        break;
      }

      // optional int32 targetIDOrig = 8;
      case 8: {
        if (tag == 64) {
         parse_targetIDOrig:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetidorig_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_countryName;
        break;
      }

      // optional string countryName = 9;
      case 9: {
        if (tag == 74) {
         parse_countryName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countryname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->countryname().data(), this->countryname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBTargetPosition.countryName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_aggregatedAISShipType;
        break;
      }

      // optional .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
      case 10: {
        if (tag == 80) {
         parse_aggregatedAISShipType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_aggregatedaisshiptype(static_cast< ::PB_Enum_Aggregated_AIS_Ship_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_cargoType;
        break;
      }

      // optional int32 cargoType = 11;
      case 11: {
        if (tag == 88) {
         parse_cargoType:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cargotype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_enum_TargetThreadLevel;
        break;
      }

      // optional .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 12;
      case 12: {
        if (tag == 96) {
         parse_enum_TargetThreadLevel:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetthreadlevel(static_cast< ::PB_Enum_Target_ThreatLevel >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_listTargetAssociation_DS_Mass;
        break;
      }

      // repeated .PBTargetAssociation_DS_Mass listTargetAssociation_DS_Mass = 13;
      case 13: {
        if (tag == 106) {
         parse_listTargetAssociation_DS_Mass:
          DO_(input->IncrementRecursionDepth());
         parse_loop_listTargetAssociation_DS_Mass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_listtargetassociation_ds_mass()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_listTargetAssociation_DS_Mass;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(112)) goto parse_isDangerShip;
        break;
      }

      // optional bool isDangerShip = 14;
      case 14: {
        if (tag == 112) {
         parse_isDangerShip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdangership_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_lastAssocUsingDSCombinationUTCTime;
        break;
      }

      // optional uint32 lastAssocUsingDSCombinationUTCTime = 15;
      case 15: {
        if (tag == 120) {
         parse_lastAssocUsingDSCombinationUTCTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastassocusingdscombinationutctime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_beidouID;
        break;
      }

      // optional int32 beidouID = 16;
      case 16: {
        if (tag == 128) {
         parse_beidouID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beidouid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_haijianID;
        break;
      }

      // optional int32 haijianID = 17;
      case 17: {
        if (tag == 136) {
         parse_haijianID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &haijianid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_argosAndMarineSatID;
        break;
      }

      // optional int32 argosAndMarineSatID = 18;
      case 18: {
        if (tag == 144) {
         parse_argosAndMarineSatID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argosandmarinesatid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTargetPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTargetPosition)
  return false;
#undef DO_
}

void PBTargetPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTargetPosition)
  // optional int32 targetID = 1;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetid(), output);
  }

  // optional .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->aisdynamic_, output);
  }

  // optional .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->aisstatic_, output);
  }

  // optional .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->aisvoyage_, output);
  }

  // optional .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->enum_targetinfotype(), output);
  }

  // optional .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->enum_targetinfosource(), output);
  }

  // optional .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->enum_targetidorig_type(), output);
  }

  // optional int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->targetidorig(), output);
  }

  // optional string countryName = 9;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), this->countryname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBTargetPosition.countryName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->countryname(), output);
  }

  // optional .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->aggregatedaisshiptype(), output);
  }

  // optional int32 cargoType = 11;
  if (this->cargotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cargotype(), output);
  }

  // optional .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 12;
  if (this->enum_targetthreadlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->enum_targetthreadlevel(), output);
  }

  // repeated .PBTargetAssociation_DS_Mass listTargetAssociation_DS_Mass = 13;
  for (unsigned int i = 0, n = this->listtargetassociation_ds_mass_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->listtargetassociation_ds_mass(i), output);
  }

  // optional bool isDangerShip = 14;
  if (this->isdangership() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->isdangership(), output);
  }

  // optional uint32 lastAssocUsingDSCombinationUTCTime = 15;
  if (this->lastassocusingdscombinationutctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->lastassocusingdscombinationutctime(), output);
  }

  // optional int32 beidouID = 16;
  if (this->beidouid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->beidouid(), output);
  }

  // optional int32 haijianID = 17;
  if (this->haijianid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->haijianid(), output);
  }

  // optional int32 argosAndMarineSatID = 18;
  if (this->argosandmarinesatid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->argosandmarinesatid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBTargetPosition)
}

::google::protobuf::uint8* PBTargetPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTargetPosition)
  // optional int32 targetID = 1;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetid(), target);
  }

  // optional .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->aisdynamic_, false, target);
  }

  // optional .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->aisstatic_, false, target);
  }

  // optional .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->aisvoyage_, false, target);
  }

  // optional .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->enum_targetinfotype(), target);
  }

  // optional .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->enum_targetinfosource(), target);
  }

  // optional .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->enum_targetidorig_type(), target);
  }

  // optional int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->targetidorig(), target);
  }

  // optional string countryName = 9;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), this->countryname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBTargetPosition.countryName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->countryname(), target);
  }

  // optional .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->aggregatedaisshiptype(), target);
  }

  // optional int32 cargoType = 11;
  if (this->cargotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cargotype(), target);
  }

  // optional .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 12;
  if (this->enum_targetthreadlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->enum_targetthreadlevel(), target);
  }

  // repeated .PBTargetAssociation_DS_Mass listTargetAssociation_DS_Mass = 13;
  for (unsigned int i = 0, n = this->listtargetassociation_ds_mass_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->listtargetassociation_ds_mass(i), false, target);
  }

  // optional bool isDangerShip = 14;
  if (this->isdangership() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->isdangership(), target);
  }

  // optional uint32 lastAssocUsingDSCombinationUTCTime = 15;
  if (this->lastassocusingdscombinationutctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->lastassocusingdscombinationutctime(), target);
  }

  // optional int32 beidouID = 16;
  if (this->beidouid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->beidouid(), target);
  }

  // optional int32 haijianID = 17;
  if (this->haijianid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->haijianid(), target);
  }

  // optional int32 argosAndMarineSatID = 18;
  if (this->argosandmarinesatid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->argosandmarinesatid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBTargetPosition)
  return target;
}

size_t PBTargetPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTargetPosition)
  size_t total_size = 0;

  // optional int32 targetID = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetid());
  }

  // optional .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->aisdynamic_);
  }

  // optional .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->aisstatic_);
  }

  // optional .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->aisvoyage_);
  }

  // optional .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetinfotype());
  }

  // optional .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetinfosource());
  }

  // optional .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetidorig_type());
  }

  // optional int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetidorig());
  }

  // optional string countryName = 9;
  if (this->countryname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->countryname());
  }

  // optional .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->aggregatedaisshiptype());
  }

  // optional int32 cargoType = 11;
  if (this->cargotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cargotype());
  }

  // optional .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 12;
  if (this->enum_targetthreadlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetthreadlevel());
  }

  // optional bool isDangerShip = 14;
  if (this->isdangership() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 lastAssocUsingDSCombinationUTCTime = 15;
  if (this->lastassocusingdscombinationutctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lastassocusingdscombinationutctime());
  }

  // optional int32 beidouID = 16;
  if (this->beidouid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beidouid());
  }

  // optional int32 haijianID = 17;
  if (this->haijianid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->haijianid());
  }

  // optional int32 argosAndMarineSatID = 18;
  if (this->argosandmarinesatid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argosandmarinesatid());
  }

  // repeated .PBTargetAssociation_DS_Mass listTargetAssociation_DS_Mass = 13;
  {
    unsigned int count = this->listtargetassociation_ds_mass_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->listtargetassociation_ds_mass(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTargetPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTargetPosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTargetPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTargetPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTargetPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTargetPosition)
    UnsafeMergeFrom(*source);
  }
}

void PBTargetPosition::MergeFrom(const PBTargetPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTargetPosition)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBTargetPosition::UnsafeMergeFrom(const PBTargetPosition& from) {
  GOOGLE_DCHECK(&from != this);
  listtargetassociation_ds_mass_.MergeFrom(from.listtargetassociation_ds_mass_);
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.has_aisdynamic()) {
    mutable_aisdynamic()->::PBAISDynamic::MergeFrom(from.aisdynamic());
  }
  if (from.has_aisstatic()) {
    mutable_aisstatic()->::PBAISStatic::MergeFrom(from.aisstatic());
  }
  if (from.has_aisvoyage()) {
    mutable_aisvoyage()->::PBAISVoyage::MergeFrom(from.aisvoyage());
  }
  if (from.enum_targetinfotype() != 0) {
    set_enum_targetinfotype(from.enum_targetinfotype());
  }
  if (from.enum_targetinfosource() != 0) {
    set_enum_targetinfosource(from.enum_targetinfosource());
  }
  if (from.enum_targetidorig_type() != 0) {
    set_enum_targetidorig_type(from.enum_targetidorig_type());
  }
  if (from.targetidorig() != 0) {
    set_targetidorig(from.targetidorig());
  }
  if (from.countryname().size() > 0) {

    countryname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countryname_);
  }
  if (from.aggregatedaisshiptype() != 0) {
    set_aggregatedaisshiptype(from.aggregatedaisshiptype());
  }
  if (from.cargotype() != 0) {
    set_cargotype(from.cargotype());
  }
  if (from.enum_targetthreadlevel() != 0) {
    set_enum_targetthreadlevel(from.enum_targetthreadlevel());
  }
  if (from.isdangership() != 0) {
    set_isdangership(from.isdangership());
  }
  if (from.lastassocusingdscombinationutctime() != 0) {
    set_lastassocusingdscombinationutctime(from.lastassocusingdscombinationutctime());
  }
  if (from.beidouid() != 0) {
    set_beidouid(from.beidouid());
  }
  if (from.haijianid() != 0) {
    set_haijianid(from.haijianid());
  }
  if (from.argosandmarinesatid() != 0) {
    set_argosandmarinesatid(from.argosandmarinesatid());
  }
}

void PBTargetPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTargetPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTargetPosition::CopyFrom(const PBTargetPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTargetPosition)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBTargetPosition::IsInitialized() const {

  return true;
}

void PBTargetPosition::Swap(PBTargetPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTargetPosition::InternalSwap(PBTargetPosition* other) {
  std::swap(targetid_, other->targetid_);
  std::swap(aisdynamic_, other->aisdynamic_);
  std::swap(aisstatic_, other->aisstatic_);
  std::swap(aisvoyage_, other->aisvoyage_);
  std::swap(enum_targetinfotype_, other->enum_targetinfotype_);
  std::swap(enum_targetinfosource_, other->enum_targetinfosource_);
  std::swap(enum_targetidorig_type_, other->enum_targetidorig_type_);
  std::swap(targetidorig_, other->targetidorig_);
  countryname_.Swap(&other->countryname_);
  std::swap(aggregatedaisshiptype_, other->aggregatedaisshiptype_);
  std::swap(cargotype_, other->cargotype_);
  std::swap(enum_targetthreadlevel_, other->enum_targetthreadlevel_);
  listtargetassociation_ds_mass_.UnsafeArenaSwap(&other->listtargetassociation_ds_mass_);
  std::swap(isdangership_, other->isdangership_);
  std::swap(lastassocusingdscombinationutctime_, other->lastassocusingdscombinationutctime_);
  std::swap(beidouid_, other->beidouid_);
  std::swap(haijianid_, other->haijianid_);
  std::swap(argosandmarinesatid_, other->argosandmarinesatid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTargetPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTargetPosition_descriptor_;
  metadata.reflection = PBTargetPosition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTargetPosition

// optional int32 targetID = 1;
void PBTargetPosition::clear_targetid() {
  targetid_ = 0;
}
::google::protobuf::int32 PBTargetPosition::targetid() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.targetID)
  return targetid_;
}
void PBTargetPosition::set_targetid(::google::protobuf::int32 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.targetID)
}

// optional .PBAISDynamic aisDynamic = 2;
bool PBTargetPosition::has_aisdynamic() const {
  return this != internal_default_instance() && aisdynamic_ != NULL;
}
void PBTargetPosition::clear_aisdynamic() {
  if (GetArenaNoVirtual() == NULL && aisdynamic_ != NULL) delete aisdynamic_;
  aisdynamic_ = NULL;
}
const ::PBAISDynamic& PBTargetPosition::aisdynamic() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.aisDynamic)
  return aisdynamic_ != NULL ? *aisdynamic_
                         : *::PBAISDynamic::internal_default_instance();
}
::PBAISDynamic* PBTargetPosition::mutable_aisdynamic() {
  
  if (aisdynamic_ == NULL) {
    aisdynamic_ = new ::PBAISDynamic;
  }
  // @@protoc_insertion_point(field_mutable:PBTargetPosition.aisDynamic)
  return aisdynamic_;
}
::PBAISDynamic* PBTargetPosition::release_aisdynamic() {
  // @@protoc_insertion_point(field_release:PBTargetPosition.aisDynamic)
  
  ::PBAISDynamic* temp = aisdynamic_;
  aisdynamic_ = NULL;
  return temp;
}
void PBTargetPosition::set_allocated_aisdynamic(::PBAISDynamic* aisdynamic) {
  delete aisdynamic_;
  aisdynamic_ = aisdynamic;
  if (aisdynamic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTargetPosition.aisDynamic)
}

// optional .PBAISStatic aisStatic = 3;
bool PBTargetPosition::has_aisstatic() const {
  return this != internal_default_instance() && aisstatic_ != NULL;
}
void PBTargetPosition::clear_aisstatic() {
  if (GetArenaNoVirtual() == NULL && aisstatic_ != NULL) delete aisstatic_;
  aisstatic_ = NULL;
}
const ::PBAISStatic& PBTargetPosition::aisstatic() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.aisStatic)
  return aisstatic_ != NULL ? *aisstatic_
                         : *::PBAISStatic::internal_default_instance();
}
::PBAISStatic* PBTargetPosition::mutable_aisstatic() {
  
  if (aisstatic_ == NULL) {
    aisstatic_ = new ::PBAISStatic;
  }
  // @@protoc_insertion_point(field_mutable:PBTargetPosition.aisStatic)
  return aisstatic_;
}
::PBAISStatic* PBTargetPosition::release_aisstatic() {
  // @@protoc_insertion_point(field_release:PBTargetPosition.aisStatic)
  
  ::PBAISStatic* temp = aisstatic_;
  aisstatic_ = NULL;
  return temp;
}
void PBTargetPosition::set_allocated_aisstatic(::PBAISStatic* aisstatic) {
  delete aisstatic_;
  aisstatic_ = aisstatic;
  if (aisstatic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTargetPosition.aisStatic)
}

// optional .PBAISVoyage aisVoyage = 4;
bool PBTargetPosition::has_aisvoyage() const {
  return this != internal_default_instance() && aisvoyage_ != NULL;
}
void PBTargetPosition::clear_aisvoyage() {
  if (GetArenaNoVirtual() == NULL && aisvoyage_ != NULL) delete aisvoyage_;
  aisvoyage_ = NULL;
}
const ::PBAISVoyage& PBTargetPosition::aisvoyage() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.aisVoyage)
  return aisvoyage_ != NULL ? *aisvoyage_
                         : *::PBAISVoyage::internal_default_instance();
}
::PBAISVoyage* PBTargetPosition::mutable_aisvoyage() {
  
  if (aisvoyage_ == NULL) {
    aisvoyage_ = new ::PBAISVoyage;
  }
  // @@protoc_insertion_point(field_mutable:PBTargetPosition.aisVoyage)
  return aisvoyage_;
}
::PBAISVoyage* PBTargetPosition::release_aisvoyage() {
  // @@protoc_insertion_point(field_release:PBTargetPosition.aisVoyage)
  
  ::PBAISVoyage* temp = aisvoyage_;
  aisvoyage_ = NULL;
  return temp;
}
void PBTargetPosition::set_allocated_aisvoyage(::PBAISVoyage* aisvoyage) {
  delete aisvoyage_;
  aisvoyage_ = aisvoyage;
  if (aisvoyage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTargetPosition.aisVoyage)
}

// optional .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
void PBTargetPosition::clear_enum_targetinfotype() {
  enum_targetinfotype_ = 0;
}
::PB_Enum_TargetInfo_Type PBTargetPosition::enum_targetinfotype() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.enum_targetInfoType)
  return static_cast< ::PB_Enum_TargetInfo_Type >(enum_targetinfotype_);
}
void PBTargetPosition::set_enum_targetinfotype(::PB_Enum_TargetInfo_Type value) {
  
  enum_targetinfotype_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.enum_targetInfoType)
}

// optional .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
void PBTargetPosition::clear_enum_targetinfosource() {
  enum_targetinfosource_ = 0;
}
::PB_Enum_TargetInfo_Source PBTargetPosition::enum_targetinfosource() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.enum_targetInfoSource)
  return static_cast< ::PB_Enum_TargetInfo_Source >(enum_targetinfosource_);
}
void PBTargetPosition::set_enum_targetinfosource(::PB_Enum_TargetInfo_Source value) {
  
  enum_targetinfosource_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.enum_targetInfoSource)
}

// optional .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
void PBTargetPosition::clear_enum_targetidorig_type() {
  enum_targetidorig_type_ = 0;
}
::PB_Enum_TargetID_Type PBTargetPosition::enum_targetidorig_type() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.enum_TargetIDOrig_Type)
  return static_cast< ::PB_Enum_TargetID_Type >(enum_targetidorig_type_);
}
void PBTargetPosition::set_enum_targetidorig_type(::PB_Enum_TargetID_Type value) {
  
  enum_targetidorig_type_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.enum_TargetIDOrig_Type)
}

// optional int32 targetIDOrig = 8;
void PBTargetPosition::clear_targetidorig() {
  targetidorig_ = 0;
}
::google::protobuf::int32 PBTargetPosition::targetidorig() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.targetIDOrig)
  return targetidorig_;
}
void PBTargetPosition::set_targetidorig(::google::protobuf::int32 value) {
  
  targetidorig_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.targetIDOrig)
}

// optional string countryName = 9;
void PBTargetPosition::clear_countryname() {
  countryname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBTargetPosition::countryname() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.countryName)
  return countryname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBTargetPosition::set_countryname(const ::std::string& value) {
  
  countryname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBTargetPosition.countryName)
}
void PBTargetPosition::set_countryname(const char* value) {
  
  countryname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBTargetPosition.countryName)
}
void PBTargetPosition::set_countryname(const char* value, size_t size) {
  
  countryname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBTargetPosition.countryName)
}
::std::string* PBTargetPosition::mutable_countryname() {
  
  // @@protoc_insertion_point(field_mutable:PBTargetPosition.countryName)
  return countryname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBTargetPosition::release_countryname() {
  // @@protoc_insertion_point(field_release:PBTargetPosition.countryName)
  
  return countryname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBTargetPosition::set_allocated_countryname(::std::string* countryname) {
  if (countryname != NULL) {
    
  } else {
    
  }
  countryname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countryname);
  // @@protoc_insertion_point(field_set_allocated:PBTargetPosition.countryName)
}

// optional .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
void PBTargetPosition::clear_aggregatedaisshiptype() {
  aggregatedaisshiptype_ = 0;
}
::PB_Enum_Aggregated_AIS_Ship_Type PBTargetPosition::aggregatedaisshiptype() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.aggregatedAISShipType)
  return static_cast< ::PB_Enum_Aggregated_AIS_Ship_Type >(aggregatedaisshiptype_);
}
void PBTargetPosition::set_aggregatedaisshiptype(::PB_Enum_Aggregated_AIS_Ship_Type value) {
  
  aggregatedaisshiptype_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.aggregatedAISShipType)
}

// optional int32 cargoType = 11;
void PBTargetPosition::clear_cargotype() {
  cargotype_ = 0;
}
::google::protobuf::int32 PBTargetPosition::cargotype() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.cargoType)
  return cargotype_;
}
void PBTargetPosition::set_cargotype(::google::protobuf::int32 value) {
  
  cargotype_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.cargoType)
}

// optional .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 12;
void PBTargetPosition::clear_enum_targetthreadlevel() {
  enum_targetthreadlevel_ = 0;
}
::PB_Enum_Target_ThreatLevel PBTargetPosition::enum_targetthreadlevel() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.enum_TargetThreadLevel)
  return static_cast< ::PB_Enum_Target_ThreatLevel >(enum_targetthreadlevel_);
}
void PBTargetPosition::set_enum_targetthreadlevel(::PB_Enum_Target_ThreatLevel value) {
  
  enum_targetthreadlevel_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.enum_TargetThreadLevel)
}

// repeated .PBTargetAssociation_DS_Mass listTargetAssociation_DS_Mass = 13;
int PBTargetPosition::listtargetassociation_ds_mass_size() const {
  return listtargetassociation_ds_mass_.size();
}
void PBTargetPosition::clear_listtargetassociation_ds_mass() {
  listtargetassociation_ds_mass_.Clear();
}
const ::PBTargetAssociation_DS_Mass& PBTargetPosition::listtargetassociation_ds_mass(int index) const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.listTargetAssociation_DS_Mass)
  return listtargetassociation_ds_mass_.Get(index);
}
::PBTargetAssociation_DS_Mass* PBTargetPosition::mutable_listtargetassociation_ds_mass(int index) {
  // @@protoc_insertion_point(field_mutable:PBTargetPosition.listTargetAssociation_DS_Mass)
  return listtargetassociation_ds_mass_.Mutable(index);
}
::PBTargetAssociation_DS_Mass* PBTargetPosition::add_listtargetassociation_ds_mass() {
  // @@protoc_insertion_point(field_add:PBTargetPosition.listTargetAssociation_DS_Mass)
  return listtargetassociation_ds_mass_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBTargetAssociation_DS_Mass >*
PBTargetPosition::mutable_listtargetassociation_ds_mass() {
  // @@protoc_insertion_point(field_mutable_list:PBTargetPosition.listTargetAssociation_DS_Mass)
  return &listtargetassociation_ds_mass_;
}
const ::google::protobuf::RepeatedPtrField< ::PBTargetAssociation_DS_Mass >&
PBTargetPosition::listtargetassociation_ds_mass() const {
  // @@protoc_insertion_point(field_list:PBTargetPosition.listTargetAssociation_DS_Mass)
  return listtargetassociation_ds_mass_;
}

// optional bool isDangerShip = 14;
void PBTargetPosition::clear_isdangership() {
  isdangership_ = false;
}
bool PBTargetPosition::isdangership() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.isDangerShip)
  return isdangership_;
}
void PBTargetPosition::set_isdangership(bool value) {
  
  isdangership_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.isDangerShip)
}

// optional uint32 lastAssocUsingDSCombinationUTCTime = 15;
void PBTargetPosition::clear_lastassocusingdscombinationutctime() {
  lastassocusingdscombinationutctime_ = 0u;
}
::google::protobuf::uint32 PBTargetPosition::lastassocusingdscombinationutctime() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.lastAssocUsingDSCombinationUTCTime)
  return lastassocusingdscombinationutctime_;
}
void PBTargetPosition::set_lastassocusingdscombinationutctime(::google::protobuf::uint32 value) {
  
  lastassocusingdscombinationutctime_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.lastAssocUsingDSCombinationUTCTime)
}

// optional int32 beidouID = 16;
void PBTargetPosition::clear_beidouid() {
  beidouid_ = 0;
}
::google::protobuf::int32 PBTargetPosition::beidouid() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.beidouID)
  return beidouid_;
}
void PBTargetPosition::set_beidouid(::google::protobuf::int32 value) {
  
  beidouid_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.beidouID)
}

// optional int32 haijianID = 17;
void PBTargetPosition::clear_haijianid() {
  haijianid_ = 0;
}
::google::protobuf::int32 PBTargetPosition::haijianid() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.haijianID)
  return haijianid_;
}
void PBTargetPosition::set_haijianid(::google::protobuf::int32 value) {
  
  haijianid_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.haijianID)
}

// optional int32 argosAndMarineSatID = 18;
void PBTargetPosition::clear_argosandmarinesatid() {
  argosandmarinesatid_ = 0;
}
::google::protobuf::int32 PBTargetPosition::argosandmarinesatid() const {
  // @@protoc_insertion_point(field_get:PBTargetPosition.argosAndMarineSatID)
  return argosandmarinesatid_;
}
void PBTargetPosition::set_argosandmarinesatid(::google::protobuf::int32 value) {
  
  argosandmarinesatid_ = value;
  // @@protoc_insertion_point(field_set:PBTargetPosition.argosAndMarineSatID)
}

inline const PBTargetPosition* PBTargetPosition::internal_default_instance() {
  return &PBTargetPosition_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTargetAssociation_DS_Mass::kTargetIDCandFieldNumber;
const int PBTargetAssociation_DS_Mass::kAssociationMassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTargetAssociation_DS_Mass::PBTargetAssociation_DS_Mass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Target_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTargetAssociation_DS_Mass)
}

void PBTargetAssociation_DS_Mass::InitAsDefaultInstance() {
}

PBTargetAssociation_DS_Mass::PBTargetAssociation_DS_Mass(const PBTargetAssociation_DS_Mass& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBTargetAssociation_DS_Mass)
}

void PBTargetAssociation_DS_Mass::SharedCtor() {
  ::memset(&associationmass_, 0, reinterpret_cast<char*>(&targetidcand_) -
    reinterpret_cast<char*>(&associationmass_) + sizeof(targetidcand_));
  _cached_size_ = 0;
}

PBTargetAssociation_DS_Mass::~PBTargetAssociation_DS_Mass() {
  // @@protoc_insertion_point(destructor:PBTargetAssociation_DS_Mass)
  SharedDtor();
}

void PBTargetAssociation_DS_Mass::SharedDtor() {
}

void PBTargetAssociation_DS_Mass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTargetAssociation_DS_Mass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTargetAssociation_DS_Mass_descriptor_;
}

const PBTargetAssociation_DS_Mass& PBTargetAssociation_DS_Mass::default_instance() {
  protobuf_InitDefaults_Target_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBTargetAssociation_DS_Mass> PBTargetAssociation_DS_Mass_default_instance_;

PBTargetAssociation_DS_Mass* PBTargetAssociation_DS_Mass::New(::google::protobuf::Arena* arena) const {
  PBTargetAssociation_DS_Mass* n = new PBTargetAssociation_DS_Mass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTargetAssociation_DS_Mass::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTargetAssociation_DS_Mass)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBTargetAssociation_DS_Mass, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBTargetAssociation_DS_Mass*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(associationmass_, targetidcand_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBTargetAssociation_DS_Mass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTargetAssociation_DS_Mass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 targetIDCand = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetidcand_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_associationMass;
        break;
      }

      // optional double associationMass = 2;
      case 2: {
        if (tag == 17) {
         parse_associationMass:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &associationmass_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTargetAssociation_DS_Mass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTargetAssociation_DS_Mass)
  return false;
#undef DO_
}

void PBTargetAssociation_DS_Mass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTargetAssociation_DS_Mass)
  // optional int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetidcand(), output);
  }

  // optional double associationMass = 2;
  if (this->associationmass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->associationmass(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBTargetAssociation_DS_Mass)
}

::google::protobuf::uint8* PBTargetAssociation_DS_Mass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTargetAssociation_DS_Mass)
  // optional int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetidcand(), target);
  }

  // optional double associationMass = 2;
  if (this->associationmass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->associationmass(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBTargetAssociation_DS_Mass)
  return target;
}

size_t PBTargetAssociation_DS_Mass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTargetAssociation_DS_Mass)
  size_t total_size = 0;

  // optional int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetidcand());
  }

  // optional double associationMass = 2;
  if (this->associationmass() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTargetAssociation_DS_Mass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTargetAssociation_DS_Mass)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTargetAssociation_DS_Mass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTargetAssociation_DS_Mass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTargetAssociation_DS_Mass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTargetAssociation_DS_Mass)
    UnsafeMergeFrom(*source);
  }
}

void PBTargetAssociation_DS_Mass::MergeFrom(const PBTargetAssociation_DS_Mass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTargetAssociation_DS_Mass)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBTargetAssociation_DS_Mass::UnsafeMergeFrom(const PBTargetAssociation_DS_Mass& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.targetidcand() != 0) {
    set_targetidcand(from.targetidcand());
  }
  if (from.associationmass() != 0) {
    set_associationmass(from.associationmass());
  }
}

void PBTargetAssociation_DS_Mass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTargetAssociation_DS_Mass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTargetAssociation_DS_Mass::CopyFrom(const PBTargetAssociation_DS_Mass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTargetAssociation_DS_Mass)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBTargetAssociation_DS_Mass::IsInitialized() const {

  return true;
}

void PBTargetAssociation_DS_Mass::Swap(PBTargetAssociation_DS_Mass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTargetAssociation_DS_Mass::InternalSwap(PBTargetAssociation_DS_Mass* other) {
  std::swap(targetidcand_, other->targetidcand_);
  std::swap(associationmass_, other->associationmass_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTargetAssociation_DS_Mass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTargetAssociation_DS_Mass_descriptor_;
  metadata.reflection = PBTargetAssociation_DS_Mass_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTargetAssociation_DS_Mass

// optional int32 targetIDCand = 1;
void PBTargetAssociation_DS_Mass::clear_targetidcand() {
  targetidcand_ = 0;
}
::google::protobuf::int32 PBTargetAssociation_DS_Mass::targetidcand() const {
  // @@protoc_insertion_point(field_get:PBTargetAssociation_DS_Mass.targetIDCand)
  return targetidcand_;
}
void PBTargetAssociation_DS_Mass::set_targetidcand(::google::protobuf::int32 value) {
  
  targetidcand_ = value;
  // @@protoc_insertion_point(field_set:PBTargetAssociation_DS_Mass.targetIDCand)
}

// optional double associationMass = 2;
void PBTargetAssociation_DS_Mass::clear_associationmass() {
  associationmass_ = 0;
}
double PBTargetAssociation_DS_Mass::associationmass() const {
  // @@protoc_insertion_point(field_get:PBTargetAssociation_DS_Mass.associationMass)
  return associationmass_;
}
void PBTargetAssociation_DS_Mass::set_associationmass(double value) {
  
  associationmass_ = value;
  // @@protoc_insertion_point(field_set:PBTargetAssociation_DS_Mass.associationMass)
}

inline const PBTargetAssociation_DS_Mass* PBTargetAssociation_DS_Mass::internal_default_instance() {
  return &PBTargetAssociation_DS_Mass_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
