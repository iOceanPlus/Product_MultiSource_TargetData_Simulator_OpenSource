// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Target.proto

#include "Target.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AISData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AISData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBAISDynamic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AISData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBAISStatic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AISData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBAISVoyage;
}  // namespace protobuf_AISData_2eproto
namespace protobuf_Target_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Target_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PBTargetPosition;
}  // namespace protobuf_Target_2eproto
class PBTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBTarget>
      _instance;
} _PBTarget_default_instance_;
class PBTargetPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBTargetPosition>
      _instance;
} _PBTargetPosition_default_instance_;
class PBTargetAssociation_DS_MassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBTargetAssociation_DS_Mass>
      _instance;
} _PBTargetAssociation_DS_Mass_default_instance_;
namespace protobuf_Target_2eproto {
static void InitDefaultsPBTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBTarget_default_instance_;
    new (ptr) ::PBTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PBTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBTarget}, {
      &protobuf_Target_2eproto::scc_info_PBTargetPosition.base,}};

static void InitDefaultsPBTargetPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBTargetPosition_default_instance_;
    new (ptr) ::PBTargetPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBTargetPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PBTargetPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPBTargetPosition}, {
      &protobuf_AISData_2eproto::scc_info_PBAISDynamic.base,
      &protobuf_AISData_2eproto::scc_info_PBAISStatic.base,
      &protobuf_AISData_2eproto::scc_info_PBAISVoyage.base,}};

static void InitDefaultsPBTargetAssociation_DS_Mass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBTargetAssociation_DS_Mass_default_instance_;
    new (ptr) ::PBTargetAssociation_DS_Mass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBTargetAssociation_DS_Mass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PBTargetAssociation_DS_Mass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBTargetAssociation_DS_Mass}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBTargetPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBTargetAssociation_DS_Mass.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTarget, sequencenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTarget, enum_sender_software_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTarget, listtargetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, aisdynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, aisstatic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, aisvoyage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, enum_targetinfotype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, enum_targetinfosource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, enum_targetidorig_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, targetidorig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, countryname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, aggregatedaisshiptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, cargotype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, isdangership_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, lastassocusingdscombinationutctime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, beidouid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, haijianid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, argosandmarinesatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, enum_targetthreadlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, isinteresttarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, enum_xgscustomizedtargetthreadlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, iswarship_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, islawenforceship_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, ischinese_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetPosition, zoneentrytimes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetAssociation_DS_Mass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetAssociation_DS_Mass, targetidcand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBTargetAssociation_DS_Mass, associationmass_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PBTarget)},
  { 8, -1, sizeof(::PBTargetPosition)},
  { 36, -1, sizeof(::PBTargetAssociation_DS_Mass)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBTargetPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBTargetAssociation_DS_Mass_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Target.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Target.proto\032\rAISData.proto\032\020CommonEnu"
      "m.proto\"z\n\010PBTarget\022\023\n\013sequenceNum\030\001 \001(\r"
      "\022/\n\024enum_Sender_Software\030\002 \001(\0162\021.PB_Enum"
      "_Software\022(\n\rlistTargetPos\030\003 \003(\0132\021.PBTar"
      "getPosition\"\275\006\n\020PBTargetPosition\022\020\n\010targ"
      "etID\030\001 \001(\005\022!\n\naisDynamic\030\002 \001(\0132\r.PBAISDy"
      "namic\022\037\n\taisStatic\030\003 \001(\0132\014.PBAISStatic\022\037"
      "\n\taisVoyage\030\004 \001(\0132\014.PBAISVoyage\0225\n\023enum_"
      "targetInfoType\030\005 \001(\0162\030.PB_Enum_TargetInf"
      "o_Type\0229\n\025enum_targetInfoSource\030\006 \001(\0162\032."
      "PB_Enum_TargetInfo_Source\0226\n\026enum_Target"
      "IDOrig_Type\030\007 \001(\0162\026.PB_Enum_TargetID_Typ"
      "e\022\024\n\014targetIDOrig\030\010 \001(\005\022\023\n\013countryName\030\t"
      " \001(\t\022@\n\025aggregatedAISShipType\030\n \001(\0162!.PB"
      "_Enum_Aggregated_AIS_Ship_Type\022\021\n\tcargoT"
      "ype\030\013 \001(\005\022\024\n\014isDangerShip\030\r \001(\010\022*\n\"lastA"
      "ssocUsingDSCombinationUTCTime\030\016 \001(\r\022\020\n\010b"
      "eidouID\030\017 \001(\005\022\021\n\thaijianID\030\020 \001(\005\022\033\n\023argo"
      "sAndMarineSatID\030\021 \001(\005\022;\n\026enum_TargetThre"
      "adLevel\030\037 \001(\0162\033.PB_Enum_Target_ThreatLev"
      "el\022\030\n\020isInterestTarget\030  \001(\010\022U\n#enum_XGS"
      "CustomizedTargetThreadLevel\030! \001(\0162(.PB_E"
      "num_Target_XGSCustomizedThreatLevel\022\021\n\ti"
      "sWarShip\030\" \001(\010\022\030\n\020isLawEnforceShip\030# \001(\010"
      "\022\021\n\tisChinese\030$ \001(\010\022\026\n\016zoneEntryTimes\030% "
      "\001(\r\"L\n\033PBTargetAssociation_DS_Mass\022\024\n\014ta"
      "rgetIDCand\030\001 \001(\005\022\027\n\017associationMass\030\002 \001("
      "\001B\024\n\022team.iOceanPlus.PBb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Target.proto", &protobuf_RegisterTypes);
  ::protobuf_AISData_2eproto::AddDescriptors();
  ::protobuf_CommonEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Target_2eproto

// ===================================================================

void PBTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTarget::kSequenceNumFieldNumber;
const int PBTarget::kEnumSenderSoftwareFieldNumber;
const int PBTarget::kListTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTarget::PBTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Target_2eproto::scc_info_PBTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTarget)
}
PBTarget::PBTarget(const PBTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      listtargetpos_(from.listtargetpos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequencenum_, &from.sequencenum_,
    static_cast<size_t>(reinterpret_cast<char*>(&enum_sender_software_) -
    reinterpret_cast<char*>(&sequencenum_)) + sizeof(enum_sender_software_));
  // @@protoc_insertion_point(copy_constructor:PBTarget)
}

void PBTarget::SharedCtor() {
  ::memset(&sequencenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_sender_software_) -
      reinterpret_cast<char*>(&sequencenum_)) + sizeof(enum_sender_software_));
}

PBTarget::~PBTarget() {
  // @@protoc_insertion_point(destructor:PBTarget)
  SharedDtor();
}

void PBTarget::SharedDtor() {
}

void PBTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBTarget::descriptor() {
  ::protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTarget& PBTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Target_2eproto::scc_info_PBTarget.base);
  return *internal_default_instance();
}


void PBTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listtargetpos_.Clear();
  ::memset(&sequencenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_sender_software_) -
      reinterpret_cast<char*>(&sequencenum_)) + sizeof(enum_sender_software_));
  _internal_metadata_.Clear();
}

bool PBTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sequenceNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_Software enum_Sender_Software = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_sender_software(static_cast< ::PB_Enum_Software >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBTargetPosition listTargetPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_listtargetpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTarget)
  return false;
#undef DO_
}

void PBTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sequencenum(), output);
  }

  // .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->enum_sender_software(), output);
  }

  // repeated .PBTargetPosition listTargetPos = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listtargetpos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->listtargetpos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBTarget)
}

::google::protobuf::uint8* PBTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sequencenum(), target);
  }

  // .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->enum_sender_software(), target);
  }

  // repeated .PBTargetPosition listTargetPos = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->listtargetpos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->listtargetpos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBTarget)
  return target;
}

size_t PBTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTarget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PBTargetPosition listTargetPos = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->listtargetpos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->listtargetpos(static_cast<int>(i)));
    }
  }

  // uint32 sequenceNum = 1;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenum());
  }

  // .PB_Enum_Software enum_Sender_Software = 2;
  if (this->enum_sender_software() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_sender_software());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTarget)
    MergeFrom(*source);
  }
}

void PBTarget::MergeFrom(const PBTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listtargetpos_.MergeFrom(from.listtargetpos_);
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
  if (from.enum_sender_software() != 0) {
    set_enum_sender_software(from.enum_sender_software());
  }
}

void PBTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTarget::CopyFrom(const PBTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTarget::IsInitialized() const {
  return true;
}

void PBTarget::Swap(PBTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTarget::InternalSwap(PBTarget* other) {
  using std::swap;
  CastToBase(&listtargetpos_)->InternalSwap(CastToBase(&other->listtargetpos_));
  swap(sequencenum_, other->sequencenum_);
  swap(enum_sender_software_, other->enum_sender_software_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBTarget::GetMetadata() const {
  protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBTargetPosition::InitAsDefaultInstance() {
  ::_PBTargetPosition_default_instance_._instance.get_mutable()->aisdynamic_ = const_cast< ::PBAISDynamic*>(
      ::PBAISDynamic::internal_default_instance());
  ::_PBTargetPosition_default_instance_._instance.get_mutable()->aisstatic_ = const_cast< ::PBAISStatic*>(
      ::PBAISStatic::internal_default_instance());
  ::_PBTargetPosition_default_instance_._instance.get_mutable()->aisvoyage_ = const_cast< ::PBAISVoyage*>(
      ::PBAISVoyage::internal_default_instance());
}
void PBTargetPosition::clear_aisdynamic() {
  if (GetArenaNoVirtual() == NULL && aisdynamic_ != NULL) {
    delete aisdynamic_;
  }
  aisdynamic_ = NULL;
}
void PBTargetPosition::clear_aisstatic() {
  if (GetArenaNoVirtual() == NULL && aisstatic_ != NULL) {
    delete aisstatic_;
  }
  aisstatic_ = NULL;
}
void PBTargetPosition::clear_aisvoyage() {
  if (GetArenaNoVirtual() == NULL && aisvoyage_ != NULL) {
    delete aisvoyage_;
  }
  aisvoyage_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTargetPosition::kTargetIDFieldNumber;
const int PBTargetPosition::kAisDynamicFieldNumber;
const int PBTargetPosition::kAisStaticFieldNumber;
const int PBTargetPosition::kAisVoyageFieldNumber;
const int PBTargetPosition::kEnumTargetInfoTypeFieldNumber;
const int PBTargetPosition::kEnumTargetInfoSourceFieldNumber;
const int PBTargetPosition::kEnumTargetIDOrigTypeFieldNumber;
const int PBTargetPosition::kTargetIDOrigFieldNumber;
const int PBTargetPosition::kCountryNameFieldNumber;
const int PBTargetPosition::kAggregatedAISShipTypeFieldNumber;
const int PBTargetPosition::kCargoTypeFieldNumber;
const int PBTargetPosition::kIsDangerShipFieldNumber;
const int PBTargetPosition::kLastAssocUsingDSCombinationUTCTimeFieldNumber;
const int PBTargetPosition::kBeidouIDFieldNumber;
const int PBTargetPosition::kHaijianIDFieldNumber;
const int PBTargetPosition::kArgosAndMarineSatIDFieldNumber;
const int PBTargetPosition::kEnumTargetThreadLevelFieldNumber;
const int PBTargetPosition::kIsInterestTargetFieldNumber;
const int PBTargetPosition::kEnumXGSCustomizedTargetThreadLevelFieldNumber;
const int PBTargetPosition::kIsWarShipFieldNumber;
const int PBTargetPosition::kIsLawEnforceShipFieldNumber;
const int PBTargetPosition::kIsChineseFieldNumber;
const int PBTargetPosition::kZoneEntryTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTargetPosition::PBTargetPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Target_2eproto::scc_info_PBTargetPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTargetPosition)
}
PBTargetPosition::PBTargetPosition(const PBTargetPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  countryname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.countryname().size() > 0) {
    countryname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countryname_);
  }
  if (from.has_aisdynamic()) {
    aisdynamic_ = new ::PBAISDynamic(*from.aisdynamic_);
  } else {
    aisdynamic_ = NULL;
  }
  if (from.has_aisstatic()) {
    aisstatic_ = new ::PBAISStatic(*from.aisstatic_);
  } else {
    aisstatic_ = NULL;
  }
  if (from.has_aisvoyage()) {
    aisvoyage_ = new ::PBAISVoyage(*from.aisvoyage_);
  } else {
    aisvoyage_ = NULL;
  }
  ::memcpy(&targetid_, &from.targetid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneentrytimes_) -
    reinterpret_cast<char*>(&targetid_)) + sizeof(zoneentrytimes_));
  // @@protoc_insertion_point(copy_constructor:PBTargetPosition)
}

void PBTargetPosition::SharedCtor() {
  countryname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&aisdynamic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneentrytimes_) -
      reinterpret_cast<char*>(&aisdynamic_)) + sizeof(zoneentrytimes_));
}

PBTargetPosition::~PBTargetPosition() {
  // @@protoc_insertion_point(destructor:PBTargetPosition)
  SharedDtor();
}

void PBTargetPosition::SharedDtor() {
  countryname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete aisdynamic_;
  if (this != internal_default_instance()) delete aisstatic_;
  if (this != internal_default_instance()) delete aisvoyage_;
}

void PBTargetPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBTargetPosition::descriptor() {
  ::protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTargetPosition& PBTargetPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Target_2eproto::scc_info_PBTargetPosition.base);
  return *internal_default_instance();
}


void PBTargetPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTargetPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  countryname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && aisdynamic_ != NULL) {
    delete aisdynamic_;
  }
  aisdynamic_ = NULL;
  if (GetArenaNoVirtual() == NULL && aisstatic_ != NULL) {
    delete aisstatic_;
  }
  aisstatic_ = NULL;
  if (GetArenaNoVirtual() == NULL && aisvoyage_ != NULL) {
    delete aisvoyage_;
  }
  aisvoyage_ = NULL;
  ::memset(&targetid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneentrytimes_) -
      reinterpret_cast<char*>(&targetid_)) + sizeof(zoneentrytimes_));
  _internal_metadata_.Clear();
}

bool PBTargetPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTargetPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 targetID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBAISDynamic aisDynamic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aisdynamic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBAISStatic aisStatic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aisstatic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PBAISVoyage aisVoyage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aisvoyage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetinfotype(static_cast< ::PB_Enum_TargetInfo_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetinfosource(static_cast< ::PB_Enum_TargetInfo_Source >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetidorig_type(static_cast< ::PB_Enum_TargetID_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 targetIDOrig = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetidorig_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string countryName = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_countryname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->countryname().data(), static_cast<int>(this->countryname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBTargetPosition.countryName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_aggregatedaisshiptype(static_cast< ::PB_Enum_Aggregated_AIS_Ship_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cargoType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cargotype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isDangerShip = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdangership_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lastAssocUsingDSCombinationUTCTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastassocusingdscombinationutctime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 beidouID = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beidouid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 haijianID = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &haijianid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 argosAndMarineSatID = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &argosandmarinesatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_targetthreadlevel(static_cast< ::PB_Enum_Target_ThreatLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isInterestTarget = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isinteresttarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_Target_XGSCustomizedThreatLevel enum_XGSCustomizedTargetThreadLevel = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_xgscustomizedtargetthreadlevel(static_cast< ::PB_Enum_Target_XGSCustomizedThreatLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isWarShip = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iswarship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isLawEnforceShip = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islawenforceship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isChinese = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ischinese_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneEntryTimes = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneentrytimes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTargetPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTargetPosition)
  return false;
#undef DO_
}

void PBTargetPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTargetPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetID = 1;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetid(), output);
  }

  // .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_aisdynamic(), output);
  }

  // .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_aisstatic(), output);
  }

  // .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_aisvoyage(), output);
  }

  // .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->enum_targetinfotype(), output);
  }

  // .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->enum_targetinfosource(), output);
  }

  // .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->enum_targetidorig_type(), output);
  }

  // int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->targetidorig(), output);
  }

  // string countryName = 9;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), static_cast<int>(this->countryname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBTargetPosition.countryName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->countryname(), output);
  }

  // .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->aggregatedaisshiptype(), output);
  }

  // int32 cargoType = 11;
  if (this->cargotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->cargotype(), output);
  }

  // bool isDangerShip = 13;
  if (this->isdangership() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->isdangership(), output);
  }

  // uint32 lastAssocUsingDSCombinationUTCTime = 14;
  if (this->lastassocusingdscombinationutctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->lastassocusingdscombinationutctime(), output);
  }

  // int32 beidouID = 15;
  if (this->beidouid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->beidouid(), output);
  }

  // int32 haijianID = 16;
  if (this->haijianid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->haijianid(), output);
  }

  // int32 argosAndMarineSatID = 17;
  if (this->argosandmarinesatid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->argosandmarinesatid(), output);
  }

  // .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 31;
  if (this->enum_targetthreadlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      31, this->enum_targetthreadlevel(), output);
  }

  // bool isInterestTarget = 32;
  if (this->isinteresttarget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(32, this->isinteresttarget(), output);
  }

  // .PB_Enum_Target_XGSCustomizedThreatLevel enum_XGSCustomizedTargetThreadLevel = 33;
  if (this->enum_xgscustomizedtargetthreadlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      33, this->enum_xgscustomizedtargetthreadlevel(), output);
  }

  // bool isWarShip = 34;
  if (this->iswarship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(34, this->iswarship(), output);
  }

  // bool isLawEnforceShip = 35;
  if (this->islawenforceship() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->islawenforceship(), output);
  }

  // bool isChinese = 36;
  if (this->ischinese() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(36, this->ischinese(), output);
  }

  // uint32 zoneEntryTimes = 37;
  if (this->zoneentrytimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->zoneentrytimes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBTargetPosition)
}

::google::protobuf::uint8* PBTargetPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTargetPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetID = 1;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetid(), target);
  }

  // .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_aisdynamic(), deterministic, target);
  }

  // .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_aisstatic(), deterministic, target);
  }

  // .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_aisvoyage(), deterministic, target);
  }

  // .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->enum_targetinfotype(), target);
  }

  // .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->enum_targetinfosource(), target);
  }

  // .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->enum_targetidorig_type(), target);
  }

  // int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->targetidorig(), target);
  }

  // string countryName = 9;
  if (this->countryname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->countryname().data(), static_cast<int>(this->countryname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBTargetPosition.countryName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->countryname(), target);
  }

  // .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->aggregatedaisshiptype(), target);
  }

  // int32 cargoType = 11;
  if (this->cargotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->cargotype(), target);
  }

  // bool isDangerShip = 13;
  if (this->isdangership() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->isdangership(), target);
  }

  // uint32 lastAssocUsingDSCombinationUTCTime = 14;
  if (this->lastassocusingdscombinationutctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->lastassocusingdscombinationutctime(), target);
  }

  // int32 beidouID = 15;
  if (this->beidouid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->beidouid(), target);
  }

  // int32 haijianID = 16;
  if (this->haijianid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->haijianid(), target);
  }

  // int32 argosAndMarineSatID = 17;
  if (this->argosandmarinesatid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->argosandmarinesatid(), target);
  }

  // .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 31;
  if (this->enum_targetthreadlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      31, this->enum_targetthreadlevel(), target);
  }

  // bool isInterestTarget = 32;
  if (this->isinteresttarget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(32, this->isinteresttarget(), target);
  }

  // .PB_Enum_Target_XGSCustomizedThreatLevel enum_XGSCustomizedTargetThreadLevel = 33;
  if (this->enum_xgscustomizedtargetthreadlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      33, this->enum_xgscustomizedtargetthreadlevel(), target);
  }

  // bool isWarShip = 34;
  if (this->iswarship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(34, this->iswarship(), target);
  }

  // bool isLawEnforceShip = 35;
  if (this->islawenforceship() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->islawenforceship(), target);
  }

  // bool isChinese = 36;
  if (this->ischinese() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(36, this->ischinese(), target);
  }

  // uint32 zoneEntryTimes = 37;
  if (this->zoneentrytimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->zoneentrytimes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBTargetPosition)
  return target;
}

size_t PBTargetPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTargetPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string countryName = 9;
  if (this->countryname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->countryname());
  }

  // .PBAISDynamic aisDynamic = 2;
  if (this->has_aisdynamic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aisdynamic_);
  }

  // .PBAISStatic aisStatic = 3;
  if (this->has_aisstatic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aisstatic_);
  }

  // .PBAISVoyage aisVoyage = 4;
  if (this->has_aisvoyage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *aisvoyage_);
  }

  // int32 targetID = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetid());
  }

  // .PB_Enum_TargetInfo_Type enum_targetInfoType = 5;
  if (this->enum_targetinfotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetinfotype());
  }

  // .PB_Enum_TargetInfo_Source enum_targetInfoSource = 6;
  if (this->enum_targetinfosource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetinfosource());
  }

  // .PB_Enum_TargetID_Type enum_TargetIDOrig_Type = 7;
  if (this->enum_targetidorig_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetidorig_type());
  }

  // int32 targetIDOrig = 8;
  if (this->targetidorig() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetidorig());
  }

  // .PB_Enum_Aggregated_AIS_Ship_Type aggregatedAISShipType = 10;
  if (this->aggregatedaisshiptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->aggregatedaisshiptype());
  }

  // int32 cargoType = 11;
  if (this->cargotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cargotype());
  }

  // uint32 lastAssocUsingDSCombinationUTCTime = 14;
  if (this->lastassocusingdscombinationutctime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lastassocusingdscombinationutctime());
  }

  // int32 beidouID = 15;
  if (this->beidouid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beidouid());
  }

  // int32 haijianID = 16;
  if (this->haijianid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->haijianid());
  }

  // int32 argosAndMarineSatID = 17;
  if (this->argosandmarinesatid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->argosandmarinesatid());
  }

  // bool isDangerShip = 13;
  if (this->isdangership() != 0) {
    total_size += 1 + 1;
  }

  // bool isInterestTarget = 32;
  if (this->isinteresttarget() != 0) {
    total_size += 2 + 1;
  }

  // bool isWarShip = 34;
  if (this->iswarship() != 0) {
    total_size += 2 + 1;
  }

  // bool isLawEnforceShip = 35;
  if (this->islawenforceship() != 0) {
    total_size += 2 + 1;
  }

  // .PB_Enum_Target_ThreatLevel enum_TargetThreadLevel = 31;
  if (this->enum_targetthreadlevel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_targetthreadlevel());
  }

  // .PB_Enum_Target_XGSCustomizedThreatLevel enum_XGSCustomizedTargetThreadLevel = 33;
  if (this->enum_xgscustomizedtargetthreadlevel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_xgscustomizedtargetthreadlevel());
  }

  // bool isChinese = 36;
  if (this->ischinese() != 0) {
    total_size += 2 + 1;
  }

  // uint32 zoneEntryTimes = 37;
  if (this->zoneentrytimes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneentrytimes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBTargetPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTargetPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTargetPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTargetPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTargetPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTargetPosition)
    MergeFrom(*source);
  }
}

void PBTargetPosition::MergeFrom(const PBTargetPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTargetPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.countryname().size() > 0) {

    countryname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.countryname_);
  }
  if (from.has_aisdynamic()) {
    mutable_aisdynamic()->::PBAISDynamic::MergeFrom(from.aisdynamic());
  }
  if (from.has_aisstatic()) {
    mutable_aisstatic()->::PBAISStatic::MergeFrom(from.aisstatic());
  }
  if (from.has_aisvoyage()) {
    mutable_aisvoyage()->::PBAISVoyage::MergeFrom(from.aisvoyage());
  }
  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
  if (from.enum_targetinfotype() != 0) {
    set_enum_targetinfotype(from.enum_targetinfotype());
  }
  if (from.enum_targetinfosource() != 0) {
    set_enum_targetinfosource(from.enum_targetinfosource());
  }
  if (from.enum_targetidorig_type() != 0) {
    set_enum_targetidorig_type(from.enum_targetidorig_type());
  }
  if (from.targetidorig() != 0) {
    set_targetidorig(from.targetidorig());
  }
  if (from.aggregatedaisshiptype() != 0) {
    set_aggregatedaisshiptype(from.aggregatedaisshiptype());
  }
  if (from.cargotype() != 0) {
    set_cargotype(from.cargotype());
  }
  if (from.lastassocusingdscombinationutctime() != 0) {
    set_lastassocusingdscombinationutctime(from.lastassocusingdscombinationutctime());
  }
  if (from.beidouid() != 0) {
    set_beidouid(from.beidouid());
  }
  if (from.haijianid() != 0) {
    set_haijianid(from.haijianid());
  }
  if (from.argosandmarinesatid() != 0) {
    set_argosandmarinesatid(from.argosandmarinesatid());
  }
  if (from.isdangership() != 0) {
    set_isdangership(from.isdangership());
  }
  if (from.isinteresttarget() != 0) {
    set_isinteresttarget(from.isinteresttarget());
  }
  if (from.iswarship() != 0) {
    set_iswarship(from.iswarship());
  }
  if (from.islawenforceship() != 0) {
    set_islawenforceship(from.islawenforceship());
  }
  if (from.enum_targetthreadlevel() != 0) {
    set_enum_targetthreadlevel(from.enum_targetthreadlevel());
  }
  if (from.enum_xgscustomizedtargetthreadlevel() != 0) {
    set_enum_xgscustomizedtargetthreadlevel(from.enum_xgscustomizedtargetthreadlevel());
  }
  if (from.ischinese() != 0) {
    set_ischinese(from.ischinese());
  }
  if (from.zoneentrytimes() != 0) {
    set_zoneentrytimes(from.zoneentrytimes());
  }
}

void PBTargetPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTargetPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTargetPosition::CopyFrom(const PBTargetPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTargetPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTargetPosition::IsInitialized() const {
  return true;
}

void PBTargetPosition::Swap(PBTargetPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTargetPosition::InternalSwap(PBTargetPosition* other) {
  using std::swap;
  countryname_.Swap(&other->countryname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(aisdynamic_, other->aisdynamic_);
  swap(aisstatic_, other->aisstatic_);
  swap(aisvoyage_, other->aisvoyage_);
  swap(targetid_, other->targetid_);
  swap(enum_targetinfotype_, other->enum_targetinfotype_);
  swap(enum_targetinfosource_, other->enum_targetinfosource_);
  swap(enum_targetidorig_type_, other->enum_targetidorig_type_);
  swap(targetidorig_, other->targetidorig_);
  swap(aggregatedaisshiptype_, other->aggregatedaisshiptype_);
  swap(cargotype_, other->cargotype_);
  swap(lastassocusingdscombinationutctime_, other->lastassocusingdscombinationutctime_);
  swap(beidouid_, other->beidouid_);
  swap(haijianid_, other->haijianid_);
  swap(argosandmarinesatid_, other->argosandmarinesatid_);
  swap(isdangership_, other->isdangership_);
  swap(isinteresttarget_, other->isinteresttarget_);
  swap(iswarship_, other->iswarship_);
  swap(islawenforceship_, other->islawenforceship_);
  swap(enum_targetthreadlevel_, other->enum_targetthreadlevel_);
  swap(enum_xgscustomizedtargetthreadlevel_, other->enum_xgscustomizedtargetthreadlevel_);
  swap(ischinese_, other->ischinese_);
  swap(zoneentrytimes_, other->zoneentrytimes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBTargetPosition::GetMetadata() const {
  protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBTargetAssociation_DS_Mass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTargetAssociation_DS_Mass::kTargetIDCandFieldNumber;
const int PBTargetAssociation_DS_Mass::kAssociationMassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTargetAssociation_DS_Mass::PBTargetAssociation_DS_Mass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Target_2eproto::scc_info_PBTargetAssociation_DS_Mass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTargetAssociation_DS_Mass)
}
PBTargetAssociation_DS_Mass::PBTargetAssociation_DS_Mass(const PBTargetAssociation_DS_Mass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&associationmass_, &from.associationmass_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetidcand_) -
    reinterpret_cast<char*>(&associationmass_)) + sizeof(targetidcand_));
  // @@protoc_insertion_point(copy_constructor:PBTargetAssociation_DS_Mass)
}

void PBTargetAssociation_DS_Mass::SharedCtor() {
  ::memset(&associationmass_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetidcand_) -
      reinterpret_cast<char*>(&associationmass_)) + sizeof(targetidcand_));
}

PBTargetAssociation_DS_Mass::~PBTargetAssociation_DS_Mass() {
  // @@protoc_insertion_point(destructor:PBTargetAssociation_DS_Mass)
  SharedDtor();
}

void PBTargetAssociation_DS_Mass::SharedDtor() {
}

void PBTargetAssociation_DS_Mass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBTargetAssociation_DS_Mass::descriptor() {
  ::protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBTargetAssociation_DS_Mass& PBTargetAssociation_DS_Mass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Target_2eproto::scc_info_PBTargetAssociation_DS_Mass.base);
  return *internal_default_instance();
}


void PBTargetAssociation_DS_Mass::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTargetAssociation_DS_Mass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&associationmass_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetidcand_) -
      reinterpret_cast<char*>(&associationmass_)) + sizeof(targetidcand_));
  _internal_metadata_.Clear();
}

bool PBTargetAssociation_DS_Mass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTargetAssociation_DS_Mass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 targetIDCand = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetidcand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double associationMass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &associationmass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTargetAssociation_DS_Mass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTargetAssociation_DS_Mass)
  return false;
#undef DO_
}

void PBTargetAssociation_DS_Mass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTargetAssociation_DS_Mass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetidcand(), output);
  }

  // double associationMass = 2;
  if (this->associationmass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->associationmass(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBTargetAssociation_DS_Mass)
}

::google::protobuf::uint8* PBTargetAssociation_DS_Mass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTargetAssociation_DS_Mass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetidcand(), target);
  }

  // double associationMass = 2;
  if (this->associationmass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->associationmass(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBTargetAssociation_DS_Mass)
  return target;
}

size_t PBTargetAssociation_DS_Mass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTargetAssociation_DS_Mass)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double associationMass = 2;
  if (this->associationmass() != 0) {
    total_size += 1 + 8;
  }

  // int32 targetIDCand = 1;
  if (this->targetidcand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetidcand());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBTargetAssociation_DS_Mass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTargetAssociation_DS_Mass)
  GOOGLE_DCHECK_NE(&from, this);
  const PBTargetAssociation_DS_Mass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTargetAssociation_DS_Mass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTargetAssociation_DS_Mass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTargetAssociation_DS_Mass)
    MergeFrom(*source);
  }
}

void PBTargetAssociation_DS_Mass::MergeFrom(const PBTargetAssociation_DS_Mass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTargetAssociation_DS_Mass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.associationmass() != 0) {
    set_associationmass(from.associationmass());
  }
  if (from.targetidcand() != 0) {
    set_targetidcand(from.targetidcand());
  }
}

void PBTargetAssociation_DS_Mass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTargetAssociation_DS_Mass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTargetAssociation_DS_Mass::CopyFrom(const PBTargetAssociation_DS_Mass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTargetAssociation_DS_Mass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBTargetAssociation_DS_Mass::IsInitialized() const {
  return true;
}

void PBTargetAssociation_DS_Mass::Swap(PBTargetAssociation_DS_Mass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTargetAssociation_DS_Mass::InternalSwap(PBTargetAssociation_DS_Mass* other) {
  using std::swap;
  swap(associationmass_, other->associationmass_);
  swap(targetidcand_, other->targetidcand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBTargetAssociation_DS_Mass::GetMetadata() const {
  protobuf_Target_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Target_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBTarget* Arena::CreateMaybeMessage< ::PBTarget >(Arena* arena) {
  return Arena::CreateInternal< ::PBTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBTargetPosition* Arena::CreateMaybeMessage< ::PBTargetPosition >(Arena* arena) {
  return Arena::CreateInternal< ::PBTargetPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBTargetAssociation_DS_Mass* Arena::CreateMaybeMessage< ::PBTargetAssociation_DS_Mass >(Arena* arena) {
  return Arena::CreateInternal< ::PBTargetAssociation_DS_Mass >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
