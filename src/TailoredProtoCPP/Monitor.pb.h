// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Monitor.proto

#ifndef PROTOBUF_INCLUDED_Monitor_2eproto
#define PROTOBUF_INCLUDED_Monitor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonEnum.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Monitor_2eproto 

namespace protobuf_Monitor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Monitor_2eproto
class PBMonitor;
class PBMonitorDefaultTypeInternal;
extern PBMonitorDefaultTypeInternal _PBMonitor_default_instance_;
class PBMonitor_AliveTargetCount;
class PBMonitor_AliveTargetCountDefaultTypeInternal;
extern PBMonitor_AliveTargetCountDefaultTypeInternal _PBMonitor_AliveTargetCount_default_instance_;
class PBMonitor_MessagesRcvdPerTargetInfoSourceAndType;
class PBMonitor_MessagesRcvdPerTargetInfoSourceAndTypeDefaultTypeInternal;
extern PBMonitor_MessagesRcvdPerTargetInfoSourceAndTypeDefaultTypeInternal _PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_default_instance_;
class PBMonitor_Probe;
class PBMonitor_ProbeDefaultTypeInternal;
extern PBMonitor_ProbeDefaultTypeInternal _PBMonitor_Probe_default_instance_;
class PBMonitor_ProbeAck;
class PBMonitor_ProbeAckDefaultTypeInternal;
extern PBMonitor_ProbeAckDefaultTypeInternal _PBMonitor_ProbeAck_default_instance_;
class PBMonitor_TargetDistribution;
class PBMonitor_TargetDistributionDefaultTypeInternal;
extern PBMonitor_TargetDistributionDefaultTypeInternal _PBMonitor_TargetDistribution_default_instance_;
class PBMonitor_ToXGS_SoftwareStatus;
class PBMonitor_ToXGS_SoftwareStatusDefaultTypeInternal;
extern PBMonitor_ToXGS_SoftwareStatusDefaultTypeInternal _PBMonitor_ToXGS_SoftwareStatus_default_instance_;
namespace google {
namespace protobuf {
template<> ::PBMonitor* Arena::CreateMaybeMessage<::PBMonitor>(Arena*);
template<> ::PBMonitor_AliveTargetCount* Arena::CreateMaybeMessage<::PBMonitor_AliveTargetCount>(Arena*);
template<> ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* Arena::CreateMaybeMessage<::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType>(Arena*);
template<> ::PBMonitor_Probe* Arena::CreateMaybeMessage<::PBMonitor_Probe>(Arena*);
template<> ::PBMonitor_ProbeAck* Arena::CreateMaybeMessage<::PBMonitor_ProbeAck>(Arena*);
template<> ::PBMonitor_TargetDistribution* Arena::CreateMaybeMessage<::PBMonitor_TargetDistribution>(Arena*);
template<> ::PBMonitor_ToXGS_SoftwareStatus* Arena::CreateMaybeMessage<::PBMonitor_ToXGS_SoftwareStatus>(Arena*);
}  // namespace protobuf
}  // namespace google

enum PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus {
  PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_NA = 0,
  PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_Normal = 1,
  PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_Error = 2,
  PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_IsValid(int value);
const PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_MIN = PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_NA;
const PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_MAX = PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_Error;
const int PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_ARRAYSIZE = PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_descriptor();
inline const ::std::string& PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_Name(PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_descriptor(), value);
}
inline bool PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_Parse(
    const ::std::string& name, PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus>(
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_descriptor(), name, value);
}
enum PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus {
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_NA = 0,
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_Normal = 1,
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_Error = 2,
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_IsValid(int value);
const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_MIN = PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_NA;
const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_MAX = PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_Error;
const int PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_ARRAYSIZE = PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_descriptor();
inline const ::std::string& PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_Name(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_descriptor(), value);
}
inline bool PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_Parse(
    const ::std::string& name, PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus>(
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_descriptor(), name, value);
}
enum PB_Enum_TargetDistributionStatus {
  EV_TargetDistributionStatus_NA = 0,
  EV_TargetDistributionStatus_OnGoing = 1,
  EV_TargetDistributionStatus_Paused = 2,
  EV_TargetDistributionStatus_Stopped = 3,
  PB_Enum_TargetDistributionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PB_Enum_TargetDistributionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PB_Enum_TargetDistributionStatus_IsValid(int value);
const PB_Enum_TargetDistributionStatus PB_Enum_TargetDistributionStatus_MIN = EV_TargetDistributionStatus_NA;
const PB_Enum_TargetDistributionStatus PB_Enum_TargetDistributionStatus_MAX = EV_TargetDistributionStatus_Stopped;
const int PB_Enum_TargetDistributionStatus_ARRAYSIZE = PB_Enum_TargetDistributionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_Enum_TargetDistributionStatus_descriptor();
inline const ::std::string& PB_Enum_TargetDistributionStatus_Name(PB_Enum_TargetDistributionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_Enum_TargetDistributionStatus_descriptor(), value);
}
inline bool PB_Enum_TargetDistributionStatus_Parse(
    const ::std::string& name, PB_Enum_TargetDistributionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_Enum_TargetDistributionStatus>(
    PB_Enum_TargetDistributionStatus_descriptor(), name, value);
}
// ===================================================================

class PBMonitor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor) */ {
 public:
  PBMonitor();
  virtual ~PBMonitor();

  PBMonitor(const PBMonitor& from);

  inline PBMonitor& operator=(const PBMonitor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor(PBMonitor&& from) noexcept
    : PBMonitor() {
    *this = ::std::move(from);
  }

  inline PBMonitor& operator=(PBMonitor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor* internal_default_instance() {
    return reinterpret_cast<const PBMonitor*>(
               &_PBMonitor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PBMonitor* other);
  friend void swap(PBMonitor& a, PBMonitor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor* New() const final {
    return CreateMaybeMessage<PBMonitor>(NULL);
  }

  PBMonitor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor& from);
  void MergeFrom(const PBMonitor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBMonitor_TargetDistribution listMonitor_TargetDistribution = 7;
  int listmonitor_targetdistribution_size() const;
  void clear_listmonitor_targetdistribution();
  static const int kListMonitorTargetDistributionFieldNumber = 7;
  ::PBMonitor_TargetDistribution* mutable_listmonitor_targetdistribution(int index);
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_TargetDistribution >*
      mutable_listmonitor_targetdistribution();
  const ::PBMonitor_TargetDistribution& listmonitor_targetdistribution(int index) const;
  ::PBMonitor_TargetDistribution* add_listmonitor_targetdistribution();
  const ::google::protobuf::RepeatedPtrField< ::PBMonitor_TargetDistribution >&
      listmonitor_targetdistribution() const;

  // repeated .PBMonitor_AliveTargetCount listMonitor_AliveTargetCount = 8;
  int listmonitor_alivetargetcount_size() const;
  void clear_listmonitor_alivetargetcount();
  static const int kListMonitorAliveTargetCountFieldNumber = 8;
  ::PBMonitor_AliveTargetCount* mutable_listmonitor_alivetargetcount(int index);
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_AliveTargetCount >*
      mutable_listmonitor_alivetargetcount();
  const ::PBMonitor_AliveTargetCount& listmonitor_alivetargetcount(int index) const;
  ::PBMonitor_AliveTargetCount* add_listmonitor_alivetargetcount();
  const ::google::protobuf::RepeatedPtrField< ::PBMonitor_AliveTargetCount >&
      listmonitor_alivetargetcount() const;

  // repeated .PBMonitor_MessagesRcvdPerTargetInfoSourceAndType listMessagesRcvdPerTargetInfoSourceAndType = 9;
  int listmessagesrcvdpertargetinfosourceandtype_size() const;
  void clear_listmessagesrcvdpertargetinfosourceandtype();
  static const int kListMessagesRcvdPerTargetInfoSourceAndTypeFieldNumber = 9;
  ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* mutable_listmessagesrcvdpertargetinfosourceandtype(int index);
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType >*
      mutable_listmessagesrcvdpertargetinfosourceandtype();
  const ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& listmessagesrcvdpertargetinfosourceandtype(int index) const;
  ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* add_listmessagesrcvdpertargetinfosourceandtype();
  const ::google::protobuf::RepeatedPtrField< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType >&
      listmessagesrcvdpertargetinfosourceandtype() const;

  // repeated .PBMonitor_ToXGS_SoftwareStatus listToXGSSoftwareStatus = 10;
  int listtoxgssoftwarestatus_size() const;
  void clear_listtoxgssoftwarestatus();
  static const int kListToXGSSoftwareStatusFieldNumber = 10;
  ::PBMonitor_ToXGS_SoftwareStatus* mutable_listtoxgssoftwarestatus(int index);
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_ToXGS_SoftwareStatus >*
      mutable_listtoxgssoftwarestatus();
  const ::PBMonitor_ToXGS_SoftwareStatus& listtoxgssoftwarestatus(int index) const;
  ::PBMonitor_ToXGS_SoftwareStatus* add_listtoxgssoftwarestatus();
  const ::google::protobuf::RepeatedPtrField< ::PBMonitor_ToXGS_SoftwareStatus >&
      listtoxgssoftwarestatus() const;

  // .PBMonitor_Probe monitorProbe = 5;
  bool has_monitorprobe() const;
  void clear_monitorprobe();
  static const int kMonitorProbeFieldNumber = 5;
  private:
  const ::PBMonitor_Probe& _internal_monitorprobe() const;
  public:
  const ::PBMonitor_Probe& monitorprobe() const;
  ::PBMonitor_Probe* release_monitorprobe();
  ::PBMonitor_Probe* mutable_monitorprobe();
  void set_allocated_monitorprobe(::PBMonitor_Probe* monitorprobe);

  // .PBMonitor_ProbeAck monitorProbeAck = 6;
  bool has_monitorprobeack() const;
  void clear_monitorprobeack();
  static const int kMonitorProbeAckFieldNumber = 6;
  private:
  const ::PBMonitor_ProbeAck& _internal_monitorprobeack() const;
  public:
  const ::PBMonitor_ProbeAck& monitorprobeack() const;
  ::PBMonitor_ProbeAck* release_monitorprobeack();
  ::PBMonitor_ProbeAck* mutable_monitorprobeack();
  void set_allocated_monitorprobeack(::PBMonitor_ProbeAck* monitorprobeack);

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // uint32 sequenceNum = 2;
  void clear_sequencenum();
  static const int kSequenceNumFieldNumber = 2;
  ::google::protobuf::uint32 sequencenum() const;
  void set_sequencenum(::google::protobuf::uint32 value);

  // .PB_Enum_Software enum_Sender_Software = 3;
  void clear_enum_sender_software();
  static const int kEnumSenderSoftwareFieldNumber = 3;
  ::PB_Enum_Software enum_sender_software() const;
  void set_enum_sender_software(::PB_Enum_Software value);

  // uint32 softwareStartedUTCTime = 4;
  void clear_softwarestartedutctime();
  static const int kSoftwareStartedUTCTimeFieldNumber = 4;
  ::google::protobuf::uint32 softwarestartedutctime() const;
  void set_softwarestartedutctime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBMonitor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_TargetDistribution > listmonitor_targetdistribution_;
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_AliveTargetCount > listmonitor_alivetargetcount_;
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType > listmessagesrcvdpertargetinfosourceandtype_;
  ::google::protobuf::RepeatedPtrField< ::PBMonitor_ToXGS_SoftwareStatus > listtoxgssoftwarestatus_;
  ::PBMonitor_Probe* monitorprobe_;
  ::PBMonitor_ProbeAck* monitorprobeack_;
  ::google::protobuf::uint32 recordutctime_;
  ::google::protobuf::uint32 sequencenum_;
  int enum_sender_software_;
  ::google::protobuf::uint32 softwarestartedutctime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_Probe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_Probe) */ {
 public:
  PBMonitor_Probe();
  virtual ~PBMonitor_Probe();

  PBMonitor_Probe(const PBMonitor_Probe& from);

  inline PBMonitor_Probe& operator=(const PBMonitor_Probe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_Probe(PBMonitor_Probe&& from) noexcept
    : PBMonitor_Probe() {
    *this = ::std::move(from);
  }

  inline PBMonitor_Probe& operator=(PBMonitor_Probe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_Probe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_Probe* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_Probe*>(
               &_PBMonitor_Probe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PBMonitor_Probe* other);
  friend void swap(PBMonitor_Probe& a, PBMonitor_Probe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_Probe* New() const final {
    return CreateMaybeMessage<PBMonitor_Probe>(NULL);
  }

  PBMonitor_Probe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_Probe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_Probe& from);
  void MergeFrom(const PBMonitor_Probe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_Probe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strMsg = 3;
  void clear_strmsg();
  static const int kStrMsgFieldNumber = 3;
  const ::std::string& strmsg() const;
  void set_strmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_strmsg(::std::string&& value);
  #endif
  void set_strmsg(const char* value);
  void set_strmsg(const char* value, size_t size);
  ::std::string* mutable_strmsg();
  ::std::string* release_strmsg();
  void set_allocated_strmsg(::std::string* strmsg);

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // uint32 monitorProbeSequenceNum = 2;
  void clear_monitorprobesequencenum();
  static const int kMonitorProbeSequenceNumFieldNumber = 2;
  ::google::protobuf::uint32 monitorprobesequencenum() const;
  void set_monitorprobesequencenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBMonitor_Probe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strmsg_;
  ::google::protobuf::uint32 recordutctime_;
  ::google::protobuf::uint32 monitorprobesequencenum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_ProbeAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_ProbeAck) */ {
 public:
  PBMonitor_ProbeAck();
  virtual ~PBMonitor_ProbeAck();

  PBMonitor_ProbeAck(const PBMonitor_ProbeAck& from);

  inline PBMonitor_ProbeAck& operator=(const PBMonitor_ProbeAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_ProbeAck(PBMonitor_ProbeAck&& from) noexcept
    : PBMonitor_ProbeAck() {
    *this = ::std::move(from);
  }

  inline PBMonitor_ProbeAck& operator=(PBMonitor_ProbeAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_ProbeAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_ProbeAck* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_ProbeAck*>(
               &_PBMonitor_ProbeAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PBMonitor_ProbeAck* other);
  friend void swap(PBMonitor_ProbeAck& a, PBMonitor_ProbeAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_ProbeAck* New() const final {
    return CreateMaybeMessage<PBMonitor_ProbeAck>(NULL);
  }

  PBMonitor_ProbeAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_ProbeAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_ProbeAck& from);
  void MergeFrom(const PBMonitor_ProbeAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_ProbeAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // .PB_Enum_Software enum_ProbeSender_Software = 2;
  void clear_enum_probesender_software();
  static const int kEnumProbeSenderSoftwareFieldNumber = 2;
  ::PB_Enum_Software enum_probesender_software() const;
  void set_enum_probesender_software(::PB_Enum_Software value);

  // uint64 totalMessagesRcvd = 4;
  void clear_totalmessagesrcvd();
  static const int kTotalMessagesRcvdFieldNumber = 4;
  ::google::protobuf::uint64 totalmessagesrcvd() const;
  void set_totalmessagesrcvd(::google::protobuf::uint64 value);

  // uint64 origTargetPositionsRcvd = 5;
  void clear_origtargetpositionsrcvd();
  static const int kOrigTargetPositionsRcvdFieldNumber = 5;
  ::google::protobuf::uint64 origtargetpositionsrcvd() const;
  void set_origtargetpositionsrcvd(::google::protobuf::uint64 value);

  // uint64 validOrigTargetPositionsRcvd = 6;
  void clear_validorigtargetpositionsrcvd();
  static const int kValidOrigTargetPositionsRcvdFieldNumber = 6;
  ::google::protobuf::uint64 validorigtargetpositionsrcvd() const;
  void set_validorigtargetpositionsrcvd(::google::protobuf::uint64 value);

  // uint32 monitorProbeSequenceNumAcked = 3;
  void clear_monitorprobesequencenumacked();
  static const int kMonitorProbeSequenceNumAckedFieldNumber = 3;
  ::google::protobuf::uint32 monitorprobesequencenumacked() const;
  void set_monitorprobesequencenumacked(::google::protobuf::uint32 value);

  // uint32 configMessagesRcvd = 10;
  void clear_configmessagesrcvd();
  static const int kConfigMessagesRcvdFieldNumber = 10;
  ::google::protobuf::uint32 configmessagesrcvd() const;
  void set_configmessagesrcvd(::google::protobuf::uint32 value);

  // uint64 preprocessedTargetPositionsRcvd = 7;
  void clear_preprocessedtargetpositionsrcvd();
  static const int kPreprocessedTargetPositionsRcvdFieldNumber = 7;
  ::google::protobuf::uint64 preprocessedtargetpositionsrcvd() const;
  void set_preprocessedtargetpositionsrcvd(::google::protobuf::uint64 value);

  // uint64 fusedTargetPositionsRcvd = 8;
  void clear_fusedtargetpositionsrcvd();
  static const int kFusedTargetPositionsRcvdFieldNumber = 8;
  ::google::protobuf::uint64 fusedtargetpositionsrcvd() const;
  void set_fusedtargetpositionsrcvd(::google::protobuf::uint64 value);

  // uint64 anomalyMessagesRcvd = 9;
  void clear_anomalymessagesrcvd();
  static const int kAnomalyMessagesRcvdFieldNumber = 9;
  ::google::protobuf::uint64 anomalymessagesrcvd() const;
  void set_anomalymessagesrcvd(::google::protobuf::uint64 value);

  // uint32 requestMessagesRcvd = 11;
  void clear_requestmessagesrcvd();
  static const int kRequestMessagesRcvdFieldNumber = 11;
  ::google::protobuf::uint32 requestmessagesrcvd() const;
  void set_requestmessagesrcvd(::google::protobuf::uint32 value);

  // uint32 commandMessagesRcvd = 12;
  void clear_commandmessagesrcvd();
  static const int kCommandMessagesRcvdFieldNumber = 12;
  ::google::protobuf::uint32 commandmessagesrcvd() const;
  void set_commandmessagesrcvd(::google::protobuf::uint32 value);

  // uint64 totalMessagesSent = 13;
  void clear_totalmessagessent();
  static const int kTotalMessagesSentFieldNumber = 13;
  ::google::protobuf::uint64 totalmessagessent() const;
  void set_totalmessagessent(::google::protobuf::uint64 value);

  // uint64 validOrigTargetPositionsSent = 14;
  void clear_validorigtargetpositionssent();
  static const int kValidOrigTargetPositionsSentFieldNumber = 14;
  ::google::protobuf::uint64 validorigtargetpositionssent() const;
  void set_validorigtargetpositionssent(::google::protobuf::uint64 value);

  // uint64 preprocessedTargetPositionsSent = 15;
  void clear_preprocessedtargetpositionssent();
  static const int kPreprocessedTargetPositionsSentFieldNumber = 15;
  ::google::protobuf::uint64 preprocessedtargetpositionssent() const;
  void set_preprocessedtargetpositionssent(::google::protobuf::uint64 value);

  // uint64 fusedTargetPositionsSent = 16;
  void clear_fusedtargetpositionssent();
  static const int kFusedTargetPositionsSentFieldNumber = 16;
  ::google::protobuf::uint64 fusedtargetpositionssent() const;
  void set_fusedtargetpositionssent(::google::protobuf::uint64 value);

  // uint64 anomalyMessagesSent = 17;
  void clear_anomalymessagessent();
  static const int kAnomalyMessagesSentFieldNumber = 17;
  ::google::protobuf::uint64 anomalymessagessent() const;
  void set_anomalymessagessent(::google::protobuf::uint64 value);

  // uint32 configMessagesSent = 18;
  void clear_configmessagessent();
  static const int kConfigMessagesSentFieldNumber = 18;
  ::google::protobuf::uint32 configmessagessent() const;
  void set_configmessagessent(::google::protobuf::uint32 value);

  // uint32 requestMessagesSent = 19;
  void clear_requestmessagessent();
  static const int kRequestMessagesSentFieldNumber = 19;
  ::google::protobuf::uint32 requestmessagessent() const;
  void set_requestmessagessent(::google::protobuf::uint32 value);

  // uint32 commandMessagesSent = 20;
  void clear_commandmessagessent();
  static const int kCommandMessagesSentFieldNumber = 20;
  ::google::protobuf::uint32 commandmessagessent() const;
  void set_commandmessagessent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBMonitor_ProbeAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recordutctime_;
  int enum_probesender_software_;
  ::google::protobuf::uint64 totalmessagesrcvd_;
  ::google::protobuf::uint64 origtargetpositionsrcvd_;
  ::google::protobuf::uint64 validorigtargetpositionsrcvd_;
  ::google::protobuf::uint32 monitorprobesequencenumacked_;
  ::google::protobuf::uint32 configmessagesrcvd_;
  ::google::protobuf::uint64 preprocessedtargetpositionsrcvd_;
  ::google::protobuf::uint64 fusedtargetpositionsrcvd_;
  ::google::protobuf::uint64 anomalymessagesrcvd_;
  ::google::protobuf::uint32 requestmessagesrcvd_;
  ::google::protobuf::uint32 commandmessagesrcvd_;
  ::google::protobuf::uint64 totalmessagessent_;
  ::google::protobuf::uint64 validorigtargetpositionssent_;
  ::google::protobuf::uint64 preprocessedtargetpositionssent_;
  ::google::protobuf::uint64 fusedtargetpositionssent_;
  ::google::protobuf::uint64 anomalymessagessent_;
  ::google::protobuf::uint32 configmessagessent_;
  ::google::protobuf::uint32 requestmessagessent_;
  ::google::protobuf::uint32 commandmessagessent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_ToXGS_SoftwareStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_ToXGS_SoftwareStatus) */ {
 public:
  PBMonitor_ToXGS_SoftwareStatus();
  virtual ~PBMonitor_ToXGS_SoftwareStatus();

  PBMonitor_ToXGS_SoftwareStatus(const PBMonitor_ToXGS_SoftwareStatus& from);

  inline PBMonitor_ToXGS_SoftwareStatus& operator=(const PBMonitor_ToXGS_SoftwareStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_ToXGS_SoftwareStatus(PBMonitor_ToXGS_SoftwareStatus&& from) noexcept
    : PBMonitor_ToXGS_SoftwareStatus() {
    *this = ::std::move(from);
  }

  inline PBMonitor_ToXGS_SoftwareStatus& operator=(PBMonitor_ToXGS_SoftwareStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_ToXGS_SoftwareStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_ToXGS_SoftwareStatus* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_ToXGS_SoftwareStatus*>(
               &_PBMonitor_ToXGS_SoftwareStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PBMonitor_ToXGS_SoftwareStatus* other);
  friend void swap(PBMonitor_ToXGS_SoftwareStatus& a, PBMonitor_ToXGS_SoftwareStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_ToXGS_SoftwareStatus* New() const final {
    return CreateMaybeMessage<PBMonitor_ToXGS_SoftwareStatus>(NULL);
  }

  PBMonitor_ToXGS_SoftwareStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_ToXGS_SoftwareStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_ToXGS_SoftwareStatus& from);
  void MergeFrom(const PBMonitor_ToXGS_SoftwareStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_ToXGS_SoftwareStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PB_Enum_XGS_SoftwareStatus;
  static const PB_Enum_XGS_SoftwareStatus EV_XGS_SoftwareStatus_NA =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_NA;
  static const PB_Enum_XGS_SoftwareStatus EV_XGS_SoftwareStatus_Normal =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_Normal;
  static const PB_Enum_XGS_SoftwareStatus EV_XGS_SoftwareStatus_Error =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_EV_XGS_SoftwareStatus_Error;
  static inline bool PB_Enum_XGS_SoftwareStatus_IsValid(int value) {
    return PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_IsValid(value);
  }
  static const PB_Enum_XGS_SoftwareStatus PB_Enum_XGS_SoftwareStatus_MIN =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_MIN;
  static const PB_Enum_XGS_SoftwareStatus PB_Enum_XGS_SoftwareStatus_MAX =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_MAX;
  static const int PB_Enum_XGS_SoftwareStatus_ARRAYSIZE =
    PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PB_Enum_XGS_SoftwareStatus_descriptor() {
    return PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_descriptor();
  }
  static inline const ::std::string& PB_Enum_XGS_SoftwareStatus_Name(PB_Enum_XGS_SoftwareStatus value) {
    return PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_Name(value);
  }
  static inline bool PB_Enum_XGS_SoftwareStatus_Parse(const ::std::string& name,
      PB_Enum_XGS_SoftwareStatus* value) {
    return PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string errorDescription = 19;
  void clear_errordescription();
  static const int kErrorDescriptionFieldNumber = 19;
  const ::std::string& errordescription() const;
  void set_errordescription(const ::std::string& value);
  #if LANG_CXX11
  void set_errordescription(::std::string&& value);
  #endif
  void set_errordescription(const char* value);
  void set_errordescription(const char* value, size_t size);
  ::std::string* mutable_errordescription();
  ::std::string* release_errordescription();
  void set_allocated_errordescription(::std::string* errordescription);

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_XGS_HJFF_Status = 2;
  void clear_subsys_xgs_hjff_status();
  static const int kSubsysXGSHJFFStatusFieldNumber = 2;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus subsys_xgs_hjff_status() const;
  void set_subsys_xgs_hjff_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_ZHCL_Status = 3;
  void clear_subsys_zhcl_status();
  static const int kSubsysZHCLStatusFieldNumber = 3;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus subsys_zhcl_status() const;
  void set_subsys_zhcl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_XXFenXi_Status = 4;
  void clear_subsys_xxfenxi_status();
  static const int kSubsysXXFenXiStatusFieldNumber = 4;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus subsys_xxfenxi_status() const;
  void set_subsys_xxfenxi_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_YWGL_Status = 5;
  void clear_subsys_ywgl_status();
  static const int kSubsysYWGLStatusFieldNumber = 5;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus subsys_ywgl_status() const;
  void set_subsys_ywgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_SJGL_Status = 6;
  void clear_subsys_sjgl_status();
  static const int kSubsysSJGLStatusFieldNumber = 6;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus subsys_sjgl_status() const;
  void set_subsys_sjgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXZHCL_Status = 7;
  void clear_module_xxzhcl_status();
  static const int kModuleXXZHCLStatusFieldNumber = 7;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_xxzhcl_status() const;
  void set_module_xxzhcl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXGL_Status = 8;
  void clear_module_xxgl_status();
  static const int kModuleXXGLStatusFieldNumber = 8;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_xxgl_status() const;
  void set_module_xxgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXFenFa_Status = 9;
  void clear_module_xxfenfa_status();
  static const int kModuleXXFenFaStatusFieldNumber = 9;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_xxfenfa_status() const;
  void set_module_xxfenfa_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_JKTJ_Status = 10;
  void clear_module_jktj_status();
  static const int kModuleJKTJStatusFieldNumber = 10;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_jktj_status() const;
  void set_module_jktj_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_WJFX_Status = 11;
  void clear_module_wjfx_status();
  static const int kModuleWJFXStatusFieldNumber = 11;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_wjfx_status() const;
  void set_module_wjfx_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_YCGJ_Status = 12;
  void clear_module_ycgj_status();
  static const int kModuleYCGJStatusFieldNumber = 12;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_ycgj_status() const;
  void set_module_ycgj_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XTJK_Status = 13;
  void clear_module_xtjk_status();
  static const int kModuleXTJKStatusFieldNumber = 13;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_xtjk_status() const;
  void set_module_xtjk_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_YHQXGL_Status = 14;
  void clear_module_yhqxgl_status();
  static const int kModuleYHQXGLStatusFieldNumber = 14;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_yhqxgl_status() const;
  void set_module_yhqxgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJYYGLWH_Status = 15;
  void clear_module_sjyyglwh_status();
  static const int kModuleSJYYGLWHStatusFieldNumber = 15;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_sjyyglwh_status() const;
  void set_module_sjyyglwh_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJKYXZTJK_Status = 16;
  void clear_module_sjkyxztjk_status();
  static const int kModuleSJKYXZTJKStatusFieldNumber = 16;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_sjkyxztjk_status() const;
  void set_module_sjkyxztjk_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJBFHF_Status = 17;
  void clear_module_sjbfhf_status();
  static const int kModuleSJBFHFStatusFieldNumber = 17;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_sjbfhf_status() const;
  void set_module_sjbfhf_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_JRYCL_Status = 18;
  void clear_module_jrycl_status();
  static const int kModuleJRYCLStatusFieldNumber = 18;
  ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus module_jrycl_status() const;
  void set_module_jrycl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value);

  // @@protoc_insertion_point(class_scope:PBMonitor_ToXGS_SoftwareStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errordescription_;
  ::google::protobuf::uint32 recordutctime_;
  int subsys_xgs_hjff_status_;
  int subsys_zhcl_status_;
  int subsys_xxfenxi_status_;
  int subsys_ywgl_status_;
  int subsys_sjgl_status_;
  int module_xxzhcl_status_;
  int module_xxgl_status_;
  int module_xxfenfa_status_;
  int module_jktj_status_;
  int module_wjfx_status_;
  int module_ycgj_status_;
  int module_xtjk_status_;
  int module_yhqxgl_status_;
  int module_sjyyglwh_status_;
  int module_sjkyxztjk_status_;
  int module_sjbfhf_status_;
  int module_jrycl_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_TargetDistribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_TargetDistribution) */ {
 public:
  PBMonitor_TargetDistribution();
  virtual ~PBMonitor_TargetDistribution();

  PBMonitor_TargetDistribution(const PBMonitor_TargetDistribution& from);

  inline PBMonitor_TargetDistribution& operator=(const PBMonitor_TargetDistribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_TargetDistribution(PBMonitor_TargetDistribution&& from) noexcept
    : PBMonitor_TargetDistribution() {
    *this = ::std::move(from);
  }

  inline PBMonitor_TargetDistribution& operator=(PBMonitor_TargetDistribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_TargetDistribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_TargetDistribution* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_TargetDistribution*>(
               &_PBMonitor_TargetDistribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PBMonitor_TargetDistribution* other);
  friend void swap(PBMonitor_TargetDistribution& a, PBMonitor_TargetDistribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_TargetDistribution* New() const final {
    return CreateMaybeMessage<PBMonitor_TargetDistribution>(NULL);
  }

  PBMonitor_TargetDistribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_TargetDistribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_TargetDistribution& from);
  void MergeFrom(const PBMonitor_TargetDistribution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_TargetDistribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // int32 distribution_id = 2;
  void clear_distribution_id();
  static const int kDistributionIdFieldNumber = 2;
  ::google::protobuf::int32 distribution_id() const;
  void set_distribution_id(::google::protobuf::int32 value);

  // uint32 distributionStartUTCTime = 3;
  void clear_distributionstartutctime();
  static const int kDistributionStartUTCTimeFieldNumber = 3;
  ::google::protobuf::uint32 distributionstartutctime() const;
  void set_distributionstartutctime(::google::protobuf::uint32 value);

  // .PB_Enum_TargetDistributionStatus enum_DistributionState = 4;
  void clear_enum_distributionstate();
  static const int kEnumDistributionStateFieldNumber = 4;
  ::PB_Enum_TargetDistributionStatus enum_distributionstate() const;
  void set_enum_distributionstate(::PB_Enum_TargetDistributionStatus value);

  // uint64 message_Count_Sent = 5;
  void clear_message_count_sent();
  static const int kMessageCountSentFieldNumber = 5;
  ::google::protobuf::uint64 message_count_sent() const;
  void set_message_count_sent(::google::protobuf::uint64 value);

  // uint32 target_Count_Sent = 6;
  void clear_target_count_sent();
  static const int kTargetCountSentFieldNumber = 6;
  ::google::protobuf::uint32 target_count_sent() const;
  void set_target_count_sent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBMonitor_TargetDistribution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recordutctime_;
  ::google::protobuf::int32 distribution_id_;
  ::google::protobuf::uint32 distributionstartutctime_;
  int enum_distributionstate_;
  ::google::protobuf::uint64 message_count_sent_;
  ::google::protobuf::uint32 target_count_sent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_AliveTargetCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_AliveTargetCount) */ {
 public:
  PBMonitor_AliveTargetCount();
  virtual ~PBMonitor_AliveTargetCount();

  PBMonitor_AliveTargetCount(const PBMonitor_AliveTargetCount& from);

  inline PBMonitor_AliveTargetCount& operator=(const PBMonitor_AliveTargetCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_AliveTargetCount(PBMonitor_AliveTargetCount&& from) noexcept
    : PBMonitor_AliveTargetCount() {
    *this = ::std::move(from);
  }

  inline PBMonitor_AliveTargetCount& operator=(PBMonitor_AliveTargetCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_AliveTargetCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_AliveTargetCount* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_AliveTargetCount*>(
               &_PBMonitor_AliveTargetCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PBMonitor_AliveTargetCount* other);
  friend void swap(PBMonitor_AliveTargetCount& a, PBMonitor_AliveTargetCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_AliveTargetCount* New() const final {
    return CreateMaybeMessage<PBMonitor_AliveTargetCount>(NULL);
  }

  PBMonitor_AliveTargetCount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_AliveTargetCount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_AliveTargetCount& from);
  void MergeFrom(const PBMonitor_AliveTargetCount& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_AliveTargetCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // .PB_Enum_TargetID_Type enum_targetID_Type = 2;
  void clear_enum_targetid_type();
  static const int kEnumTargetIDTypeFieldNumber = 2;
  ::PB_Enum_TargetID_Type enum_targetid_type() const;
  void set_enum_targetid_type(::PB_Enum_TargetID_Type value);

  // int32 aliveTargetcount = 3;
  void clear_alivetargetcount();
  static const int kAliveTargetcountFieldNumber = 3;
  ::google::protobuf::int32 alivetargetcount() const;
  void set_alivetargetcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBMonitor_AliveTargetCount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recordutctime_;
  int enum_targetid_type_;
  ::google::protobuf::int32 alivetargetcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMonitor_MessagesRcvdPerTargetInfoSourceAndType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType) */ {
 public:
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType();
  virtual ~PBMonitor_MessagesRcvdPerTargetInfoSourceAndType();

  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType(const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& from);

  inline PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& operator=(const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType&& from) noexcept
    : PBMonitor_MessagesRcvdPerTargetInfoSourceAndType() {
    *this = ::std::move(from);
  }

  inline PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& operator=(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* internal_default_instance() {
    return reinterpret_cast<const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType*>(
               &_PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* other);
  friend void swap(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& a, PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* New() const final {
    return CreateMaybeMessage<PBMonitor_MessagesRcvdPerTargetInfoSourceAndType>(NULL);
  }

  PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMonitor_MessagesRcvdPerTargetInfoSourceAndType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& from);
  void MergeFrom(const PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus PB_Enum_MessagesRcvdStatus;
  static const PB_Enum_MessagesRcvdStatus EV_MessagesRcvdStatus_NA =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_NA;
  static const PB_Enum_MessagesRcvdStatus EV_MessagesRcvdStatus_Normal =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_Normal;
  static const PB_Enum_MessagesRcvdStatus EV_MessagesRcvdStatus_Error =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_EV_MessagesRcvdStatus_Error;
  static inline bool PB_Enum_MessagesRcvdStatus_IsValid(int value) {
    return PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_IsValid(value);
  }
  static const PB_Enum_MessagesRcvdStatus PB_Enum_MessagesRcvdStatus_MIN =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_MIN;
  static const PB_Enum_MessagesRcvdStatus PB_Enum_MessagesRcvdStatus_MAX =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_MAX;
  static const int PB_Enum_MessagesRcvdStatus_ARRAYSIZE =
    PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_PB_Enum_MessagesRcvdStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PB_Enum_MessagesRcvdStatus_descriptor() {
    return PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_descriptor();
  }
  static inline const ::std::string& PB_Enum_MessagesRcvdStatus_Name(PB_Enum_MessagesRcvdStatus value) {
    return PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_Name(value);
  }
  static inline bool PB_Enum_MessagesRcvdStatus_Parse(const ::std::string& name,
      PB_Enum_MessagesRcvdStatus* value) {
    return PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 recordUTCTime = 1;
  void clear_recordutctime();
  static const int kRecordUTCTimeFieldNumber = 1;
  ::google::protobuf::uint32 recordutctime() const;
  void set_recordutctime(::google::protobuf::uint32 value);

  // .PB_Enum_TargetInfo_Source enum_targetInfo_Source = 2;
  void clear_enum_targetinfo_source();
  static const int kEnumTargetInfoSourceFieldNumber = 2;
  ::PB_Enum_TargetInfo_Source enum_targetinfo_source() const;
  void set_enum_targetinfo_source(::PB_Enum_TargetInfo_Source value);

  // int64 messagesRcvd = 4;
  void clear_messagesrcvd();
  static const int kMessagesRcvdFieldNumber = 4;
  ::google::protobuf::int64 messagesrcvd() const;
  void set_messagesrcvd(::google::protobuf::int64 value);

  // .PB_Enum_TargetInfo_Type enum_targetInfo_Type = 3;
  void clear_enum_targetinfo_type();
  static const int kEnumTargetInfoTypeFieldNumber = 3;
  ::PB_Enum_TargetInfo_Type enum_targetinfo_type() const;
  void set_enum_targetinfo_type(::PB_Enum_TargetInfo_Type value);

  // int32 targetsRcvd = 5;
  void clear_targetsrcvd();
  static const int kTargetsRcvdFieldNumber = 5;
  ::google::protobuf::int32 targetsrcvd() const;
  void set_targetsrcvd(::google::protobuf::int32 value);

  // .PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.PB_Enum_MessagesRcvdStatus messagesRcvdStatus = 6;
  void clear_messagesrcvdstatus();
  static const int kMessagesRcvdStatusFieldNumber = 6;
  ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus messagesrcvdstatus() const;
  void set_messagesrcvdstatus(::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus value);

  // @@protoc_insertion_point(class_scope:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recordutctime_;
  int enum_targetinfo_source_;
  ::google::protobuf::int64 messagesrcvd_;
  int enum_targetinfo_type_;
  ::google::protobuf::int32 targetsrcvd_;
  int messagesrcvdstatus_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Monitor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBMonitor

// uint32 recordUTCTime = 1;
inline void PBMonitor::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor.recordUTCTime)
}

// uint32 sequenceNum = 2;
inline void PBMonitor::clear_sequencenum() {
  sequencenum_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor::sequencenum() const {
  // @@protoc_insertion_point(field_get:PBMonitor.sequenceNum)
  return sequencenum_;
}
inline void PBMonitor::set_sequencenum(::google::protobuf::uint32 value) {
  
  sequencenum_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor.sequenceNum)
}

// .PB_Enum_Software enum_Sender_Software = 3;
inline void PBMonitor::clear_enum_sender_software() {
  enum_sender_software_ = 0;
}
inline ::PB_Enum_Software PBMonitor::enum_sender_software() const {
  // @@protoc_insertion_point(field_get:PBMonitor.enum_Sender_Software)
  return static_cast< ::PB_Enum_Software >(enum_sender_software_);
}
inline void PBMonitor::set_enum_sender_software(::PB_Enum_Software value) {
  
  enum_sender_software_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor.enum_Sender_Software)
}

// uint32 softwareStartedUTCTime = 4;
inline void PBMonitor::clear_softwarestartedutctime() {
  softwarestartedutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor::softwarestartedutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor.softwareStartedUTCTime)
  return softwarestartedutctime_;
}
inline void PBMonitor::set_softwarestartedutctime(::google::protobuf::uint32 value) {
  
  softwarestartedutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor.softwareStartedUTCTime)
}

// .PBMonitor_Probe monitorProbe = 5;
inline bool PBMonitor::has_monitorprobe() const {
  return this != internal_default_instance() && monitorprobe_ != NULL;
}
inline void PBMonitor::clear_monitorprobe() {
  if (GetArenaNoVirtual() == NULL && monitorprobe_ != NULL) {
    delete monitorprobe_;
  }
  monitorprobe_ = NULL;
}
inline const ::PBMonitor_Probe& PBMonitor::_internal_monitorprobe() const {
  return *monitorprobe_;
}
inline const ::PBMonitor_Probe& PBMonitor::monitorprobe() const {
  const ::PBMonitor_Probe* p = monitorprobe_;
  // @@protoc_insertion_point(field_get:PBMonitor.monitorProbe)
  return p != NULL ? *p : *reinterpret_cast<const ::PBMonitor_Probe*>(
      &::_PBMonitor_Probe_default_instance_);
}
inline ::PBMonitor_Probe* PBMonitor::release_monitorprobe() {
  // @@protoc_insertion_point(field_release:PBMonitor.monitorProbe)
  
  ::PBMonitor_Probe* temp = monitorprobe_;
  monitorprobe_ = NULL;
  return temp;
}
inline ::PBMonitor_Probe* PBMonitor::mutable_monitorprobe() {
  
  if (monitorprobe_ == NULL) {
    auto* p = CreateMaybeMessage<::PBMonitor_Probe>(GetArenaNoVirtual());
    monitorprobe_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PBMonitor.monitorProbe)
  return monitorprobe_;
}
inline void PBMonitor::set_allocated_monitorprobe(::PBMonitor_Probe* monitorprobe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete monitorprobe_;
  }
  if (monitorprobe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      monitorprobe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, monitorprobe, submessage_arena);
    }
    
  } else {
    
  }
  monitorprobe_ = monitorprobe;
  // @@protoc_insertion_point(field_set_allocated:PBMonitor.monitorProbe)
}

// .PBMonitor_ProbeAck monitorProbeAck = 6;
inline bool PBMonitor::has_monitorprobeack() const {
  return this != internal_default_instance() && monitorprobeack_ != NULL;
}
inline void PBMonitor::clear_monitorprobeack() {
  if (GetArenaNoVirtual() == NULL && monitorprobeack_ != NULL) {
    delete monitorprobeack_;
  }
  monitorprobeack_ = NULL;
}
inline const ::PBMonitor_ProbeAck& PBMonitor::_internal_monitorprobeack() const {
  return *monitorprobeack_;
}
inline const ::PBMonitor_ProbeAck& PBMonitor::monitorprobeack() const {
  const ::PBMonitor_ProbeAck* p = monitorprobeack_;
  // @@protoc_insertion_point(field_get:PBMonitor.monitorProbeAck)
  return p != NULL ? *p : *reinterpret_cast<const ::PBMonitor_ProbeAck*>(
      &::_PBMonitor_ProbeAck_default_instance_);
}
inline ::PBMonitor_ProbeAck* PBMonitor::release_monitorprobeack() {
  // @@protoc_insertion_point(field_release:PBMonitor.monitorProbeAck)
  
  ::PBMonitor_ProbeAck* temp = monitorprobeack_;
  monitorprobeack_ = NULL;
  return temp;
}
inline ::PBMonitor_ProbeAck* PBMonitor::mutable_monitorprobeack() {
  
  if (monitorprobeack_ == NULL) {
    auto* p = CreateMaybeMessage<::PBMonitor_ProbeAck>(GetArenaNoVirtual());
    monitorprobeack_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PBMonitor.monitorProbeAck)
  return monitorprobeack_;
}
inline void PBMonitor::set_allocated_monitorprobeack(::PBMonitor_ProbeAck* monitorprobeack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete monitorprobeack_;
  }
  if (monitorprobeack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      monitorprobeack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, monitorprobeack, submessage_arena);
    }
    
  } else {
    
  }
  monitorprobeack_ = monitorprobeack;
  // @@protoc_insertion_point(field_set_allocated:PBMonitor.monitorProbeAck)
}

// repeated .PBMonitor_TargetDistribution listMonitor_TargetDistribution = 7;
inline int PBMonitor::listmonitor_targetdistribution_size() const {
  return listmonitor_targetdistribution_.size();
}
inline void PBMonitor::clear_listmonitor_targetdistribution() {
  listmonitor_targetdistribution_.Clear();
}
inline ::PBMonitor_TargetDistribution* PBMonitor::mutable_listmonitor_targetdistribution(int index) {
  // @@protoc_insertion_point(field_mutable:PBMonitor.listMonitor_TargetDistribution)
  return listmonitor_targetdistribution_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PBMonitor_TargetDistribution >*
PBMonitor::mutable_listmonitor_targetdistribution() {
  // @@protoc_insertion_point(field_mutable_list:PBMonitor.listMonitor_TargetDistribution)
  return &listmonitor_targetdistribution_;
}
inline const ::PBMonitor_TargetDistribution& PBMonitor::listmonitor_targetdistribution(int index) const {
  // @@protoc_insertion_point(field_get:PBMonitor.listMonitor_TargetDistribution)
  return listmonitor_targetdistribution_.Get(index);
}
inline ::PBMonitor_TargetDistribution* PBMonitor::add_listmonitor_targetdistribution() {
  // @@protoc_insertion_point(field_add:PBMonitor.listMonitor_TargetDistribution)
  return listmonitor_targetdistribution_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMonitor_TargetDistribution >&
PBMonitor::listmonitor_targetdistribution() const {
  // @@protoc_insertion_point(field_list:PBMonitor.listMonitor_TargetDistribution)
  return listmonitor_targetdistribution_;
}

// repeated .PBMonitor_AliveTargetCount listMonitor_AliveTargetCount = 8;
inline int PBMonitor::listmonitor_alivetargetcount_size() const {
  return listmonitor_alivetargetcount_.size();
}
inline void PBMonitor::clear_listmonitor_alivetargetcount() {
  listmonitor_alivetargetcount_.Clear();
}
inline ::PBMonitor_AliveTargetCount* PBMonitor::mutable_listmonitor_alivetargetcount(int index) {
  // @@protoc_insertion_point(field_mutable:PBMonitor.listMonitor_AliveTargetCount)
  return listmonitor_alivetargetcount_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PBMonitor_AliveTargetCount >*
PBMonitor::mutable_listmonitor_alivetargetcount() {
  // @@protoc_insertion_point(field_mutable_list:PBMonitor.listMonitor_AliveTargetCount)
  return &listmonitor_alivetargetcount_;
}
inline const ::PBMonitor_AliveTargetCount& PBMonitor::listmonitor_alivetargetcount(int index) const {
  // @@protoc_insertion_point(field_get:PBMonitor.listMonitor_AliveTargetCount)
  return listmonitor_alivetargetcount_.Get(index);
}
inline ::PBMonitor_AliveTargetCount* PBMonitor::add_listmonitor_alivetargetcount() {
  // @@protoc_insertion_point(field_add:PBMonitor.listMonitor_AliveTargetCount)
  return listmonitor_alivetargetcount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMonitor_AliveTargetCount >&
PBMonitor::listmonitor_alivetargetcount() const {
  // @@protoc_insertion_point(field_list:PBMonitor.listMonitor_AliveTargetCount)
  return listmonitor_alivetargetcount_;
}

// repeated .PBMonitor_MessagesRcvdPerTargetInfoSourceAndType listMessagesRcvdPerTargetInfoSourceAndType = 9;
inline int PBMonitor::listmessagesrcvdpertargetinfosourceandtype_size() const {
  return listmessagesrcvdpertargetinfosourceandtype_.size();
}
inline void PBMonitor::clear_listmessagesrcvdpertargetinfosourceandtype() {
  listmessagesrcvdpertargetinfosourceandtype_.Clear();
}
inline ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* PBMonitor::mutable_listmessagesrcvdpertargetinfosourceandtype(int index) {
  // @@protoc_insertion_point(field_mutable:PBMonitor.listMessagesRcvdPerTargetInfoSourceAndType)
  return listmessagesrcvdpertargetinfosourceandtype_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType >*
PBMonitor::mutable_listmessagesrcvdpertargetinfosourceandtype() {
  // @@protoc_insertion_point(field_mutable_list:PBMonitor.listMessagesRcvdPerTargetInfoSourceAndType)
  return &listmessagesrcvdpertargetinfosourceandtype_;
}
inline const ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType& PBMonitor::listmessagesrcvdpertargetinfosourceandtype(int index) const {
  // @@protoc_insertion_point(field_get:PBMonitor.listMessagesRcvdPerTargetInfoSourceAndType)
  return listmessagesrcvdpertargetinfosourceandtype_.Get(index);
}
inline ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType* PBMonitor::add_listmessagesrcvdpertargetinfosourceandtype() {
  // @@protoc_insertion_point(field_add:PBMonitor.listMessagesRcvdPerTargetInfoSourceAndType)
  return listmessagesrcvdpertargetinfosourceandtype_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType >&
PBMonitor::listmessagesrcvdpertargetinfosourceandtype() const {
  // @@protoc_insertion_point(field_list:PBMonitor.listMessagesRcvdPerTargetInfoSourceAndType)
  return listmessagesrcvdpertargetinfosourceandtype_;
}

// repeated .PBMonitor_ToXGS_SoftwareStatus listToXGSSoftwareStatus = 10;
inline int PBMonitor::listtoxgssoftwarestatus_size() const {
  return listtoxgssoftwarestatus_.size();
}
inline void PBMonitor::clear_listtoxgssoftwarestatus() {
  listtoxgssoftwarestatus_.Clear();
}
inline ::PBMonitor_ToXGS_SoftwareStatus* PBMonitor::mutable_listtoxgssoftwarestatus(int index) {
  // @@protoc_insertion_point(field_mutable:PBMonitor.listToXGSSoftwareStatus)
  return listtoxgssoftwarestatus_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::PBMonitor_ToXGS_SoftwareStatus >*
PBMonitor::mutable_listtoxgssoftwarestatus() {
  // @@protoc_insertion_point(field_mutable_list:PBMonitor.listToXGSSoftwareStatus)
  return &listtoxgssoftwarestatus_;
}
inline const ::PBMonitor_ToXGS_SoftwareStatus& PBMonitor::listtoxgssoftwarestatus(int index) const {
  // @@protoc_insertion_point(field_get:PBMonitor.listToXGSSoftwareStatus)
  return listtoxgssoftwarestatus_.Get(index);
}
inline ::PBMonitor_ToXGS_SoftwareStatus* PBMonitor::add_listtoxgssoftwarestatus() {
  // @@protoc_insertion_point(field_add:PBMonitor.listToXGSSoftwareStatus)
  return listtoxgssoftwarestatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMonitor_ToXGS_SoftwareStatus >&
PBMonitor::listtoxgssoftwarestatus() const {
  // @@protoc_insertion_point(field_list:PBMonitor.listToXGSSoftwareStatus)
  return listtoxgssoftwarestatus_;
}

// -------------------------------------------------------------------

// PBMonitor_Probe

// uint32 recordUTCTime = 1;
inline void PBMonitor_Probe::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_Probe::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_Probe.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_Probe::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_Probe.recordUTCTime)
}

// uint32 monitorProbeSequenceNum = 2;
inline void PBMonitor_Probe::clear_monitorprobesequencenum() {
  monitorprobesequencenum_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_Probe::monitorprobesequencenum() const {
  // @@protoc_insertion_point(field_get:PBMonitor_Probe.monitorProbeSequenceNum)
  return monitorprobesequencenum_;
}
inline void PBMonitor_Probe::set_monitorprobesequencenum(::google::protobuf::uint32 value) {
  
  monitorprobesequencenum_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_Probe.monitorProbeSequenceNum)
}

// string strMsg = 3;
inline void PBMonitor_Probe::clear_strmsg() {
  strmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMonitor_Probe::strmsg() const {
  // @@protoc_insertion_point(field_get:PBMonitor_Probe.strMsg)
  return strmsg_.GetNoArena();
}
inline void PBMonitor_Probe::set_strmsg(const ::std::string& value) {
  
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMonitor_Probe.strMsg)
}
#if LANG_CXX11
inline void PBMonitor_Probe::set_strmsg(::std::string&& value) {
  
  strmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMonitor_Probe.strMsg)
}
#endif
inline void PBMonitor_Probe::set_strmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMonitor_Probe.strMsg)
}
inline void PBMonitor_Probe::set_strmsg(const char* value, size_t size) {
  
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMonitor_Probe.strMsg)
}
inline ::std::string* PBMonitor_Probe::mutable_strmsg() {
  
  // @@protoc_insertion_point(field_mutable:PBMonitor_Probe.strMsg)
  return strmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMonitor_Probe::release_strmsg() {
  // @@protoc_insertion_point(field_release:PBMonitor_Probe.strMsg)
  
  return strmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMonitor_Probe::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg != NULL) {
    
  } else {
    
  }
  strmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmsg);
  // @@protoc_insertion_point(field_set_allocated:PBMonitor_Probe.strMsg)
}

// -------------------------------------------------------------------

// PBMonitor_ProbeAck

// uint32 recordUTCTime = 1;
inline void PBMonitor_ProbeAck::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_ProbeAck::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.recordUTCTime)
}

// .PB_Enum_Software enum_ProbeSender_Software = 2;
inline void PBMonitor_ProbeAck::clear_enum_probesender_software() {
  enum_probesender_software_ = 0;
}
inline ::PB_Enum_Software PBMonitor_ProbeAck::enum_probesender_software() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.enum_ProbeSender_Software)
  return static_cast< ::PB_Enum_Software >(enum_probesender_software_);
}
inline void PBMonitor_ProbeAck::set_enum_probesender_software(::PB_Enum_Software value) {
  
  enum_probesender_software_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.enum_ProbeSender_Software)
}

// uint32 monitorProbeSequenceNumAcked = 3;
inline void PBMonitor_ProbeAck::clear_monitorprobesequencenumacked() {
  monitorprobesequencenumacked_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::monitorprobesequencenumacked() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.monitorProbeSequenceNumAcked)
  return monitorprobesequencenumacked_;
}
inline void PBMonitor_ProbeAck::set_monitorprobesequencenumacked(::google::protobuf::uint32 value) {
  
  monitorprobesequencenumacked_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.monitorProbeSequenceNumAcked)
}

// uint64 totalMessagesRcvd = 4;
inline void PBMonitor_ProbeAck::clear_totalmessagesrcvd() {
  totalmessagesrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::totalmessagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.totalMessagesRcvd)
  return totalmessagesrcvd_;
}
inline void PBMonitor_ProbeAck::set_totalmessagesrcvd(::google::protobuf::uint64 value) {
  
  totalmessagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.totalMessagesRcvd)
}

// uint64 origTargetPositionsRcvd = 5;
inline void PBMonitor_ProbeAck::clear_origtargetpositionsrcvd() {
  origtargetpositionsrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::origtargetpositionsrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.origTargetPositionsRcvd)
  return origtargetpositionsrcvd_;
}
inline void PBMonitor_ProbeAck::set_origtargetpositionsrcvd(::google::protobuf::uint64 value) {
  
  origtargetpositionsrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.origTargetPositionsRcvd)
}

// uint64 validOrigTargetPositionsRcvd = 6;
inline void PBMonitor_ProbeAck::clear_validorigtargetpositionsrcvd() {
  validorigtargetpositionsrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::validorigtargetpositionsrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.validOrigTargetPositionsRcvd)
  return validorigtargetpositionsrcvd_;
}
inline void PBMonitor_ProbeAck::set_validorigtargetpositionsrcvd(::google::protobuf::uint64 value) {
  
  validorigtargetpositionsrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.validOrigTargetPositionsRcvd)
}

// uint64 preprocessedTargetPositionsRcvd = 7;
inline void PBMonitor_ProbeAck::clear_preprocessedtargetpositionsrcvd() {
  preprocessedtargetpositionsrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::preprocessedtargetpositionsrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.preprocessedTargetPositionsRcvd)
  return preprocessedtargetpositionsrcvd_;
}
inline void PBMonitor_ProbeAck::set_preprocessedtargetpositionsrcvd(::google::protobuf::uint64 value) {
  
  preprocessedtargetpositionsrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.preprocessedTargetPositionsRcvd)
}

// uint64 fusedTargetPositionsRcvd = 8;
inline void PBMonitor_ProbeAck::clear_fusedtargetpositionsrcvd() {
  fusedtargetpositionsrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::fusedtargetpositionsrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.fusedTargetPositionsRcvd)
  return fusedtargetpositionsrcvd_;
}
inline void PBMonitor_ProbeAck::set_fusedtargetpositionsrcvd(::google::protobuf::uint64 value) {
  
  fusedtargetpositionsrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.fusedTargetPositionsRcvd)
}

// uint64 anomalyMessagesRcvd = 9;
inline void PBMonitor_ProbeAck::clear_anomalymessagesrcvd() {
  anomalymessagesrcvd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::anomalymessagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.anomalyMessagesRcvd)
  return anomalymessagesrcvd_;
}
inline void PBMonitor_ProbeAck::set_anomalymessagesrcvd(::google::protobuf::uint64 value) {
  
  anomalymessagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.anomalyMessagesRcvd)
}

// uint32 configMessagesRcvd = 10;
inline void PBMonitor_ProbeAck::clear_configmessagesrcvd() {
  configmessagesrcvd_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::configmessagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.configMessagesRcvd)
  return configmessagesrcvd_;
}
inline void PBMonitor_ProbeAck::set_configmessagesrcvd(::google::protobuf::uint32 value) {
  
  configmessagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.configMessagesRcvd)
}

// uint32 requestMessagesRcvd = 11;
inline void PBMonitor_ProbeAck::clear_requestmessagesrcvd() {
  requestmessagesrcvd_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::requestmessagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.requestMessagesRcvd)
  return requestmessagesrcvd_;
}
inline void PBMonitor_ProbeAck::set_requestmessagesrcvd(::google::protobuf::uint32 value) {
  
  requestmessagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.requestMessagesRcvd)
}

// uint32 commandMessagesRcvd = 12;
inline void PBMonitor_ProbeAck::clear_commandmessagesrcvd() {
  commandmessagesrcvd_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::commandmessagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.commandMessagesRcvd)
  return commandmessagesrcvd_;
}
inline void PBMonitor_ProbeAck::set_commandmessagesrcvd(::google::protobuf::uint32 value) {
  
  commandmessagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.commandMessagesRcvd)
}

// uint64 totalMessagesSent = 13;
inline void PBMonitor_ProbeAck::clear_totalmessagessent() {
  totalmessagessent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::totalmessagessent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.totalMessagesSent)
  return totalmessagessent_;
}
inline void PBMonitor_ProbeAck::set_totalmessagessent(::google::protobuf::uint64 value) {
  
  totalmessagessent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.totalMessagesSent)
}

// uint64 validOrigTargetPositionsSent = 14;
inline void PBMonitor_ProbeAck::clear_validorigtargetpositionssent() {
  validorigtargetpositionssent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::validorigtargetpositionssent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.validOrigTargetPositionsSent)
  return validorigtargetpositionssent_;
}
inline void PBMonitor_ProbeAck::set_validorigtargetpositionssent(::google::protobuf::uint64 value) {
  
  validorigtargetpositionssent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.validOrigTargetPositionsSent)
}

// uint64 preprocessedTargetPositionsSent = 15;
inline void PBMonitor_ProbeAck::clear_preprocessedtargetpositionssent() {
  preprocessedtargetpositionssent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::preprocessedtargetpositionssent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.preprocessedTargetPositionsSent)
  return preprocessedtargetpositionssent_;
}
inline void PBMonitor_ProbeAck::set_preprocessedtargetpositionssent(::google::protobuf::uint64 value) {
  
  preprocessedtargetpositionssent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.preprocessedTargetPositionsSent)
}

// uint64 fusedTargetPositionsSent = 16;
inline void PBMonitor_ProbeAck::clear_fusedtargetpositionssent() {
  fusedtargetpositionssent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::fusedtargetpositionssent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.fusedTargetPositionsSent)
  return fusedtargetpositionssent_;
}
inline void PBMonitor_ProbeAck::set_fusedtargetpositionssent(::google::protobuf::uint64 value) {
  
  fusedtargetpositionssent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.fusedTargetPositionsSent)
}

// uint64 anomalyMessagesSent = 17;
inline void PBMonitor_ProbeAck::clear_anomalymessagessent() {
  anomalymessagessent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_ProbeAck::anomalymessagessent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.anomalyMessagesSent)
  return anomalymessagessent_;
}
inline void PBMonitor_ProbeAck::set_anomalymessagessent(::google::protobuf::uint64 value) {
  
  anomalymessagessent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.anomalyMessagesSent)
}

// uint32 configMessagesSent = 18;
inline void PBMonitor_ProbeAck::clear_configmessagessent() {
  configmessagessent_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::configmessagessent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.configMessagesSent)
  return configmessagessent_;
}
inline void PBMonitor_ProbeAck::set_configmessagessent(::google::protobuf::uint32 value) {
  
  configmessagessent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.configMessagesSent)
}

// uint32 requestMessagesSent = 19;
inline void PBMonitor_ProbeAck::clear_requestmessagessent() {
  requestmessagessent_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::requestmessagessent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.requestMessagesSent)
  return requestmessagessent_;
}
inline void PBMonitor_ProbeAck::set_requestmessagessent(::google::protobuf::uint32 value) {
  
  requestmessagessent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.requestMessagesSent)
}

// uint32 commandMessagesSent = 20;
inline void PBMonitor_ProbeAck::clear_commandmessagessent() {
  commandmessagessent_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ProbeAck::commandmessagessent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ProbeAck.commandMessagesSent)
  return commandmessagessent_;
}
inline void PBMonitor_ProbeAck::set_commandmessagessent(::google::protobuf::uint32 value) {
  
  commandmessagessent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ProbeAck.commandMessagesSent)
}

// -------------------------------------------------------------------

// PBMonitor_ToXGS_SoftwareStatus

// uint32 recordUTCTime = 1;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_ToXGS_SoftwareStatus::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.recordUTCTime)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_XGS_HJFF_Status = 2;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_subsys_xgs_hjff_status() {
  subsys_xgs_hjff_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::subsys_xgs_hjff_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Subsys_XGS_HJFF_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(subsys_xgs_hjff_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_subsys_xgs_hjff_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  subsys_xgs_hjff_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Subsys_XGS_HJFF_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_ZHCL_Status = 3;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_subsys_zhcl_status() {
  subsys_zhcl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::subsys_zhcl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Subsys_ZHCL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(subsys_zhcl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_subsys_zhcl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  subsys_zhcl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Subsys_ZHCL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_XXFenXi_Status = 4;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_subsys_xxfenxi_status() {
  subsys_xxfenxi_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::subsys_xxfenxi_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Subsys_XXFenXi_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(subsys_xxfenxi_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_subsys_xxfenxi_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  subsys_xxfenxi_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Subsys_XXFenXi_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_YWGL_Status = 5;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_subsys_ywgl_status() {
  subsys_ywgl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::subsys_ywgl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Subsys_YWGL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(subsys_ywgl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_subsys_ywgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  subsys_ywgl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Subsys_YWGL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Subsys_SJGL_Status = 6;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_subsys_sjgl_status() {
  subsys_sjgl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::subsys_sjgl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Subsys_SJGL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(subsys_sjgl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_subsys_sjgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  subsys_sjgl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Subsys_SJGL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXZHCL_Status = 7;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_xxzhcl_status() {
  module_xxzhcl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_xxzhcl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_XXZHCL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_xxzhcl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_xxzhcl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_xxzhcl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_XXZHCL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXGL_Status = 8;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_xxgl_status() {
  module_xxgl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_xxgl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_XXGL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_xxgl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_xxgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_xxgl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_XXGL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XXFenFa_Status = 9;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_xxfenfa_status() {
  module_xxfenfa_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_xxfenfa_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_XXFenFa_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_xxfenfa_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_xxfenfa_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_xxfenfa_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_XXFenFa_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_JKTJ_Status = 10;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_jktj_status() {
  module_jktj_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_jktj_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_JKTJ_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_jktj_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_jktj_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_jktj_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_JKTJ_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_WJFX_Status = 11;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_wjfx_status() {
  module_wjfx_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_wjfx_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_WJFX_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_wjfx_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_wjfx_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_wjfx_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_WJFX_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_YCGJ_Status = 12;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_ycgj_status() {
  module_ycgj_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_ycgj_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_YCGJ_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_ycgj_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_ycgj_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_ycgj_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_YCGJ_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_XTJK_Status = 13;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_xtjk_status() {
  module_xtjk_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_xtjk_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_XTJK_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_xtjk_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_xtjk_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_xtjk_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_XTJK_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_YHQXGL_Status = 14;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_yhqxgl_status() {
  module_yhqxgl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_yhqxgl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_YHQXGL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_yhqxgl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_yhqxgl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_yhqxgl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_YHQXGL_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJYYGLWH_Status = 15;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_sjyyglwh_status() {
  module_sjyyglwh_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_sjyyglwh_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_SJYYGLWH_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_sjyyglwh_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_sjyyglwh_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_sjyyglwh_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_SJYYGLWH_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJKYXZTJK_Status = 16;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_sjkyxztjk_status() {
  module_sjkyxztjk_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_sjkyxztjk_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_SJKYXZTJK_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_sjkyxztjk_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_sjkyxztjk_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_sjkyxztjk_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_SJKYXZTJK_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_SJBFHF_Status = 17;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_sjbfhf_status() {
  module_sjbfhf_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_sjbfhf_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_SJBFHF_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_sjbfhf_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_sjbfhf_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_sjbfhf_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_SJBFHF_Status)
}

// .PBMonitor_ToXGS_SoftwareStatus.PB_Enum_XGS_SoftwareStatus Module_JRYCL_Status = 18;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_module_jrycl_status() {
  module_jrycl_status_ = 0;
}
inline ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus PBMonitor_ToXGS_SoftwareStatus::module_jrycl_status() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.Module_JRYCL_Status)
  return static_cast< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus >(module_jrycl_status_);
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_module_jrycl_status(::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus value) {
  
  module_jrycl_status_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.Module_JRYCL_Status)
}

// string errorDescription = 19;
inline void PBMonitor_ToXGS_SoftwareStatus::clear_errordescription() {
  errordescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMonitor_ToXGS_SoftwareStatus::errordescription() const {
  // @@protoc_insertion_point(field_get:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
  return errordescription_.GetNoArena();
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_errordescription(const ::std::string& value) {
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
}
#if LANG_CXX11
inline void PBMonitor_ToXGS_SoftwareStatus::set_errordescription(::std::string&& value) {
  
  errordescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
}
#endif
inline void PBMonitor_ToXGS_SoftwareStatus::set_errordescription(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_errordescription(const char* value, size_t size) {
  
  errordescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
}
inline ::std::string* PBMonitor_ToXGS_SoftwareStatus::mutable_errordescription() {
  
  // @@protoc_insertion_point(field_mutable:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
  return errordescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMonitor_ToXGS_SoftwareStatus::release_errordescription() {
  // @@protoc_insertion_point(field_release:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
  
  return errordescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMonitor_ToXGS_SoftwareStatus::set_allocated_errordescription(::std::string* errordescription) {
  if (errordescription != NULL) {
    
  } else {
    
  }
  errordescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errordescription);
  // @@protoc_insertion_point(field_set_allocated:PBMonitor_ToXGS_SoftwareStatus.errorDescription)
}

// -------------------------------------------------------------------

// PBMonitor_TargetDistribution

// uint32 recordUTCTime = 1;
inline void PBMonitor_TargetDistribution::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_TargetDistribution::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_TargetDistribution::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.recordUTCTime)
}

// int32 distribution_id = 2;
inline void PBMonitor_TargetDistribution::clear_distribution_id() {
  distribution_id_ = 0;
}
inline ::google::protobuf::int32 PBMonitor_TargetDistribution::distribution_id() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.distribution_id)
  return distribution_id_;
}
inline void PBMonitor_TargetDistribution::set_distribution_id(::google::protobuf::int32 value) {
  
  distribution_id_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.distribution_id)
}

// uint32 distributionStartUTCTime = 3;
inline void PBMonitor_TargetDistribution::clear_distributionstartutctime() {
  distributionstartutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_TargetDistribution::distributionstartutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.distributionStartUTCTime)
  return distributionstartutctime_;
}
inline void PBMonitor_TargetDistribution::set_distributionstartutctime(::google::protobuf::uint32 value) {
  
  distributionstartutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.distributionStartUTCTime)
}

// .PB_Enum_TargetDistributionStatus enum_DistributionState = 4;
inline void PBMonitor_TargetDistribution::clear_enum_distributionstate() {
  enum_distributionstate_ = 0;
}
inline ::PB_Enum_TargetDistributionStatus PBMonitor_TargetDistribution::enum_distributionstate() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.enum_DistributionState)
  return static_cast< ::PB_Enum_TargetDistributionStatus >(enum_distributionstate_);
}
inline void PBMonitor_TargetDistribution::set_enum_distributionstate(::PB_Enum_TargetDistributionStatus value) {
  
  enum_distributionstate_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.enum_DistributionState)
}

// uint64 message_Count_Sent = 5;
inline void PBMonitor_TargetDistribution::clear_message_count_sent() {
  message_count_sent_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMonitor_TargetDistribution::message_count_sent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.message_Count_Sent)
  return message_count_sent_;
}
inline void PBMonitor_TargetDistribution::set_message_count_sent(::google::protobuf::uint64 value) {
  
  message_count_sent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.message_Count_Sent)
}

// uint32 target_Count_Sent = 6;
inline void PBMonitor_TargetDistribution::clear_target_count_sent() {
  target_count_sent_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_TargetDistribution::target_count_sent() const {
  // @@protoc_insertion_point(field_get:PBMonitor_TargetDistribution.target_Count_Sent)
  return target_count_sent_;
}
inline void PBMonitor_TargetDistribution::set_target_count_sent(::google::protobuf::uint32 value) {
  
  target_count_sent_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_TargetDistribution.target_Count_Sent)
}

// -------------------------------------------------------------------

// PBMonitor_AliveTargetCount

// uint32 recordUTCTime = 1;
inline void PBMonitor_AliveTargetCount::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_AliveTargetCount::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_AliveTargetCount.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_AliveTargetCount::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_AliveTargetCount.recordUTCTime)
}

// .PB_Enum_TargetID_Type enum_targetID_Type = 2;
inline void PBMonitor_AliveTargetCount::clear_enum_targetid_type() {
  enum_targetid_type_ = 0;
}
inline ::PB_Enum_TargetID_Type PBMonitor_AliveTargetCount::enum_targetid_type() const {
  // @@protoc_insertion_point(field_get:PBMonitor_AliveTargetCount.enum_targetID_Type)
  return static_cast< ::PB_Enum_TargetID_Type >(enum_targetid_type_);
}
inline void PBMonitor_AliveTargetCount::set_enum_targetid_type(::PB_Enum_TargetID_Type value) {
  
  enum_targetid_type_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_AliveTargetCount.enum_targetID_Type)
}

// int32 aliveTargetcount = 3;
inline void PBMonitor_AliveTargetCount::clear_alivetargetcount() {
  alivetargetcount_ = 0;
}
inline ::google::protobuf::int32 PBMonitor_AliveTargetCount::alivetargetcount() const {
  // @@protoc_insertion_point(field_get:PBMonitor_AliveTargetCount.aliveTargetcount)
  return alivetargetcount_;
}
inline void PBMonitor_AliveTargetCount::set_alivetargetcount(::google::protobuf::int32 value) {
  
  alivetargetcount_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_AliveTargetCount.aliveTargetcount)
}

// -------------------------------------------------------------------

// PBMonitor_MessagesRcvdPerTargetInfoSourceAndType

// uint32 recordUTCTime = 1;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_recordutctime() {
  recordutctime_ = 0u;
}
inline ::google::protobuf::uint32 PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::recordutctime() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.recordUTCTime)
  return recordutctime_;
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_recordutctime(::google::protobuf::uint32 value) {
  
  recordutctime_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.recordUTCTime)
}

// .PB_Enum_TargetInfo_Source enum_targetInfo_Source = 2;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_enum_targetinfo_source() {
  enum_targetinfo_source_ = 0;
}
inline ::PB_Enum_TargetInfo_Source PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::enum_targetinfo_source() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.enum_targetInfo_Source)
  return static_cast< ::PB_Enum_TargetInfo_Source >(enum_targetinfo_source_);
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_enum_targetinfo_source(::PB_Enum_TargetInfo_Source value) {
  
  enum_targetinfo_source_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.enum_targetInfo_Source)
}

// .PB_Enum_TargetInfo_Type enum_targetInfo_Type = 3;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_enum_targetinfo_type() {
  enum_targetinfo_type_ = 0;
}
inline ::PB_Enum_TargetInfo_Type PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::enum_targetinfo_type() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.enum_targetInfo_Type)
  return static_cast< ::PB_Enum_TargetInfo_Type >(enum_targetinfo_type_);
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_enum_targetinfo_type(::PB_Enum_TargetInfo_Type value) {
  
  enum_targetinfo_type_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.enum_targetInfo_Type)
}

// int64 messagesRcvd = 4;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_messagesrcvd() {
  messagesrcvd_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::messagesrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.messagesRcvd)
  return messagesrcvd_;
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_messagesrcvd(::google::protobuf::int64 value) {
  
  messagesrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.messagesRcvd)
}

// int32 targetsRcvd = 5;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_targetsrcvd() {
  targetsrcvd_ = 0;
}
inline ::google::protobuf::int32 PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::targetsrcvd() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.targetsRcvd)
  return targetsrcvd_;
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_targetsrcvd(::google::protobuf::int32 value) {
  
  targetsrcvd_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.targetsRcvd)
}

// .PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.PB_Enum_MessagesRcvdStatus messagesRcvdStatus = 6;
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::clear_messagesrcvdstatus() {
  messagesrcvdstatus_ = 0;
}
inline ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::messagesrcvdstatus() const {
  // @@protoc_insertion_point(field_get:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.messagesRcvdStatus)
  return static_cast< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus >(messagesrcvdstatus_);
}
inline void PBMonitor_MessagesRcvdPerTargetInfoSourceAndType::set_messagesrcvdstatus(::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus value) {
  
  messagesrcvdstatus_ = value;
  // @@protoc_insertion_point(field_set:PBMonitor_MessagesRcvdPerTargetInfoSourceAndType.messagesRcvdStatus)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus>() {
  return ::PBMonitor_ToXGS_SoftwareStatus_PB_Enum_XGS_SoftwareStatus_descriptor();
}
template <> struct is_proto_enum< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus>() {
  return ::PBMonitor_MessagesRcvdPerTargetInfoSourceAndType_PB_Enum_MessagesRcvdStatus_descriptor();
}
template <> struct is_proto_enum< ::PB_Enum_TargetDistributionStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_Enum_TargetDistributionStatus>() {
  return ::PB_Enum_TargetDistributionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Monitor_2eproto
