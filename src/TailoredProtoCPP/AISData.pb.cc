// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AISData.proto

#include "AISData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class PBAISDynamicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBAISDynamic>
      _instance;
} _PBAISDynamic_default_instance_;
class PBAISStaticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBAISStatic>
      _instance;
} _PBAISStatic_default_instance_;
class PBAISVoyageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBAISVoyage>
      _instance;
} _PBAISVoyage_default_instance_;
namespace protobuf_AISData_2eproto {
static void InitDefaultsPBAISDynamic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBAISDynamic_default_instance_;
    new (ptr) ::PBAISDynamic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBAISDynamic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PBAISDynamic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBAISDynamic}, {}};

static void InitDefaultsPBAISStatic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBAISStatic_default_instance_;
    new (ptr) ::PBAISStatic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBAISStatic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PBAISStatic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBAISStatic}, {}};

static void InitDefaultsPBAISVoyage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBAISVoyage_default_instance_;
    new (ptr) ::PBAISVoyage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBAISVoyage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PBAISVoyage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBAISVoyage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBAISDynamic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBAISStatic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBAISVoyage.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, utctimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, mmsi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, intlongitudex60w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, intlatitudex60w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, cogdegreex10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, headingdegree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, sogknotsx10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, rot_sensor_degreeperminute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, enum_posaccuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISDynamic, enum_communstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, mmsi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, utctimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, shiptype_ais_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, imo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, shipname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, callsign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, breadthmeters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, lenghmeters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISStatic, fixingdevice_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, mmsi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, utctimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, eta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PBAISVoyage, draftmetersx10_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PBAISDynamic)},
  { 16, -1, sizeof(::PBAISStatic)},
  { 30, -1, sizeof(::PBAISVoyage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBAISDynamic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBAISStatic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PBAISVoyage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AISData.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rAISData.proto\"\305\002\n\014PBAISDynamic\022\024\n\014utcT"
      "imeStamp\030\001 \001(\r\022\014\n\004MMSI\030\002 \001(\005\022\030\n\020intLongi"
      "tudeX60W\030\003 \001(\005\022\027\n\017intLatitudeX60W\030\004 \001(\005\022"
      "\024\n\014COGDegreeX10\030\005 \001(\r\022\025\n\rheadingDegree\030\006"
      " \001(\r\022\023\n\013SOGKnotsX10\030\007 \001(\r\022\016\n\006Status\030\010 \001("
      "\r\022\"\n\032ROT_Sensor_DegreePerMinute\030\t \001(\005\0223\n"
      "\020enum_PosAccuracy\030\n \001(\0162\031.PB_Enum_AIS_Po"
      "s_Accuracy\0223\n\020enum_CommunState\030\013 \001(\0162\031.P"
      "B_Enum_AIS_Commum_State\"\326\001\n\013PBAISStatic\022"
      "\014\n\004MMSI\030\001 \001(\005\022\024\n\014utcTimeStamp\030\002 \001(\r\022\024\n\014s"
      "hipType_AIS\030\003 \001(\005\022\013\n\003IMO\030\004 \001(\005\022\020\n\010shipNa"
      "me\030\005 \001(\t\022\020\n\010callSign\030\006 \001(\t\022\025\n\rbreadthMet"
      "ers\030\007 \001(\r\022\023\n\013lenghMeters\030\010 \001(\r\0220\n\014fixing"
      "Device\030\t \001(\0162\032.PB_Enum_AIS_Fixing_Device"
      "\"k\n\013PBAISVoyage\022\014\n\004MMSI\030\001 \001(\005\022\024\n\014utcTime"
      "Stamp\030\002 \001(\r\022\023\n\013destination\030\003 \001(\t\022\013\n\003ETA\030"
      "\004 \001(\t\022\026\n\016draftMetersX10\030\005 \001(\r*c\n\035PB_Enum"
      "_AIS_Device_Class_Type\022 \n\034EV_AISDeviceCl"
      "assType_ClassA\020\000\022 \n\034EV_AISDeviceClassTyp"
      "e_ClassB\020\001*o\n\030PB_Enum_AIS_Commum_State\022\030"
      "\n\024EV_AISCommumState_NA\020\000\022\034\n\030EV_AISCommum"
      "State_SOTDMA\020\001\022\033\n\027EV_AISCommumState_ITDM"
      "A\020\002*k\n\030PB_Enum_AIS_Pos_Accuracy\022\030\n\024EV_AI"
      "SPosAccuracy_NA\020\000\022\031\n\025EV_AISPosAccuracy_L"
      "ow\020\001\022\032\n\026EV_AISPosAccuracy_High\020\002*\256\003\n\031PB_"
      "Enum_AIS_Fixing_Device\022\031\n\025EV_AISFixingDe"
      "vice_NA\020\000\022\032\n\026EV_AISFixingDevice_GPS\020\001\022\036\n"
      "\032EV_AISFixingDevice_GLONASS\020\002\022)\n%EV_AISF"
      "ixingDevice_CombinedGPSGLONASS\020\003\022\036\n\032EV_A"
      "ISFixingDevice_Loran_C\020\004\022\035\n\031EV_AISFixing"
      "Device_Chayka\020\005\022\'\n#EV_AISFixingDevice_In"
      "tegratedNavSys\020\006\022\037\n\033EV_AISFixingDevice_S"
      "urveyed\020\007\022\036\n\032EV_AISFixingDevice_Galileo\020"
      "\010\022\035\n\031EV_AISFixingDevice_Beidou\020\t\022\"\n\036EV_A"
      "ISFixingDevice_Observation\020\n\022#\n\037EV_AISFi"
      "xingDevice_InternalGNSS\020\017B\024\n\022team.iOcean"
      "Plus.PBb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1455);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AISData.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AISData_2eproto
const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Device_Class_Type_descriptor() {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AISData_2eproto::file_level_enum_descriptors[0];
}
bool PB_Enum_AIS_Device_Class_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Commum_State_descriptor() {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AISData_2eproto::file_level_enum_descriptors[1];
}
bool PB_Enum_AIS_Commum_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Pos_Accuracy_descriptor() {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AISData_2eproto::file_level_enum_descriptors[2];
}
bool PB_Enum_AIS_Pos_Accuracy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PB_Enum_AIS_Fixing_Device_descriptor() {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AISData_2eproto::file_level_enum_descriptors[3];
}
bool PB_Enum_AIS_Fixing_Device_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 15:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PBAISDynamic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISDynamic::kUtcTimeStampFieldNumber;
const int PBAISDynamic::kMMSIFieldNumber;
const int PBAISDynamic::kIntLongitudeX60WFieldNumber;
const int PBAISDynamic::kIntLatitudeX60WFieldNumber;
const int PBAISDynamic::kCOGDegreeX10FieldNumber;
const int PBAISDynamic::kHeadingDegreeFieldNumber;
const int PBAISDynamic::kSOGKnotsX10FieldNumber;
const int PBAISDynamic::kStatusFieldNumber;
const int PBAISDynamic::kROTSensorDegreePerMinuteFieldNumber;
const int PBAISDynamic::kEnumPosAccuracyFieldNumber;
const int PBAISDynamic::kEnumCommunStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISDynamic::PBAISDynamic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AISData_2eproto::scc_info_PBAISDynamic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISDynamic)
}
PBAISDynamic::PBAISDynamic(const PBAISDynamic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&utctimestamp_, &from.utctimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&enum_communstate_) -
    reinterpret_cast<char*>(&utctimestamp_)) + sizeof(enum_communstate_));
  // @@protoc_insertion_point(copy_constructor:PBAISDynamic)
}

void PBAISDynamic::SharedCtor() {
  ::memset(&utctimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_communstate_) -
      reinterpret_cast<char*>(&utctimestamp_)) + sizeof(enum_communstate_));
}

PBAISDynamic::~PBAISDynamic() {
  // @@protoc_insertion_point(destructor:PBAISDynamic)
  SharedDtor();
}

void PBAISDynamic::SharedDtor() {
}

void PBAISDynamic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBAISDynamic::descriptor() {
  ::protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBAISDynamic& PBAISDynamic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AISData_2eproto::scc_info_PBAISDynamic.base);
  return *internal_default_instance();
}


void PBAISDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&utctimestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enum_communstate_) -
      reinterpret_cast<char*>(&utctimestamp_)) + sizeof(enum_communstate_));
  _internal_metadata_.Clear();
}

bool PBAISDynamic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISDynamic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 utcTimeStamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MMSI = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intLongitudeX60W = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intlongitudex60w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intLatitudeX60W = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intlatitudex60w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 COGDegreeX10 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cogdegreex10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 headingDegree = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &headingdegree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SOGKnotsX10 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sogknotsx10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ROT_Sensor_DegreePerMinute = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rot_sensor_degreeperminute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_posaccuracy(static_cast< ::PB_Enum_AIS_Pos_Accuracy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_AIS_Commum_State enum_CommunState = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_enum_communstate(static_cast< ::PB_Enum_AIS_Commum_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISDynamic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISDynamic)
  return false;
#undef DO_
}

void PBAISDynamic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->utctimestamp(), output);
  }

  // int32 MMSI = 2;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mmsi(), output);
  }

  // int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intlongitudex60w(), output);
  }

  // int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->intlatitudex60w(), output);
  }

  // uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cogdegreex10(), output);
  }

  // uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->headingdegree(), output);
  }

  // uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->sogknotsx10(), output);
  }

  // uint32 Status = 8;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->status(), output);
  }

  // int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->rot_sensor_degreeperminute(), output);
  }

  // .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->enum_posaccuracy(), output);
  }

  // .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->enum_communstate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBAISDynamic)
}

::google::protobuf::uint8* PBAISDynamic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISDynamic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->utctimestamp(), target);
  }

  // int32 MMSI = 2;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mmsi(), target);
  }

  // int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intlongitudex60w(), target);
  }

  // int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->intlatitudex60w(), target);
  }

  // uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cogdegreex10(), target);
  }

  // uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->headingdegree(), target);
  }

  // uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->sogknotsx10(), target);
  }

  // uint32 Status = 8;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->status(), target);
  }

  // int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->rot_sensor_degreeperminute(), target);
  }

  // .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->enum_posaccuracy(), target);
  }

  // .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->enum_communstate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBAISDynamic)
  return target;
}

size_t PBAISDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISDynamic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 utcTimeStamp = 1;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // int32 MMSI = 2;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // int32 intLongitudeX60W = 3;
  if (this->intlongitudex60w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intlongitudex60w());
  }

  // int32 intLatitudeX60W = 4;
  if (this->intlatitudex60w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intlatitudex60w());
  }

  // uint32 COGDegreeX10 = 5;
  if (this->cogdegreex10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cogdegreex10());
  }

  // uint32 headingDegree = 6;
  if (this->headingdegree() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->headingdegree());
  }

  // uint32 SOGKnotsX10 = 7;
  if (this->sogknotsx10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sogknotsx10());
  }

  // uint32 Status = 8;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // int32 ROT_Sensor_DegreePerMinute = 9;
  if (this->rot_sensor_degreeperminute() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rot_sensor_degreeperminute());
  }

  // .PB_Enum_AIS_Pos_Accuracy enum_PosAccuracy = 10;
  if (this->enum_posaccuracy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_posaccuracy());
  }

  // .PB_Enum_AIS_Commum_State enum_CommunState = 11;
  if (this->enum_communstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->enum_communstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBAISDynamic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  const PBAISDynamic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISDynamic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISDynamic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISDynamic)
    MergeFrom(*source);
  }
}

void PBAISDynamic::MergeFrom(const PBAISDynamic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.intlongitudex60w() != 0) {
    set_intlongitudex60w(from.intlongitudex60w());
  }
  if (from.intlatitudex60w() != 0) {
    set_intlatitudex60w(from.intlatitudex60w());
  }
  if (from.cogdegreex10() != 0) {
    set_cogdegreex10(from.cogdegreex10());
  }
  if (from.headingdegree() != 0) {
    set_headingdegree(from.headingdegree());
  }
  if (from.sogknotsx10() != 0) {
    set_sogknotsx10(from.sogknotsx10());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.rot_sensor_degreeperminute() != 0) {
    set_rot_sensor_degreeperminute(from.rot_sensor_degreeperminute());
  }
  if (from.enum_posaccuracy() != 0) {
    set_enum_posaccuracy(from.enum_posaccuracy());
  }
  if (from.enum_communstate() != 0) {
    set_enum_communstate(from.enum_communstate());
  }
}

void PBAISDynamic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISDynamic::CopyFrom(const PBAISDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAISDynamic::IsInitialized() const {
  return true;
}

void PBAISDynamic::Swap(PBAISDynamic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISDynamic::InternalSwap(PBAISDynamic* other) {
  using std::swap;
  swap(utctimestamp_, other->utctimestamp_);
  swap(mmsi_, other->mmsi_);
  swap(intlongitudex60w_, other->intlongitudex60w_);
  swap(intlatitudex60w_, other->intlatitudex60w_);
  swap(cogdegreex10_, other->cogdegreex10_);
  swap(headingdegree_, other->headingdegree_);
  swap(sogknotsx10_, other->sogknotsx10_);
  swap(status_, other->status_);
  swap(rot_sensor_degreeperminute_, other->rot_sensor_degreeperminute_);
  swap(enum_posaccuracy_, other->enum_posaccuracy_);
  swap(enum_communstate_, other->enum_communstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBAISDynamic::GetMetadata() const {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBAISStatic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISStatic::kMMSIFieldNumber;
const int PBAISStatic::kUtcTimeStampFieldNumber;
const int PBAISStatic::kShipTypeAISFieldNumber;
const int PBAISStatic::kIMOFieldNumber;
const int PBAISStatic::kShipNameFieldNumber;
const int PBAISStatic::kCallSignFieldNumber;
const int PBAISStatic::kBreadthMetersFieldNumber;
const int PBAISStatic::kLenghMetersFieldNumber;
const int PBAISStatic::kFixingDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISStatic::PBAISStatic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AISData_2eproto::scc_info_PBAISStatic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISStatic)
}
PBAISStatic::PBAISStatic(const PBAISStatic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shipname().size() > 0) {
    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callsign().size() > 0) {
    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  ::memcpy(&mmsi_, &from.mmsi_,
    static_cast<size_t>(reinterpret_cast<char*>(&fixingdevice_) -
    reinterpret_cast<char*>(&mmsi_)) + sizeof(fixingdevice_));
  // @@protoc_insertion_point(copy_constructor:PBAISStatic)
}

void PBAISStatic::SharedCtor() {
  shipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fixingdevice_) -
      reinterpret_cast<char*>(&mmsi_)) + sizeof(fixingdevice_));
}

PBAISStatic::~PBAISStatic() {
  // @@protoc_insertion_point(destructor:PBAISStatic)
  SharedDtor();
}

void PBAISStatic::SharedDtor() {
  shipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBAISStatic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBAISStatic::descriptor() {
  ::protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBAISStatic& PBAISStatic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AISData_2eproto::scc_info_PBAISStatic.base);
  return *internal_default_instance();
}


void PBAISStatic::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fixingdevice_) -
      reinterpret_cast<char*>(&mmsi_)) + sizeof(fixingdevice_));
  _internal_metadata_.Clear();
}

bool PBAISStatic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISStatic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 MMSI = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 utcTimeStamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shipType_AIS = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shiptype_ais_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 IMO = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shipName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shipname().data(), static_cast<int>(this->shipname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISStatic.shipName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callSign = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callsign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callsign().data(), static_cast<int>(this->callsign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISStatic.callSign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 breadthMeters = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &breadthmeters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lenghMeters = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lenghmeters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fixingdevice(static_cast< ::PB_Enum_AIS_Fixing_Device >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISStatic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISStatic)
  return false;
#undef DO_
}

void PBAISStatic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mmsi(), output);
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->utctimestamp(), output);
  }

  // int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shiptype_ais(), output);
  }

  // int32 IMO = 4;
  if (this->imo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->imo(), output);
  }

  // string shipName = 5;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), static_cast<int>(this->shipname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.shipName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->shipname(), output);
  }

  // string callSign = 6;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), static_cast<int>(this->callsign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.callSign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->callsign(), output);
  }

  // uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->breadthmeters(), output);
  }

  // uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lenghmeters(), output);
  }

  // .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->fixingdevice(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBAISStatic)
}

::google::protobuf::uint8* PBAISStatic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISStatic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mmsi(), target);
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->utctimestamp(), target);
  }

  // int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shiptype_ais(), target);
  }

  // int32 IMO = 4;
  if (this->imo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->imo(), target);
  }

  // string shipName = 5;
  if (this->shipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shipname().data(), static_cast<int>(this->shipname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.shipName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->shipname(), target);
  }

  // string callSign = 6;
  if (this->callsign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callsign().data(), static_cast<int>(this->callsign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISStatic.callSign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->callsign(), target);
  }

  // uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->breadthmeters(), target);
  }

  // uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lenghmeters(), target);
  }

  // .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->fixingdevice(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBAISStatic)
  return target;
}

size_t PBAISStatic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISStatic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string shipName = 5;
  if (this->shipname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shipname());
  }

  // string callSign = 6;
  if (this->callsign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callsign());
  }

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // int32 shipType_AIS = 3;
  if (this->shiptype_ais() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shiptype_ais());
  }

  // int32 IMO = 4;
  if (this->imo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imo());
  }

  // uint32 breadthMeters = 7;
  if (this->breadthmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->breadthmeters());
  }

  // uint32 lenghMeters = 8;
  if (this->lenghmeters() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lenghmeters());
  }

  // .PB_Enum_AIS_Fixing_Device fixingDevice = 9;
  if (this->fixingdevice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fixingdevice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBAISStatic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISStatic)
  GOOGLE_DCHECK_NE(&from, this);
  const PBAISStatic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISStatic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISStatic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISStatic)
    MergeFrom(*source);
  }
}

void PBAISStatic::MergeFrom(const PBAISStatic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISStatic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shipname().size() > 0) {

    shipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipname_);
  }
  if (from.callsign().size() > 0) {

    callsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callsign_);
  }
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.shiptype_ais() != 0) {
    set_shiptype_ais(from.shiptype_ais());
  }
  if (from.imo() != 0) {
    set_imo(from.imo());
  }
  if (from.breadthmeters() != 0) {
    set_breadthmeters(from.breadthmeters());
  }
  if (from.lenghmeters() != 0) {
    set_lenghmeters(from.lenghmeters());
  }
  if (from.fixingdevice() != 0) {
    set_fixingdevice(from.fixingdevice());
  }
}

void PBAISStatic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISStatic::CopyFrom(const PBAISStatic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAISStatic::IsInitialized() const {
  return true;
}

void PBAISStatic::Swap(PBAISStatic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISStatic::InternalSwap(PBAISStatic* other) {
  using std::swap;
  shipname_.Swap(&other->shipname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callsign_.Swap(&other->callsign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mmsi_, other->mmsi_);
  swap(utctimestamp_, other->utctimestamp_);
  swap(shiptype_ais_, other->shiptype_ais_);
  swap(imo_, other->imo_);
  swap(breadthmeters_, other->breadthmeters_);
  swap(lenghmeters_, other->lenghmeters_);
  swap(fixingdevice_, other->fixingdevice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBAISStatic::GetMetadata() const {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PBAISVoyage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBAISVoyage::kMMSIFieldNumber;
const int PBAISVoyage::kUtcTimeStampFieldNumber;
const int PBAISVoyage::kDestinationFieldNumber;
const int PBAISVoyage::kETAFieldNumber;
const int PBAISVoyage::kDraftMetersX10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAISVoyage::PBAISVoyage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AISData_2eproto::scc_info_PBAISVoyage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBAISVoyage)
}
PBAISVoyage::PBAISVoyage(const PBAISVoyage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination().size() > 0) {
    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  eta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.eta().size() > 0) {
    eta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eta_);
  }
  ::memcpy(&mmsi_, &from.mmsi_,
    static_cast<size_t>(reinterpret_cast<char*>(&draftmetersx10_) -
    reinterpret_cast<char*>(&mmsi_)) + sizeof(draftmetersx10_));
  // @@protoc_insertion_point(copy_constructor:PBAISVoyage)
}

void PBAISVoyage::SharedCtor() {
  destination_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draftmetersx10_) -
      reinterpret_cast<char*>(&mmsi_)) + sizeof(draftmetersx10_));
}

PBAISVoyage::~PBAISVoyage() {
  // @@protoc_insertion_point(destructor:PBAISVoyage)
  SharedDtor();
}

void PBAISVoyage::SharedDtor() {
  destination_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBAISVoyage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBAISVoyage::descriptor() {
  ::protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBAISVoyage& PBAISVoyage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AISData_2eproto::scc_info_PBAISVoyage.base);
  return *internal_default_instance();
}


void PBAISVoyage::Clear() {
// @@protoc_insertion_point(message_clear_start:PBAISVoyage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destination_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mmsi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draftmetersx10_) -
      reinterpret_cast<char*>(&mmsi_)) + sizeof(draftmetersx10_));
  _internal_metadata_.Clear();
}

bool PBAISVoyage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBAISVoyage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 MMSI = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mmsi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 utcTimeStamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &utctimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination().data(), static_cast<int>(this->destination().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISVoyage.destination"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ETA = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eta()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eta().data(), static_cast<int>(this->eta().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBAISVoyage.ETA"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 draftMetersX10 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &draftmetersx10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBAISVoyage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBAISVoyage)
  return false;
#undef DO_
}

void PBAISVoyage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBAISVoyage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mmsi(), output);
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->utctimestamp(), output);
  }

  // string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination(), output);
  }

  // string ETA = 4;
  if (this->eta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eta().data(), static_cast<int>(this->eta().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.ETA");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->eta(), output);
  }

  // uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->draftmetersx10(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBAISVoyage)
}

::google::protobuf::uint8* PBAISVoyage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBAISVoyage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mmsi(), target);
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->utctimestamp(), target);
  }

  // string destination = 3;
  if (this->destination().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination().data(), static_cast<int>(this->destination().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination(), target);
  }

  // string ETA = 4;
  if (this->eta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eta().data(), static_cast<int>(this->eta().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBAISVoyage.ETA");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->eta(), target);
  }

  // uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->draftmetersx10(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBAISVoyage)
  return target;
}

size_t PBAISVoyage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBAISVoyage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string destination = 3;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination());
  }

  // string ETA = 4;
  if (this->eta().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eta());
  }

  // int32 MMSI = 1;
  if (this->mmsi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mmsi());
  }

  // uint32 utcTimeStamp = 2;
  if (this->utctimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->utctimestamp());
  }

  // uint32 draftMetersX10 = 5;
  if (this->draftmetersx10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->draftmetersx10());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBAISVoyage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBAISVoyage)
  GOOGLE_DCHECK_NE(&from, this);
  const PBAISVoyage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAISVoyage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBAISVoyage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBAISVoyage)
    MergeFrom(*source);
  }
}

void PBAISVoyage::MergeFrom(const PBAISVoyage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBAISVoyage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.destination().size() > 0) {

    destination_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_);
  }
  if (from.eta().size() > 0) {

    eta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eta_);
  }
  if (from.mmsi() != 0) {
    set_mmsi(from.mmsi());
  }
  if (from.utctimestamp() != 0) {
    set_utctimestamp(from.utctimestamp());
  }
  if (from.draftmetersx10() != 0) {
    set_draftmetersx10(from.draftmetersx10());
  }
}

void PBAISVoyage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBAISVoyage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAISVoyage::CopyFrom(const PBAISVoyage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBAISVoyage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAISVoyage::IsInitialized() const {
  return true;
}

void PBAISVoyage::Swap(PBAISVoyage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAISVoyage::InternalSwap(PBAISVoyage* other) {
  using std::swap;
  destination_.Swap(&other->destination_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  eta_.Swap(&other->eta_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mmsi_, other->mmsi_);
  swap(utctimestamp_, other->utctimestamp_);
  swap(draftmetersx10_, other->draftmetersx10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBAISVoyage::GetMetadata() const {
  protobuf_AISData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AISData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBAISDynamic* Arena::CreateMaybeMessage< ::PBAISDynamic >(Arena* arena) {
  return Arena::CreateInternal< ::PBAISDynamic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBAISStatic* Arena::CreateMaybeMessage< ::PBAISStatic >(Arena* arena) {
  return Arena::CreateInternal< ::PBAISStatic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PBAISVoyage* Arena::CreateMaybeMessage< ::PBAISVoyage >(Arena* arena) {
  return Arena::CreateInternal< ::PBAISVoyage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
